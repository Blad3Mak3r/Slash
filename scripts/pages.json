[{"name":"ALL()","description":"tv.blademaker.slash.annotations.InteractionTarget.ALL","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/-a-l-l/index.html","searchKeys":["ALL","ALL()","tv.blademaker.slash.annotations.InteractionTarget.ALL"]},{"name":"BOOLEAN(Boolean::class, OptionConverter.BooleanOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.BOOLEAN","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN(Boolean::class, OptionConverter.BooleanOption)","tv.blademaker.slash.internal.ValidOptionTypes.BOOLEAN"]},{"name":"BOT()","description":"tv.blademaker.slash.PermissionTarget.BOT","location":"-slash/tv.blademaker.slash/-permission-target/-b-o-t/index.html","searchKeys":["BOT","BOT()","tv.blademaker.slash.PermissionTarget.BOT"]},{"name":"CHANNEL()","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.CHANNEL","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/-c-h-a-n-n-e-l/index.html","searchKeys":["CHANNEL","CHANNEL()","tv.blademaker.slash.ratelimit.RateLimit.Target.CHANNEL"]},{"name":"DM()","description":"tv.blademaker.slash.annotations.InteractionTarget.DM","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/-d-m/index.html","searchKeys":["DM","DM()","tv.blademaker.slash.annotations.InteractionTarget.DM"]},{"name":"DOUBLE(Double::class, OptionConverter.DoubleOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.DOUBLE","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-d-o-u-b-l-e/index.html","searchKeys":["DOUBLE","DOUBLE(Double::class, OptionConverter.DoubleOption)","tv.blademaker.slash.internal.ValidOptionTypes.DOUBLE"]},{"name":"FLOAT(Float::class, OptionConverter.FloatOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.FLOAT","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-f-l-o-a-t/index.html","searchKeys":["FLOAT","FLOAT(Float::class, OptionConverter.FloatOption)","tv.blademaker.slash.internal.ValidOptionTypes.FLOAT"]},{"name":"GUILD()","description":"tv.blademaker.slash.annotations.InteractionTarget.GUILD","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/-g-u-i-l-d/index.html","searchKeys":["GUILD","GUILD()","tv.blademaker.slash.annotations.InteractionTarget.GUILD"]},{"name":"GUILD()","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.GUILD","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/-g-u-i-l-d/index.html","searchKeys":["GUILD","GUILD()","tv.blademaker.slash.ratelimit.RateLimit.Target.GUILD"]},{"name":"GUILD_CHANNEL(GuildChannel::class, OptionConverter.GuildChannelOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-g-u-i-l-d_-c-h-a-n-n-e-l/index.html","searchKeys":["GUILD_CHANNEL","GUILD_CHANNEL(GuildChannel::class, OptionConverter.GuildChannelOption)","tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CHANNEL"]},{"name":"INTEGER(Int::class, OptionConverter.IntOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.INTEGER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-i-n-t-e-g-e-r/index.html","searchKeys":["INTEGER","INTEGER(Int::class, OptionConverter.IntOption)","tv.blademaker.slash.internal.ValidOptionTypes.INTEGER"]},{"name":"LONG(Long::class, OptionConverter.LongOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.LONG","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-l-o-n-g/index.html","searchKeys":["LONG","LONG(Long::class, OptionConverter.LongOption)","tv.blademaker.slash.internal.ValidOptionTypes.LONG"]},{"name":"MEMBER(Member::class, OptionConverter.MemberOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.MEMBER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-m-e-m-b-e-r/index.html","searchKeys":["MEMBER","MEMBER(Member::class, OptionConverter.MemberOption)","tv.blademaker.slash.internal.ValidOptionTypes.MEMBER"]},{"name":"MESSAGE_CHANNEL(String::class, OptionConverter.MessageChannelOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.MESSAGE_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-m-e-s-s-a-g-e_-c-h-a-n-n-e-l/index.html","searchKeys":["MESSAGE_CHANNEL","MESSAGE_CHANNEL(String::class, OptionConverter.MessageChannelOption)","tv.blademaker.slash.internal.ValidOptionTypes.MESSAGE_CHANNEL"]},{"name":"ROLE(Role::class, OptionConverter.RoleOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.ROLE","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-r-o-l-e/index.html","searchKeys":["ROLE","ROLE(Role::class, OptionConverter.RoleOption)","tv.blademaker.slash.internal.ValidOptionTypes.ROLE"]},{"name":"STRING(String::class, OptionConverter.StringOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.STRING","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING(String::class, OptionConverter.StringOption)","tv.blademaker.slash.internal.ValidOptionTypes.STRING"]},{"name":"TEXT_CHANNEL(TextChannel::class, OptionConverter.TextChannelOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.TEXT_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-t-e-x-t_-c-h-a-n-n-e-l/index.html","searchKeys":["TEXT_CHANNEL","TEXT_CHANNEL(TextChannel::class, OptionConverter.TextChannelOption)","tv.blademaker.slash.internal.ValidOptionTypes.TEXT_CHANNEL"]},{"name":"USER()","description":"tv.blademaker.slash.PermissionTarget.USER","location":"-slash/tv.blademaker.slash/-permission-target/-u-s-e-r/index.html","searchKeys":["USER","USER()","tv.blademaker.slash.PermissionTarget.USER"]},{"name":"USER()","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.USER","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/-u-s-e-r/index.html","searchKeys":["USER","USER()","tv.blademaker.slash.ratelimit.RateLimit.Target.USER"]},{"name":"USER(User::class, OptionConverter.UserOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.USER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-u-s-e-r/index.html","searchKeys":["USER","USER(User::class, OptionConverter.UserOption)","tv.blademaker.slash.internal.ValidOptionTypes.USER"]},{"name":"VOICE_CHANNEL(VoiceChannel::class, OptionConverter.VoiceChannelOption)","description":"tv.blademaker.slash.internal.ValidOptionTypes.VOICE_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-v-o-i-c-e_-c-h-a-n-n-e-l/index.html","searchKeys":["VOICE_CHANNEL","VOICE_CHANNEL(VoiceChannel::class, OptionConverter.VoiceChannelOption)","tv.blademaker.slash.internal.ValidOptionTypes.VOICE_CHANNEL"]},{"name":"abstract class BaseSlashCommand(commandName: String)","description":"tv.blademaker.slash.BaseSlashCommand","location":"-slash/tv.blademaker.slash/-base-slash-command/index.html","searchKeys":["BaseSlashCommand","abstract class BaseSlashCommand(commandName: String)","tv.blademaker.slash.BaseSlashCommand"]},{"name":"abstract fun onCommandAutoCompleteEvent(event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.client.SlashCommandClient.onCommandAutoCompleteEvent","location":"-slash/tv.blademaker.slash.client/-slash-command-client/on-command-auto-complete-event.html","searchKeys":["onCommandAutoCompleteEvent","abstract fun onCommandAutoCompleteEvent(event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.client.SlashCommandClient.onCommandAutoCompleteEvent"]},{"name":"abstract fun onException(ex: Exception, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Exception, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onException(ex: Exception, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Exception, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onInteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-interaction-target-mismatch.html","searchKeys":["onInteractionTargetMismatch","abstract fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","tv.blademaker.slash.exceptions.ExceptionHandler.onInteractionTargetMismatch"]},{"name":"abstract fun onPermissionLackException(ex: PermissionsLackException)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onPermissionLackException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-permission-lack-exception.html","searchKeys":["onPermissionLackException","abstract fun onPermissionLackException(ex: PermissionsLackException)","tv.blademaker.slash.exceptions.ExceptionHandler.onPermissionLackException"]},{"name":"abstract fun onSlashCommandEvent(event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.client.SlashCommandClient.onSlashCommandEvent","location":"-slash/tv.blademaker.slash.client/-slash-command-client/on-slash-command-event.html","searchKeys":["onSlashCommandEvent","abstract fun onSlashCommandEvent(event: SlashCommandInteractionEvent)","tv.blademaker.slash.client.SlashCommandClient.onSlashCommandEvent"]},{"name":"abstract fun reply(): ReplyCallbackAction","description":"tv.blademaker.slash.context.actions.ContextAction.reply","location":"-slash/tv.blademaker.slash.context.actions/-context-action/reply.html","searchKeys":["reply","abstract fun reply(): ReplyCallbackAction","tv.blademaker.slash.context.actions.ContextAction.reply"]},{"name":"abstract fun send(): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.actions.ContextAction.send","location":"-slash/tv.blademaker.slash.context.actions/-context-action/send.html","searchKeys":["send","abstract fun send(): WebhookMessageAction<Message>","tv.blademaker.slash.context.actions.ContextAction.send"]},{"name":"abstract val configuration: ContextAction.Configuration","description":"tv.blademaker.slash.context.actions.ContextAction.configuration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/configuration.html","searchKeys":["configuration","abstract val configuration: ContextAction.Configuration","tv.blademaker.slash.context.actions.ContextAction.configuration"]},{"name":"abstract val ctx: SlashCommandContext","description":"tv.blademaker.slash.context.actions.ContextAction.ctx","location":"-slash/tv.blademaker.slash.context.actions/-context-action/ctx.html","searchKeys":["ctx","abstract val ctx: SlashCommandContext","tv.blademaker.slash.context.actions.ContextAction.ctx"]},{"name":"abstract val event: E","description":"tv.blademaker.slash.context.InteractionContext.event","location":"-slash/tv.blademaker.slash.context/-interaction-context/event.html","searchKeys":["event","abstract val event: E","tv.blademaker.slash.context.InteractionContext.event"]},{"name":"abstract val exceptionHandler: ExceptionHandler","description":"tv.blademaker.slash.client.SlashCommandClient.exceptionHandler","location":"-slash/tv.blademaker.slash.client/-slash-command-client/exception-handler.html","searchKeys":["exceptionHandler","abstract val exceptionHandler: ExceptionHandler","tv.blademaker.slash.client.SlashCommandClient.exceptionHandler"]},{"name":"abstract val original: T","description":"tv.blademaker.slash.context.actions.ContextAction.original","location":"-slash/tv.blademaker.slash.context.actions/-context-action/original.html","searchKeys":["original","abstract val original: T","tv.blademaker.slash.context.actions.ContextAction.original"]},{"name":"abstract val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.Handler.parent","location":"-slash/tv.blademaker.slash.internal/-handler/parent.html","searchKeys":["parent","abstract val parent: BaseSlashCommand","tv.blademaker.slash.internal.Handler.parent"]},{"name":"abstract val path: String","description":"tv.blademaker.slash.internal.Handler.path","location":"-slash/tv.blademaker.slash.internal/-handler/path.html","searchKeys":["path","abstract val path: String","tv.blademaker.slash.internal.Handler.path"]},{"name":"abstract val registry: List<BaseSlashCommand>","description":"tv.blademaker.slash.client.SlashCommandClient.registry","location":"-slash/tv.blademaker.slash.client/-slash-command-client/registry.html","searchKeys":["registry","abstract val registry: List<BaseSlashCommand>","tv.blademaker.slash.client.SlashCommandClient.registry"]},{"name":"abstract var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.context.SlashCommandContext.extra","location":"-slash/tv.blademaker.slash.context/-slash-command-context/extra.html","searchKeys":["extra","abstract var extra: AtomicReference<Any?>","tv.blademaker.slash.context.SlashCommandContext.extra"]},{"name":"annotation class AutoComplete(name: String, group: String, optionName: String)","description":"tv.blademaker.slash.annotations.AutoComplete","location":"-slash/tv.blademaker.slash.annotations/-auto-complete/index.html","searchKeys":["AutoComplete","annotation class AutoComplete(name: String, group: String, optionName: String)","tv.blademaker.slash.annotations.AutoComplete"]},{"name":"annotation class OptionName(value: String)","description":"tv.blademaker.slash.annotations.OptionName","location":"-slash/tv.blademaker.slash.annotations/-option-name/index.html","searchKeys":["OptionName","annotation class OptionName(value: String)","tv.blademaker.slash.annotations.OptionName"]},{"name":"annotation class Permissions(user: Array<Permission>, bot: Array<Permission>)","description":"tv.blademaker.slash.annotations.Permissions","location":"-slash/tv.blademaker.slash.annotations/-permissions/index.html","searchKeys":["Permissions","annotation class Permissions(user: Array<Permission>, bot: Array<Permission>)","tv.blademaker.slash.annotations.Permissions"]},{"name":"annotation class RateLimit(quota: Int, duration: Long, unit: TimeUnit, target: RateLimit.Target)","description":"tv.blademaker.slash.ratelimit.RateLimit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/index.html","searchKeys":["RateLimit","annotation class RateLimit(quota: Int, duration: Long, unit: TimeUnit, target: RateLimit.Target)","tv.blademaker.slash.ratelimit.RateLimit"]},{"name":"annotation class SlashCommand(name: String, group: String, target: InteractionTarget)","description":"tv.blademaker.slash.annotations.SlashCommand","location":"-slash/tv.blademaker.slash.annotations/-slash-command/index.html","searchKeys":["SlashCommand","annotation class SlashCommand(name: String, group: String, target: InteractionTarget)","tv.blademaker.slash.annotations.SlashCommand"]},{"name":"class AutoCompleteContext(event: CommandAutoCompleteInteractionEvent) : CommandAutoCompleteInteraction","description":"tv.blademaker.slash.context.AutoCompleteContext","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/index.html","searchKeys":["AutoCompleteContext","class AutoCompleteContext(event: CommandAutoCompleteInteractionEvent) : CommandAutoCompleteInteraction","tv.blademaker.slash.context.AutoCompleteContext"]},{"name":"class AutoCompleteHandler(parent: BaseSlashCommand, function: KFunction<*>) : Handler","description":"tv.blademaker.slash.internal.AutoCompleteHandler","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/index.html","searchKeys":["AutoCompleteHandler","class AutoCompleteHandler(parent: BaseSlashCommand, function: KFunction<*>) : Handler","tv.blademaker.slash.internal.AutoCompleteHandler"]},{"name":"class Configuration","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/index.html","searchKeys":["Configuration","class Configuration","tv.blademaker.slash.context.actions.ContextAction.Configuration"]},{"name":"class Configuration","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-configuration/index.html","searchKeys":["Configuration","class Configuration","tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration"]},{"name":"class ContextCreatorImpl : ContextCreator","description":"tv.blademaker.slash.context.impl.ContextCreatorImpl","location":"-slash/tv.blademaker.slash.context.impl/-context-creator-impl/index.html","searchKeys":["ContextCreatorImpl","class ContextCreatorImpl : ContextCreator","tv.blademaker.slash.context.impl.ContextCreatorImpl"]},{"name":"class DefaultSlashCommandBuilder(packageName: String)","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/index.html","searchKeys":["DefaultSlashCommandBuilder","class DefaultSlashCommandBuilder(packageName: String)","tv.blademaker.slash.client.DefaultSlashCommandBuilder"]},{"name":"class DefaultSlashCommandClient : SlashCommandClient","description":"tv.blademaker.slash.client.DefaultSlashCommandClient","location":"-slash/tv.blademaker.slash.client/-default-slash-command-client/index.html","searchKeys":["DefaultSlashCommandClient","class DefaultSlashCommandClient : SlashCommandClient","tv.blademaker.slash.client.DefaultSlashCommandClient"]},{"name":"class EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed) : ContextAction<MessageEmbed> ","description":"tv.blademaker.slash.context.actions.EmbedContextAction","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/index.html","searchKeys":["EmbedContextAction","class EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed) : ContextAction<MessageEmbed> ","tv.blademaker.slash.context.actions.EmbedContextAction"]},{"name":"class ExceptionHandlerImpl : ExceptionHandler","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/index.html","searchKeys":["ExceptionHandlerImpl","class ExceptionHandlerImpl : ExceptionHandler","tv.blademaker.slash.exceptions.ExceptionHandlerImpl"]},{"name":"class GuildSlashCommandContextImpl(event: SlashCommandInteractionEvent) : GuildSlashCommandContext","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/index.html","searchKeys":["GuildSlashCommandContextImpl","class GuildSlashCommandContextImpl(event: SlashCommandInteractionEvent) : GuildSlashCommandContext","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl"]},{"name":"class InteractionTargetMismatch(context: SlashCommandContext, commandPath: String, target: InteractionTarget) : RuntimeException","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/index.html","searchKeys":["InteractionTargetMismatch","class InteractionTargetMismatch(context: SlashCommandContext, commandPath: String, target: InteractionTarget) : RuntimeException","tv.blademaker.slash.exceptions.InteractionTargetMismatch"]},{"name":"class MessageContextAction(ctx: SlashCommandContext, original: Message) : ContextAction<Message> ","description":"tv.blademaker.slash.context.actions.MessageContextAction","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/index.html","searchKeys":["MessageContextAction","class MessageContextAction(ctx: SlashCommandContext, original: Message) : ContextAction<Message> ","tv.blademaker.slash.context.actions.MessageContextAction"]},{"name":"class MetricsStrategy","description":"tv.blademaker.slash.metrics.MetricsStrategy","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/index.html","searchKeys":["MetricsStrategy","class MetricsStrategy","tv.blademaker.slash.metrics.MetricsStrategy"]},{"name":"class PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>) : RuntimeException","description":"tv.blademaker.slash.exceptions.PermissionsLackException","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/index.html","searchKeys":["PermissionsLackException","class PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>) : RuntimeException","tv.blademaker.slash.exceptions.PermissionsLackException"]},{"name":"class RateLimitHandler(configuration: RateLimitHandler.Configuration)","description":"tv.blademaker.slash.ratelimit.RateLimitHandler","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/index.html","searchKeys":["RateLimitHandler","class RateLimitHandler(configuration: RateLimitHandler.Configuration)","tv.blademaker.slash.ratelimit.RateLimitHandler"]},{"name":"class RateLimitThreadFactory : ThreadFactory","description":"tv.blademaker.slash.ratelimit.RateLimitThreadFactory","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-thread-factory/index.html","searchKeys":["RateLimitThreadFactory","class RateLimitThreadFactory : ThreadFactory","tv.blademaker.slash.ratelimit.RateLimitThreadFactory"]},{"name":"class SlashCommandContextImpl(event: SlashCommandInteractionEvent) : SlashCommandContext","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/index.html","searchKeys":["SlashCommandContextImpl","class SlashCommandContextImpl(event: SlashCommandInteractionEvent) : SlashCommandContext","tv.blademaker.slash.context.impl.SlashCommandContextImpl"]},{"name":"class SlashCommandHandler(parent: BaseSlashCommand, function: KFunction<*>) : Handler","description":"tv.blademaker.slash.internal.SlashCommandHandler","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/index.html","searchKeys":["SlashCommandHandler","class SlashCommandHandler(parent: BaseSlashCommand, function: KFunction<*>) : Handler","tv.blademaker.slash.internal.SlashCommandHandler"]},{"name":"data class Bucket(remaining: AtomicInteger, resetAfter: Long)","description":"tv.blademaker.slash.ratelimit.Bucket","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/index.html","searchKeys":["Bucket","data class Bucket(remaining: AtomicInteger, resetAfter: Long)","tv.blademaker.slash.ratelimit.Bucket"]},{"name":"data class DiscoveryResult(elapsedTime: Long, commands: List<BaseSlashCommand>)","description":"tv.blademaker.slash.DiscoveryResult","location":"-slash/tv.blademaker.slash/-discovery-result/index.html","searchKeys":["DiscoveryResult","data class DiscoveryResult(elapsedTime: Long, commands: List<BaseSlashCommand>)","tv.blademaker.slash.DiscoveryResult"]},{"name":"enum InteractionTarget : Enum<InteractionTarget> ","description":"tv.blademaker.slash.annotations.InteractionTarget","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/index.html","searchKeys":["InteractionTarget","enum InteractionTarget : Enum<InteractionTarget> ","tv.blademaker.slash.annotations.InteractionTarget"]},{"name":"enum PermissionTarget : Enum<PermissionTarget> ","description":"tv.blademaker.slash.PermissionTarget","location":"-slash/tv.blademaker.slash/-permission-target/index.html","searchKeys":["PermissionTarget","enum PermissionTarget : Enum<PermissionTarget> ","tv.blademaker.slash.PermissionTarget"]},{"name":"enum Target : Enum<RateLimit.Target> ","description":"tv.blademaker.slash.ratelimit.RateLimit.Target","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/index.html","searchKeys":["Target","enum Target : Enum<RateLimit.Target> ","tv.blademaker.slash.ratelimit.RateLimit.Target"]},{"name":"enum ValidOptionTypes : Enum<ValidOptionTypes> ","description":"tv.blademaker.slash.internal.ValidOptionTypes","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/index.html","searchKeys":["ValidOptionTypes","enum ValidOptionTypes : Enum<ValidOptionTypes> ","tv.blademaker.slash.internal.ValidOptionTypes"]},{"name":"fun Array<Permission>.toHuman(jump: Boolean = false): String","description":"tv.blademaker.slash.SlashUtils.toHuman","location":"-slash/tv.blademaker.slash/-slash-utils/to-human.html","searchKeys":["toHuman","fun Array<Permission>.toHuman(jump: Boolean = false): String","tv.blademaker.slash.SlashUtils.toHuman"]},{"name":"fun AutoComplete(name: String = \"\", group: String = \"\", optionName: String)","description":"tv.blademaker.slash.annotations.AutoComplete.AutoComplete","location":"-slash/tv.blademaker.slash.annotations/-auto-complete/-auto-complete.html","searchKeys":["AutoComplete","fun AutoComplete(name: String = \"\", group: String = \"\", optionName: String)","tv.blademaker.slash.annotations.AutoComplete.AutoComplete"]},{"name":"fun AutoCompleteContext(event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.context.AutoCompleteContext.AutoCompleteContext","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/-auto-complete-context.html","searchKeys":["AutoCompleteContext","fun AutoCompleteContext(event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.context.AutoCompleteContext.AutoCompleteContext"]},{"name":"fun AutoCompleteHandler(parent: BaseSlashCommand, function: KFunction<*>)","description":"tv.blademaker.slash.internal.AutoCompleteHandler.AutoCompleteHandler","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/-auto-complete-handler.html","searchKeys":["AutoCompleteHandler","fun AutoCompleteHandler(parent: BaseSlashCommand, function: KFunction<*>)","tv.blademaker.slash.internal.AutoCompleteHandler.AutoCompleteHandler"]},{"name":"fun BaseSlashCommand(commandName: String)","description":"tv.blademaker.slash.BaseSlashCommand.BaseSlashCommand","location":"-slash/tv.blademaker.slash/-base-slash-command/-base-slash-command.html","searchKeys":["BaseSlashCommand","fun BaseSlashCommand(commandName: String)","tv.blademaker.slash.BaseSlashCommand.BaseSlashCommand"]},{"name":"fun Bucket(annotation: RateLimit)","description":"tv.blademaker.slash.ratelimit.Bucket.Bucket","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/-bucket.html","searchKeys":["Bucket","fun Bucket(annotation: RateLimit)","tv.blademaker.slash.ratelimit.Bucket.Bucket"]},{"name":"fun Bucket(remaining: AtomicInteger, resetAfter: Long)","description":"tv.blademaker.slash.ratelimit.Bucket.Bucket","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/-bucket.html","searchKeys":["Bucket","fun Bucket(remaining: AtomicInteger, resetAfter: Long)","tv.blademaker.slash.ratelimit.Bucket.Bucket"]},{"name":"fun Configuration()","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration.Configuration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/-configuration.html","searchKeys":["Configuration","fun Configuration()","tv.blademaker.slash.context.actions.ContextAction.Configuration.Configuration"]},{"name":"fun Configuration()","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.Configuration","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-configuration/-configuration.html","searchKeys":["Configuration","fun Configuration()","tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.Configuration"]},{"name":"fun ContextCreatorImpl()","description":"tv.blademaker.slash.context.impl.ContextCreatorImpl.ContextCreatorImpl","location":"-slash/tv.blademaker.slash.context.impl/-context-creator-impl/-context-creator-impl.html","searchKeys":["ContextCreatorImpl","fun ContextCreatorImpl()","tv.blademaker.slash.context.impl.ContextCreatorImpl.ContextCreatorImpl"]},{"name":"fun DefaultSlashCommandBuilder(packageName: String)","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.DefaultSlashCommandBuilder","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/-default-slash-command-builder.html","searchKeys":["DefaultSlashCommandBuilder","fun DefaultSlashCommandBuilder(packageName: String)","tv.blademaker.slash.client.DefaultSlashCommandBuilder.DefaultSlashCommandBuilder"]},{"name":"fun DiscoveryResult(elapsedTime: Long, commands: List<BaseSlashCommand>)","description":"tv.blademaker.slash.DiscoveryResult.DiscoveryResult","location":"-slash/tv.blademaker.slash/-discovery-result/-discovery-result.html","searchKeys":["DiscoveryResult","fun DiscoveryResult(elapsedTime: Long, commands: List<BaseSlashCommand>)","tv.blademaker.slash.DiscoveryResult.DiscoveryResult"]},{"name":"fun EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed)","description":"tv.blademaker.slash.context.actions.EmbedContextAction.EmbedContextAction","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/-embed-context-action.html","searchKeys":["EmbedContextAction","fun EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed)","tv.blademaker.slash.context.actions.EmbedContextAction.EmbedContextAction"]},{"name":"fun ExceptionHandlerImpl()","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.ExceptionHandlerImpl","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/-exception-handler-impl.html","searchKeys":["ExceptionHandlerImpl","fun ExceptionHandlerImpl()","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.ExceptionHandlerImpl"]},{"name":"fun GuildSlashCommandContextImpl(event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.GuildSlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/-guild-slash-command-context-impl.html","searchKeys":["GuildSlashCommandContextImpl","fun GuildSlashCommandContextImpl(event: SlashCommandInteractionEvent)","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.GuildSlashCommandContextImpl"]},{"name":"fun InteractionTargetMismatch(context: SlashCommandContext, commandPath: String, target: InteractionTarget)","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.InteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/-interaction-target-mismatch.html","searchKeys":["InteractionTargetMismatch","fun InteractionTargetMismatch(context: SlashCommandContext, commandPath: String, target: InteractionTarget)","tv.blademaker.slash.exceptions.InteractionTargetMismatch.InteractionTargetMismatch"]},{"name":"fun MessageContextAction(ctx: SlashCommandContext, original: Message)","description":"tv.blademaker.slash.context.actions.MessageContextAction.MessageContextAction","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/-message-context-action.html","searchKeys":["MessageContextAction","fun MessageContextAction(ctx: SlashCommandContext, original: Message)","tv.blademaker.slash.context.actions.MessageContextAction.MessageContextAction"]},{"name":"fun MetricsStrategy()","description":"tv.blademaker.slash.metrics.MetricsStrategy.MetricsStrategy","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/-metrics-strategy.html","searchKeys":["MetricsStrategy","fun MetricsStrategy()","tv.blademaker.slash.metrics.MetricsStrategy.MetricsStrategy"]},{"name":"fun OptionName(value: String)","description":"tv.blademaker.slash.annotations.OptionName.OptionName","location":"-slash/tv.blademaker.slash.annotations/-option-name/-option-name.html","searchKeys":["OptionName","fun OptionName(value: String)","tv.blademaker.slash.annotations.OptionName.OptionName"]},{"name":"fun Permissions(user: Array<Permission> = [], bot: Array<Permission> = [])","description":"tv.blademaker.slash.annotations.Permissions.Permissions","location":"-slash/tv.blademaker.slash.annotations/-permissions/-permissions.html","searchKeys":["Permissions","fun Permissions(user: Array<Permission> = [], bot: Array<Permission> = [])","tv.blademaker.slash.annotations.Permissions.Permissions"]},{"name":"fun PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>)","description":"tv.blademaker.slash.exceptions.PermissionsLackException.PermissionsLackException","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/-permissions-lack-exception.html","searchKeys":["PermissionsLackException","fun PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>)","tv.blademaker.slash.exceptions.PermissionsLackException.PermissionsLackException"]},{"name":"fun RateLimit(quota: Int, duration: Long, unit: TimeUnit, target: RateLimit.Target)","description":"tv.blademaker.slash.ratelimit.RateLimit.RateLimit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-rate-limit.html","searchKeys":["RateLimit","fun RateLimit(quota: Int, duration: Long, unit: TimeUnit, target: RateLimit.Target)","tv.blademaker.slash.ratelimit.RateLimit.RateLimit"]},{"name":"fun RateLimitHandler(configuration: RateLimitHandler.Configuration)","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.RateLimitHandler","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-rate-limit-handler.html","searchKeys":["RateLimitHandler","fun RateLimitHandler(configuration: RateLimitHandler.Configuration)","tv.blademaker.slash.ratelimit.RateLimitHandler.RateLimitHandler"]},{"name":"fun RateLimitThreadFactory()","description":"tv.blademaker.slash.ratelimit.RateLimitThreadFactory.RateLimitThreadFactory","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-thread-factory/-rate-limit-thread-factory.html","searchKeys":["RateLimitThreadFactory","fun RateLimitThreadFactory()","tv.blademaker.slash.ratelimit.RateLimitThreadFactory.RateLimitThreadFactory"]},{"name":"fun RestAction<*>.asEphemeral(): RestAction<*>","description":"tv.blademaker.slash.SlashUtils.asEphemeral","location":"-slash/tv.blademaker.slash/-slash-utils/as-ephemeral.html","searchKeys":["asEphemeral","fun RestAction<*>.asEphemeral(): RestAction<*>","tv.blademaker.slash.SlashUtils.asEphemeral"]},{"name":"fun RestAction<*>.asEphemeral(): RestAction<*>","description":"tv.blademaker.slash.extensions.asEphemeral","location":"-slash/tv.blademaker.slash.extensions/as-ephemeral.html","searchKeys":["asEphemeral","fun RestAction<*>.asEphemeral(): RestAction<*>","tv.blademaker.slash.extensions.asEphemeral"]},{"name":"fun SlashCommand(name: String = \"\", group: String = \"\", target: InteractionTarget)","description":"tv.blademaker.slash.annotations.SlashCommand.SlashCommand","location":"-slash/tv.blademaker.slash.annotations/-slash-command/-slash-command.html","searchKeys":["SlashCommand","fun SlashCommand(name: String = \"\", group: String = \"\", target: InteractionTarget)","tv.blademaker.slash.annotations.SlashCommand.SlashCommand"]},{"name":"fun SlashCommandContextImpl(event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.SlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/-slash-command-context-impl.html","searchKeys":["SlashCommandContextImpl","fun SlashCommandContextImpl(event: SlashCommandInteractionEvent)","tv.blademaker.slash.context.impl.SlashCommandContextImpl.SlashCommandContextImpl"]},{"name":"fun SlashCommandHandler(parent: BaseSlashCommand, function: KFunction<*>)","description":"tv.blademaker.slash.internal.SlashCommandHandler.SlashCommandHandler","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/-slash-command-handler.html","searchKeys":["SlashCommandHandler","fun SlashCommandHandler(parent: BaseSlashCommand, function: KFunction<*>)","tv.blademaker.slash.internal.SlashCommandHandler.SlashCommandHandler"]},{"name":"fun SuspendingCommandExecutor(client: DefaultSlashCommandClient, rateLimit: RateLimitHandler)","description":"tv.blademaker.slash.internal.SuspendingCommandExecutor.SuspendingCommandExecutor","location":"-slash/tv.blademaker.slash.internal/-suspending-command-executor/-suspending-command-executor.html","searchKeys":["SuspendingCommandExecutor","fun SuspendingCommandExecutor(client: DefaultSlashCommandClient, rateLimit: RateLimitHandler)","tv.blademaker.slash.internal.SuspendingCommandExecutor.SuspendingCommandExecutor"]},{"name":"fun acquire(annotation: RateLimit?, event: SlashCommandInteractionEvent): Long?","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.acquire","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/acquire.html","searchKeys":["acquire","fun acquire(annotation: RateLimit?, event: SlashCommandInteractionEvent): Long?","tv.blademaker.slash.ratelimit.RateLimitHandler.acquire"]},{"name":"fun addCheck(check: CommandExecutionCheck)","description":"tv.blademaker.slash.BaseSlashCommand.addCheck","location":"-slash/tv.blademaker.slash/-base-slash-command/add-check.html","searchKeys":["addCheck","fun addCheck(check: CommandExecutionCheck)","tv.blademaker.slash.BaseSlashCommand.addCheck"]},{"name":"fun addCheck(check: CommandExecutionCheck)","description":"tv.blademaker.slash.client.DefaultSlashCommandClient.addCheck","location":"-slash/tv.blademaker.slash.client/-default-slash-command-client/add-check.html","searchKeys":["addCheck","fun addCheck(check: CommandExecutionCheck)","tv.blademaker.slash.client.DefaultSlashCommandClient.addCheck"]},{"name":"fun addCheck(check: CommandExecutionCheck): DefaultSlashCommandBuilder","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.addCheck","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/add-check.html","searchKeys":["addCheck","fun addCheck(check: CommandExecutionCheck): DefaultSlashCommandBuilder","tv.blademaker.slash.client.DefaultSlashCommandBuilder.addCheck"]},{"name":"fun addChecks(checks: Collection<CommandExecutionCheck>)","description":"tv.blademaker.slash.BaseSlashCommand.addChecks","location":"-slash/tv.blademaker.slash/-base-slash-command/add-checks.html","searchKeys":["addChecks","fun addChecks(checks: Collection<CommandExecutionCheck>)","tv.blademaker.slash.BaseSlashCommand.addChecks"]},{"name":"fun buildWith(jda: JDA): DefaultSlashCommandClient","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.buildWith","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/build-with.html","searchKeys":["buildWith","fun buildWith(jda: JDA): DefaultSlashCommandClient","tv.blademaker.slash.client.DefaultSlashCommandBuilder.buildWith"]},{"name":"fun buildWith(shardManager: ShardManager): DefaultSlashCommandClient","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.buildWith","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/build-with.html","searchKeys":["buildWith","fun buildWith(shardManager: ShardManager): DefaultSlashCommandClient","tv.blademaker.slash.client.DefaultSlashCommandBuilder.buildWith"]},{"name":"fun configureRateLimit(configuration: RateLimitHandler.Configuration.() -> Unit): DefaultSlashCommandBuilder","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.configureRateLimit","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/configure-rate-limit.html","searchKeys":["configureRateLimit","fun configureRateLimit(configuration: RateLimitHandler.Configuration.() -> Unit): DefaultSlashCommandBuilder","tv.blademaker.slash.client.DefaultSlashCommandBuilder.configureRateLimit"]},{"name":"fun contextCreator(contextCreator: ContextCreator): DefaultSlashCommandBuilder","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.contextCreator","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/context-creator.html","searchKeys":["contextCreator","fun contextCreator(contextCreator: ContextCreator): DefaultSlashCommandBuilder","tv.blademaker.slash.client.DefaultSlashCommandBuilder.contextCreator"]},{"name":"fun convert(option: OptionMapping?): Any?","description":"tv.blademaker.slash.internal.ValidOptionTypes.convert","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/convert.html","searchKeys":["convert","fun convert(option: OptionMapping?): Any?","tv.blademaker.slash.internal.ValidOptionTypes.convert"]},{"name":"fun default(packageName: String): DefaultSlashCommandBuilder","description":"tv.blademaker.slash.client.SlashCommandClient.Companion.default","location":"-slash/tv.blademaker.slash.client/-slash-command-client/-companion/default.html","searchKeys":["default","fun default(packageName: String): DefaultSlashCommandBuilder","tv.blademaker.slash.client.SlashCommandClient.Companion.default"]},{"name":"fun discoverSlashCommands(packageName: String): DiscoveryResult","description":"tv.blademaker.slash.SlashUtils.discoverSlashCommands","location":"-slash/tv.blademaker.slash/-slash-utils/discover-slash-commands.html","searchKeys":["discoverSlashCommands","fun discoverSlashCommands(packageName: String): DiscoveryResult","tv.blademaker.slash.SlashUtils.discoverSlashCommands"]},{"name":"fun editOriginal(): WebhookMessageUpdateAction<Message>","description":"tv.blademaker.slash.context.actions.EmbedContextAction.editOriginal","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/edit-original.html","searchKeys":["editOriginal","fun editOriginal(): WebhookMessageUpdateAction<Message>","tv.blademaker.slash.context.actions.EmbedContextAction.editOriginal"]},{"name":"fun editOriginal(): WebhookMessageUpdateAction<Message>","description":"tv.blademaker.slash.context.actions.MessageContextAction.editOriginal","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/edit-original.html","searchKeys":["editOriginal","fun editOriginal(): WebhookMessageUpdateAction<Message>","tv.blademaker.slash.context.actions.MessageContextAction.editOriginal"]},{"name":"fun enableMetrics(): DefaultSlashCommandBuilder","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.enableMetrics","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/enable-metrics.html","searchKeys":["enableMetrics","fun enableMetrics(): DefaultSlashCommandBuilder","tv.blademaker.slash.client.DefaultSlashCommandBuilder.enableMetrics"]},{"name":"fun enableMetrics(builder: MetricsStrategy.() -> Unit): DefaultSlashCommandBuilder","description":"tv.blademaker.slash.client.DefaultSlashCommandBuilder.enableMetrics","location":"-slash/tv.blademaker.slash.client/-default-slash-command-builder/enable-metrics.html","searchKeys":["enableMetrics","fun enableMetrics(builder: MetricsStrategy.() -> Unit): DefaultSlashCommandBuilder","tv.blademaker.slash.client.DefaultSlashCommandBuilder.enableMetrics"]},{"name":"fun get(type: KType): ValidOptionTypes?","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion.get","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/get.html","searchKeys":["get","fun get(type: KType): ValidOptionTypes?","tv.blademaker.slash.internal.ValidOptionTypes.Companion.get"]},{"name":"fun getOptionOrNull(name: String): OptionMapping?","description":"tv.blademaker.slash.context.AutoCompleteContext.getOptionOrNull","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/get-option-or-null.html","searchKeys":["getOptionOrNull","fun getOptionOrNull(name: String): OptionMapping?","tv.blademaker.slash.context.AutoCompleteContext.getOptionOrNull"]},{"name":"fun guild(event: SlashCommandInteractionEvent): GuildSlashCommandContext","description":"tv.blademaker.slash.context.SlashCommandContext.Companion.guild","location":"-slash/tv.blademaker.slash.context/-slash-command-context/-companion/guild.html","searchKeys":["guild","fun guild(event: SlashCommandInteractionEvent): GuildSlashCommandContext","tv.blademaker.slash.context.SlashCommandContext.Companion.guild"]},{"name":"fun impl(event: SlashCommandInteractionEvent): SlashCommandContext","description":"tv.blademaker.slash.context.SlashCommandContext.Companion.impl","location":"-slash/tv.blademaker.slash.context/-slash-command-context/-companion/impl.html","searchKeys":["impl","fun impl(event: SlashCommandInteractionEvent): SlashCommandContext","tv.blademaker.slash.context.SlashCommandContext.Companion.impl"]},{"name":"fun isValidType(type: KClassifier?): Boolean","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion.isValidType","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/is-valid-type.html","searchKeys":["isValidType","fun isValidType(type: KClassifier?): Boolean","tv.blademaker.slash.internal.ValidOptionTypes.Companion.isValidType"]},{"name":"fun removeCheck(check: CommandExecutionCheck)","description":"tv.blademaker.slash.BaseSlashCommand.removeCheck","location":"-slash/tv.blademaker.slash/-base-slash-command/remove-check.html","searchKeys":["removeCheck","fun removeCheck(check: CommandExecutionCheck)","tv.blademaker.slash.BaseSlashCommand.removeCheck"]},{"name":"fun removeChecks(checks: Collection<CommandExecutionCheck>)","description":"tv.blademaker.slash.BaseSlashCommand.removeChecks","location":"-slash/tv.blademaker.slash/-base-slash-command/remove-checks.html","searchKeys":["removeChecks","fun removeChecks(checks: Collection<CommandExecutionCheck>)","tv.blademaker.slash.BaseSlashCommand.removeChecks"]},{"name":"interface ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction","location":"-slash/tv.blademaker.slash.context.actions/-context-action/index.html","searchKeys":["ContextAction","interface ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction"]},{"name":"interface ContextCreator","description":"tv.blademaker.slash.context.ContextCreator","location":"-slash/tv.blademaker.slash.context/-context-creator/index.html","searchKeys":["ContextCreator","interface ContextCreator","tv.blademaker.slash.context.ContextCreator"]},{"name":"interface ExceptionHandler","description":"tv.blademaker.slash.exceptions.ExceptionHandler","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/index.html","searchKeys":["ExceptionHandler","interface ExceptionHandler","tv.blademaker.slash.exceptions.ExceptionHandler"]},{"name":"interface GuildSlashCommandContext : SlashCommandContext","description":"tv.blademaker.slash.context.GuildSlashCommandContext","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/index.html","searchKeys":["GuildSlashCommandContext","interface GuildSlashCommandContext : SlashCommandContext","tv.blademaker.slash.context.GuildSlashCommandContext"]},{"name":"interface Handler","description":"tv.blademaker.slash.internal.Handler","location":"-slash/tv.blademaker.slash.internal/-handler/index.html","searchKeys":["Handler","interface Handler","tv.blademaker.slash.internal.Handler"]},{"name":"interface InteractionContext<E : GenericInteractionCreateEvent>","description":"tv.blademaker.slash.context.InteractionContext","location":"-slash/tv.blademaker.slash.context/-interaction-context/index.html","searchKeys":["InteractionContext","interface InteractionContext<E : GenericInteractionCreateEvent>","tv.blademaker.slash.context.InteractionContext"]},{"name":"interface SlashCommandClient : EventListener","description":"tv.blademaker.slash.client.SlashCommandClient","location":"-slash/tv.blademaker.slash.client/-slash-command-client/index.html","searchKeys":["SlashCommandClient","interface SlashCommandClient : EventListener","tv.blademaker.slash.client.SlashCommandClient"]},{"name":"interface SlashCommandContext : InteractionContext<SlashCommandInteractionEvent> ","description":"tv.blademaker.slash.context.SlashCommandContext","location":"-slash/tv.blademaker.slash.context/-slash-command-context/index.html","searchKeys":["SlashCommandContext","interface SlashCommandContext : InteractionContext<SlashCommandInteractionEvent> ","tv.blademaker.slash.context.SlashCommandContext"]},{"name":"object Companion","description":"tv.blademaker.slash.client.SlashCommandClient.Companion","location":"-slash/tv.blademaker.slash.client/-slash-command-client/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.client.SlashCommandClient.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.context.SlashCommandContext.Companion","location":"-slash/tv.blademaker.slash.context/-slash-command-context/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.context.SlashCommandContext.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.context.actions.ContextAction.Companion","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.context.actions.ContextAction.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.AutoCompleteHandler.Companion","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.AutoCompleteHandler.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.SlashCommandHandler.Companion","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.SlashCommandHandler.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.SuspendingCommandExecutor.Companion","location":"-slash/tv.blademaker.slash.internal/-suspending-command-executor/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.SuspendingCommandExecutor.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.ValidOptionTypes.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.Companion","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.ratelimit.RateLimitHandler.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.ratelimit.RateLimitThreadFactory.Companion","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-thread-factory/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.ratelimit.RateLimitThreadFactory.Companion"]},{"name":"object SlashUtils","description":"tv.blademaker.slash.SlashUtils","location":"-slash/tv.blademaker.slash/-slash-utils/index.html","searchKeys":["SlashUtils","object SlashUtils","tv.blademaker.slash.SlashUtils"]},{"name":"object UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","description":"tv.blademaker.slash.extensions.UncaughtExceptionHandler","location":"-slash/tv.blademaker.slash.extensions/-uncaught-exception-handler/index.html","searchKeys":["UncaughtExceptionHandler","object UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","tv.blademaker.slash.extensions.UncaughtExceptionHandler"]},{"name":"open class SuspendingCommandExecutor(client: DefaultSlashCommandClient, rateLimit: RateLimitHandler) : CoroutineScope","description":"tv.blademaker.slash.internal.SuspendingCommandExecutor","location":"-slash/tv.blademaker.slash.internal/-suspending-command-executor/index.html","searchKeys":["SuspendingCommandExecutor","open class SuspendingCommandExecutor(client: DefaultSlashCommandClient, rateLimit: RateLimitHandler) : CoroutineScope","tv.blademaker.slash.internal.SuspendingCommandExecutor"]},{"name":"open fun applyConfiguration(configuration: ContextAction.Configuration.() -> Unit): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.applyConfiguration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/apply-configuration.html","searchKeys":["applyConfiguration","open fun applyConfiguration(configuration: ContextAction.Configuration.() -> Unit): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.applyConfiguration"]},{"name":"open fun embed(builder: EmbedBuilder.() -> Unit): EmbedContextAction","description":"tv.blademaker.slash.context.SlashCommandContext.embed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/embed.html","searchKeys":["embed","open fun embed(builder: EmbedBuilder.() -> Unit): EmbedContextAction","tv.blademaker.slash.context.SlashCommandContext.embed"]},{"name":"open fun getCommand(name: String): BaseSlashCommand?","description":"tv.blademaker.slash.client.SlashCommandClient.getCommand","location":"-slash/tv.blademaker.slash.client/-slash-command-client/get-command.html","searchKeys":["getCommand","open fun getCommand(name: String): BaseSlashCommand?","tv.blademaker.slash.client.SlashCommandClient.getCommand"]},{"name":"open fun getOption(name: String): OptionMapping?","description":"tv.blademaker.slash.context.SlashCommandContext.getOption","location":"-slash/tv.blademaker.slash.context/-slash-command-context/get-option.html","searchKeys":["getOption","open fun getOption(name: String): OptionMapping?","tv.blademaker.slash.context.SlashCommandContext.getOption"]},{"name":"open fun message(builder: MessageBuilder.() -> Unit): MessageContextAction","description":"tv.blademaker.slash.context.SlashCommandContext.message","location":"-slash/tv.blademaker.slash.context/-slash-command-context/message.html","searchKeys":["message","open fun message(builder: MessageBuilder.() -> Unit): MessageContextAction","tv.blademaker.slash.context.SlashCommandContext.message"]},{"name":"open fun queue()","description":"tv.blademaker.slash.context.actions.ContextAction.queue","location":"-slash/tv.blademaker.slash.context.actions/-context-action/queue.html","searchKeys":["queue","open fun queue()","tv.blademaker.slash.context.actions.ContextAction.queue"]},{"name":"open fun replyEmbed(builder: EmbedBuilder): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(builder: EmbedBuilder): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyEmbed"]},{"name":"open fun replyEmbed(builder: EmbedBuilder.() -> Unit): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(builder: EmbedBuilder.() -> Unit): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyEmbed"]},{"name":"open fun replyEmbed(embed: MessageEmbed): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(embed: MessageEmbed): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyEmbed"]},{"name":"open fun replyMessage(builder: MessageBuilder): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(builder: MessageBuilder): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(builder: MessageBuilder.() -> Unit): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(builder: MessageBuilder.() -> Unit): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(content: String): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(content: String): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(message: Message): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(message: Message): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun sendEmbed(builder: EmbedBuilder): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(builder: EmbedBuilder): WebhookMessageAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendEmbed"]},{"name":"open fun sendEmbed(builder: EmbedBuilder.() -> Unit): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(builder: EmbedBuilder.() -> Unit): WebhookMessageAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendEmbed"]},{"name":"open fun sendEmbed(embed: MessageEmbed): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(embed: MessageEmbed): WebhookMessageAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendEmbed"]},{"name":"open fun sendMessage(builder: MessageBuilder): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(builder: MessageBuilder): WebhookMessageAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(builder: MessageBuilder.() -> Unit): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(builder: MessageBuilder.() -> Unit): WebhookMessageAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(content: String): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(content: String): WebhookMessageAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(message: Message): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(message: Message): WebhookMessageAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun setActionRows(rows: Collection<ActionRow>): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.setActionRows","location":"-slash/tv.blademaker.slash.context.actions/-context-action/set-action-rows.html","searchKeys":["setActionRows","open fun setActionRows(rows: Collection<ActionRow>): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.setActionRows"]},{"name":"open fun setActionRows(vararg rows: ActionRow): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.setActionRows","location":"-slash/tv.blademaker.slash.context.actions/-context-action/set-action-rows.html","searchKeys":["setActionRows","open fun setActionRows(vararg rows: ActionRow): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.setActionRows"]},{"name":"open fun setEphemeral(ephemeral: Boolean): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.setEphemeral","location":"-slash/tv.blademaker.slash.context.actions/-context-action/set-ephemeral.html","searchKeys":["setEphemeral","open fun setEphemeral(ephemeral: Boolean): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.setEphemeral"]},{"name":"open fun tryAcknowledge(ephemeral: Boolean = false): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.tryAcknowledge","location":"-slash/tv.blademaker.slash.context/-slash-command-context/try-acknowledge.html","searchKeys":["tryAcknowledge","open fun tryAcknowledge(ephemeral: Boolean = false): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.tryAcknowledge"]},{"name":"open fun wrap(e: Exception, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.wrap","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/wrap.html","searchKeys":["wrap","open fun wrap(e: Exception, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.wrap"]},{"name":"open fun wrap(e: Exception, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.wrap","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/wrap.html","searchKeys":["wrap","open fun wrap(e: Exception, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.wrap"]},{"name":"open override fun newThread(r: Runnable): Thread","description":"tv.blademaker.slash.ratelimit.RateLimitThreadFactory.newThread","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-thread-factory/new-thread.html","searchKeys":["newThread","open override fun newThread(r: Runnable): Thread","tv.blademaker.slash.ratelimit.RateLimitThreadFactory.newThread"]},{"name":"open override fun onCommandAutoCompleteEvent(event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.client.DefaultSlashCommandClient.onCommandAutoCompleteEvent","location":"-slash/tv.blademaker.slash.client/-default-slash-command-client/on-command-auto-complete-event.html","searchKeys":["onCommandAutoCompleteEvent","open override fun onCommandAutoCompleteEvent(event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.client.DefaultSlashCommandClient.onCommandAutoCompleteEvent"]},{"name":"open override fun onEvent(event: GenericEvent)","description":"tv.blademaker.slash.client.SlashCommandClient.onEvent","location":"-slash/tv.blademaker.slash.client/-slash-command-client/on-event.html","searchKeys":["onEvent","open override fun onEvent(event: GenericEvent)","tv.blademaker.slash.client.SlashCommandClient.onEvent"]},{"name":"open override fun onException(ex: Exception, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Exception, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onException(ex: Exception, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Exception, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onInteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-interaction-target-mismatch.html","searchKeys":["onInteractionTargetMismatch","open override fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onInteractionTargetMismatch"]},{"name":"open override fun onPermissionLackException(ex: PermissionsLackException)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onPermissionLackException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-permission-lack-exception.html","searchKeys":["onPermissionLackException","open override fun onPermissionLackException(ex: PermissionsLackException)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onPermissionLackException"]},{"name":"open override fun onSlashCommandEvent(event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.client.DefaultSlashCommandClient.onSlashCommandEvent","location":"-slash/tv.blademaker.slash.client/-default-slash-command-client/on-slash-command-event.html","searchKeys":["onSlashCommandEvent","open override fun onSlashCommandEvent(event: SlashCommandInteractionEvent)","tv.blademaker.slash.client.DefaultSlashCommandClient.onSlashCommandEvent"]},{"name":"open override fun reply(): ReplyCallbackAction","description":"tv.blademaker.slash.context.actions.EmbedContextAction.reply","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/reply.html","searchKeys":["reply","open override fun reply(): ReplyCallbackAction","tv.blademaker.slash.context.actions.EmbedContextAction.reply"]},{"name":"open override fun reply(): ReplyCallbackAction","description":"tv.blademaker.slash.context.actions.MessageContextAction.reply","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/reply.html","searchKeys":["reply","open override fun reply(): ReplyCallbackAction","tv.blademaker.slash.context.actions.MessageContextAction.reply"]},{"name":"open override fun send(): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.actions.EmbedContextAction.send","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/send.html","searchKeys":["send","open override fun send(): WebhookMessageAction<Message>","tv.blademaker.slash.context.actions.EmbedContextAction.send"]},{"name":"open override fun send(): WebhookMessageAction<Message>","description":"tv.blademaker.slash.context.actions.MessageContextAction.send","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/send.html","searchKeys":["send","open override fun send(): WebhookMessageAction<Message>","tv.blademaker.slash.context.actions.MessageContextAction.send"]},{"name":"open override fun uncaughtException(t: Thread, e: Throwable)","description":"tv.blademaker.slash.extensions.UncaughtExceptionHandler.uncaughtException","location":"-slash/tv.blademaker.slash.extensions/-uncaught-exception-handler/uncaught-exception.html","searchKeys":["uncaughtException","open override fun uncaughtException(t: Thread, e: Throwable)","tv.blademaker.slash.extensions.UncaughtExceptionHandler.uncaughtException"]},{"name":"open override val configuration: ContextAction.Configuration","description":"tv.blademaker.slash.context.actions.EmbedContextAction.configuration","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/configuration.html","searchKeys":["configuration","open override val configuration: ContextAction.Configuration","tv.blademaker.slash.context.actions.EmbedContextAction.configuration"]},{"name":"open override val configuration: ContextAction.Configuration","description":"tv.blademaker.slash.context.actions.MessageContextAction.configuration","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/configuration.html","searchKeys":["configuration","open override val configuration: ContextAction.Configuration","tv.blademaker.slash.context.actions.MessageContextAction.configuration"]},{"name":"open override val coroutineContext: CoroutineContext","description":"tv.blademaker.slash.internal.SuspendingCommandExecutor.coroutineContext","location":"-slash/tv.blademaker.slash.internal/-suspending-command-executor/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","tv.blademaker.slash.internal.SuspendingCommandExecutor.coroutineContext"]},{"name":"open override val ctx: SlashCommandContext","description":"tv.blademaker.slash.context.actions.EmbedContextAction.ctx","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/ctx.html","searchKeys":["ctx","open override val ctx: SlashCommandContext","tv.blademaker.slash.context.actions.EmbedContextAction.ctx"]},{"name":"open override val ctx: SlashCommandContext","description":"tv.blademaker.slash.context.actions.MessageContextAction.ctx","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/ctx.html","searchKeys":["ctx","open override val ctx: SlashCommandContext","tv.blademaker.slash.context.actions.MessageContextAction.ctx"]},{"name":"open override val event: SlashCommandInteractionEvent","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.event","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/event.html","searchKeys":["event","open override val event: SlashCommandInteractionEvent","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.event"]},{"name":"open override val event: SlashCommandInteractionEvent","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.event","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/event.html","searchKeys":["event","open override val event: SlashCommandInteractionEvent","tv.blademaker.slash.context.impl.SlashCommandContextImpl.event"]},{"name":"open override val exceptionHandler: ExceptionHandler","description":"tv.blademaker.slash.client.DefaultSlashCommandClient.exceptionHandler","location":"-slash/tv.blademaker.slash.client/-default-slash-command-client/exception-handler.html","searchKeys":["exceptionHandler","open override val exceptionHandler: ExceptionHandler","tv.blademaker.slash.client.DefaultSlashCommandClient.exceptionHandler"]},{"name":"open override val guild: Guild","description":"tv.blademaker.slash.context.GuildSlashCommandContext.guild","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/guild.html","searchKeys":["guild","open override val guild: Guild","tv.blademaker.slash.context.GuildSlashCommandContext.guild"]},{"name":"open override val interaction: CommandInteraction","description":"tv.blademaker.slash.context.SlashCommandContext.interaction","location":"-slash/tv.blademaker.slash.context/-slash-command-context/interaction.html","searchKeys":["interaction","open override val interaction: CommandInteraction","tv.blademaker.slash.context.SlashCommandContext.interaction"]},{"name":"open override val member: Member","description":"tv.blademaker.slash.context.GuildSlashCommandContext.member","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/member.html","searchKeys":["member","open override val member: Member","tv.blademaker.slash.context.GuildSlashCommandContext.member"]},{"name":"open override val original: Message","description":"tv.blademaker.slash.context.actions.MessageContextAction.original","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/original.html","searchKeys":["original","open override val original: Message","tv.blademaker.slash.context.actions.MessageContextAction.original"]},{"name":"open override val original: MessageEmbed","description":"tv.blademaker.slash.context.actions.EmbedContextAction.original","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/original.html","searchKeys":["original","open override val original: MessageEmbed","tv.blademaker.slash.context.actions.EmbedContextAction.original"]},{"name":"open override val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.AutoCompleteHandler.parent","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/parent.html","searchKeys":["parent","open override val parent: BaseSlashCommand","tv.blademaker.slash.internal.AutoCompleteHandler.parent"]},{"name":"open override val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.SlashCommandHandler.parent","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/parent.html","searchKeys":["parent","open override val parent: BaseSlashCommand","tv.blademaker.slash.internal.SlashCommandHandler.parent"]},{"name":"open override val path: String","description":"tv.blademaker.slash.internal.AutoCompleteHandler.path","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/path.html","searchKeys":["path","open override val path: String","tv.blademaker.slash.internal.AutoCompleteHandler.path"]},{"name":"open override val path: String","description":"tv.blademaker.slash.internal.SlashCommandHandler.path","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/path.html","searchKeys":["path","open override val path: String","tv.blademaker.slash.internal.SlashCommandHandler.path"]},{"name":"open override val registry: List<BaseSlashCommand>","description":"tv.blademaker.slash.client.DefaultSlashCommandClient.registry","location":"-slash/tv.blademaker.slash.client/-default-slash-command-client/registry.html","searchKeys":["registry","open override val registry: List<BaseSlashCommand>","tv.blademaker.slash.client.DefaultSlashCommandClient.registry"]},{"name":"open override var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.extra","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/extra.html","searchKeys":["extra","open override var extra: AtomicReference<Any?>","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.extra"]},{"name":"open override var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.extra","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/extra.html","searchKeys":["extra","open override var extra: AtomicReference<Any?>","tv.blademaker.slash.context.impl.SlashCommandContextImpl.extra"]},{"name":"open suspend fun acknowledge(ephemeral: Boolean = false)","description":"tv.blademaker.slash.context.SlashCommandContext.acknowledge","location":"-slash/tv.blademaker.slash.context/-slash-command-context/acknowledge.html","searchKeys":["acknowledge","open suspend fun acknowledge(ephemeral: Boolean = false)","tv.blademaker.slash.context.SlashCommandContext.acknowledge"]},{"name":"open suspend fun acknowledgeAsync(ephemeral: Boolean): Deferred<Unit>","description":"tv.blademaker.slash.context.SlashCommandContext.acknowledgeAsync","location":"-slash/tv.blademaker.slash.context/-slash-command-context/acknowledge-async.html","searchKeys":["acknowledgeAsync","open suspend fun acknowledgeAsync(ephemeral: Boolean): Deferred<Unit>","tv.blademaker.slash.context.SlashCommandContext.acknowledgeAsync"]},{"name":"open suspend fun createContext(event: SlashCommandInteractionEvent): SlashCommandContext","description":"tv.blademaker.slash.context.ContextCreator.createContext","location":"-slash/tv.blademaker.slash.context/-context-creator/create-context.html","searchKeys":["createContext","open suspend fun createContext(event: SlashCommandInteractionEvent): SlashCommandContext","tv.blademaker.slash.context.ContextCreator.createContext"]},{"name":"open suspend fun createGuildContext(event: SlashCommandInteractionEvent): GuildSlashCommandContext","description":"tv.blademaker.slash.context.ContextCreator.createGuildContext","location":"-slash/tv.blademaker.slash.context/-context-creator/create-guild-context.html","searchKeys":["createGuildContext","open suspend fun createGuildContext(event: SlashCommandInteractionEvent): GuildSlashCommandContext","tv.blademaker.slash.context.ContextCreator.createGuildContext"]},{"name":"open val channel: TextChannel","description":"tv.blademaker.slash.context.SlashCommandContext.channel","location":"-slash/tv.blademaker.slash.context/-slash-command-context/channel.html","searchKeys":["channel","open val channel: TextChannel","tv.blademaker.slash.context.SlashCommandContext.channel"]},{"name":"open val guild: Guild?","description":"tv.blademaker.slash.context.SlashCommandContext.guild","location":"-slash/tv.blademaker.slash.context/-slash-command-context/guild.html","searchKeys":["guild","open val guild: Guild?","tv.blademaker.slash.context.SlashCommandContext.guild"]},{"name":"open val guildLocale: Locale?","description":"tv.blademaker.slash.context.InteractionContext.guildLocale","location":"-slash/tv.blademaker.slash.context/-interaction-context/guild-locale.html","searchKeys":["guildLocale","open val guildLocale: Locale?","tv.blademaker.slash.context.InteractionContext.guildLocale"]},{"name":"open val hook: InteractionHook","description":"tv.blademaker.slash.context.SlashCommandContext.hook","location":"-slash/tv.blademaker.slash.context/-slash-command-context/hook.html","searchKeys":["hook","open val hook: InteractionHook","tv.blademaker.slash.context.SlashCommandContext.hook"]},{"name":"open val interaction: Interaction","description":"tv.blademaker.slash.context.InteractionContext.interaction","location":"-slash/tv.blademaker.slash.context/-interaction-context/interaction.html","searchKeys":["interaction","open val interaction: Interaction","tv.blademaker.slash.context.InteractionContext.interaction"]},{"name":"open val isAcknowledged: Boolean","description":"tv.blademaker.slash.context.SlashCommandContext.isAcknowledged","location":"-slash/tv.blademaker.slash.context/-slash-command-context/is-acknowledged.html","searchKeys":["isAcknowledged","open val isAcknowledged: Boolean","tv.blademaker.slash.context.SlashCommandContext.isAcknowledged"]},{"name":"open val jda: JDA","description":"tv.blademaker.slash.context.InteractionContext.jda","location":"-slash/tv.blademaker.slash.context/-interaction-context/jda.html","searchKeys":["jda","open val jda: JDA","tv.blademaker.slash.context.InteractionContext.jda"]},{"name":"open val member: Member?","description":"tv.blademaker.slash.context.SlashCommandContext.member","location":"-slash/tv.blademaker.slash.context/-slash-command-context/member.html","searchKeys":["member","open val member: Member?","tv.blademaker.slash.context.SlashCommandContext.member"]},{"name":"open val options: List<OptionMapping>","description":"tv.blademaker.slash.context.SlashCommandContext.options","location":"-slash/tv.blademaker.slash.context/-slash-command-context/options.html","searchKeys":["options","open val options: List<OptionMapping>","tv.blademaker.slash.context.SlashCommandContext.options"]},{"name":"open val selfMember: Member","description":"tv.blademaker.slash.context.GuildSlashCommandContext.selfMember","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/self-member.html","searchKeys":["selfMember","open val selfMember: Member","tv.blademaker.slash.context.GuildSlashCommandContext.selfMember"]},{"name":"open val shardManager: ShardManager?","description":"tv.blademaker.slash.context.SlashCommandContext.shardManager","location":"-slash/tv.blademaker.slash.context/-slash-command-context/shard-manager.html","searchKeys":["shardManager","open val shardManager: ShardManager?","tv.blademaker.slash.context.SlashCommandContext.shardManager"]},{"name":"open val user: User","description":"tv.blademaker.slash.context.SlashCommandContext.user","location":"-slash/tv.blademaker.slash.context/-slash-command-context/user.html","searchKeys":["user","open val user: User","tv.blademaker.slash.context.SlashCommandContext.user"]},{"name":"open val userLocale: Locale","description":"tv.blademaker.slash.context.InteractionContext.userLocale","location":"-slash/tv.blademaker.slash.context/-interaction-context/user-locale.html","searchKeys":["userLocale","open val userLocale: Locale","tv.blademaker.slash.context.InteractionContext.userLocale"]},{"name":"suspend fun execute(ctx: AutoCompleteContext)","description":"tv.blademaker.slash.internal.AutoCompleteHandler.execute","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/execute.html","searchKeys":["execute","suspend fun execute(ctx: AutoCompleteContext)","tv.blademaker.slash.internal.AutoCompleteHandler.execute"]},{"name":"suspend fun execute(ctx: SlashCommandContext)","description":"tv.blademaker.slash.internal.SlashCommandHandler.execute","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/execute.html","searchKeys":["execute","suspend fun execute(ctx: SlashCommandContext)","tv.blademaker.slash.internal.SlashCommandHandler.execute"]},{"name":"val bot: Array<Permission>","description":"tv.blademaker.slash.annotations.Permissions.bot","location":"-slash/tv.blademaker.slash.annotations/-permissions/bot.html","searchKeys":["bot","val bot: Array<Permission>","tv.blademaker.slash.annotations.Permissions.bot"]},{"name":"val commandName: String","description":"tv.blademaker.slash.BaseSlashCommand.commandName","location":"-slash/tv.blademaker.slash/-base-slash-command/command-name.html","searchKeys":["commandName","val commandName: String","tv.blademaker.slash.BaseSlashCommand.commandName"]},{"name":"val commandPath: String","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.commandPath","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/command-path.html","searchKeys":["commandPath","val commandPath: String","tv.blademaker.slash.exceptions.InteractionTargetMismatch.commandPath"]},{"name":"val commands: List<BaseSlashCommand>","description":"tv.blademaker.slash.DiscoveryResult.commands","location":"-slash/tv.blademaker.slash/-discovery-result/commands.html","searchKeys":["commands","val commands: List<BaseSlashCommand>","tv.blademaker.slash.DiscoveryResult.commands"]},{"name":"val context: SlashCommandContext","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.context","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/context.html","searchKeys":["context","val context: SlashCommandContext","tv.blademaker.slash.exceptions.InteractionTargetMismatch.context"]},{"name":"val context: SlashCommandContext","description":"tv.blademaker.slash.exceptions.PermissionsLackException.context","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/context.html","searchKeys":["context","val context: SlashCommandContext","tv.blademaker.slash.exceptions.PermissionsLackException.context"]},{"name":"val duration: Long","description":"tv.blademaker.slash.ratelimit.RateLimit.duration","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/duration.html","searchKeys":["duration","val duration: Long","tv.blademaker.slash.ratelimit.RateLimit.duration"]},{"name":"val elapsedTime: Long","description":"tv.blademaker.slash.DiscoveryResult.elapsedTime","location":"-slash/tv.blademaker.slash/-discovery-result/elapsed-time.html","searchKeys":["elapsedTime","val elapsedTime: Long","tv.blademaker.slash.DiscoveryResult.elapsedTime"]},{"name":"val event: CommandAutoCompleteInteractionEvent","description":"tv.blademaker.slash.context.AutoCompleteContext.event","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/event.html","searchKeys":["event","val event: CommandAutoCompleteInteractionEvent","tv.blademaker.slash.context.AutoCompleteContext.event"]},{"name":"val group: String","description":"tv.blademaker.slash.annotations.AutoComplete.group","location":"-slash/tv.blademaker.slash.annotations/-auto-complete/group.html","searchKeys":["group","val group: String","tv.blademaker.slash.annotations.AutoComplete.group"]},{"name":"val group: String","description":"tv.blademaker.slash.annotations.SlashCommand.group","location":"-slash/tv.blademaker.slash.annotations/-slash-command/group.html","searchKeys":["group","val group: String","tv.blademaker.slash.annotations.SlashCommand.group"]},{"name":"val log: Logger","description":"tv.blademaker.slash.SlashUtils.log","location":"-slash/tv.blademaker.slash/-slash-utils/log.html","searchKeys":["log","val log: Logger","tv.blademaker.slash.SlashUtils.log"]},{"name":"val name: String","description":"tv.blademaker.slash.annotations.AutoComplete.name","location":"-slash/tv.blademaker.slash.annotations/-auto-complete/name.html","searchKeys":["name","val name: String","tv.blademaker.slash.annotations.AutoComplete.name"]},{"name":"val name: String","description":"tv.blademaker.slash.annotations.SlashCommand.name","location":"-slash/tv.blademaker.slash.annotations/-slash-command/name.html","searchKeys":["name","val name: String","tv.blademaker.slash.annotations.SlashCommand.name"]},{"name":"val optionName: String","description":"tv.blademaker.slash.annotations.AutoComplete.optionName","location":"-slash/tv.blademaker.slash.annotations/-auto-complete/option-name.html","searchKeys":["optionName","val optionName: String","tv.blademaker.slash.annotations.AutoComplete.optionName"]},{"name":"val optionName: String","description":"tv.blademaker.slash.internal.AutoCompleteHandler.optionName","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/option-name.html","searchKeys":["optionName","val optionName: String","tv.blademaker.slash.internal.AutoCompleteHandler.optionName"]},{"name":"val permissions: Array<Permission>","description":"tv.blademaker.slash.exceptions.PermissionsLackException.permissions","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/permissions.html","searchKeys":["permissions","val permissions: Array<Permission>","tv.blademaker.slash.exceptions.PermissionsLackException.permissions"]},{"name":"val permissions: Permissions?","description":"tv.blademaker.slash.internal.SlashCommandHandler.permissions","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/permissions.html","searchKeys":["permissions","val permissions: Permissions?","tv.blademaker.slash.internal.SlashCommandHandler.permissions"]},{"name":"val quota: Int","description":"tv.blademaker.slash.ratelimit.RateLimit.quota","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/quota.html","searchKeys":["quota","val quota: Int","tv.blademaker.slash.ratelimit.RateLimit.quota"]},{"name":"val rateLimit: RateLimit?","description":"tv.blademaker.slash.internal.SlashCommandHandler.rateLimit","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/rate-limit.html","searchKeys":["rateLimit","val rateLimit: RateLimit?","tv.blademaker.slash.internal.SlashCommandHandler.rateLimit"]},{"name":"val remaining: AtomicInteger","description":"tv.blademaker.slash.ratelimit.Bucket.remaining","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/remaining.html","searchKeys":["remaining","val remaining: AtomicInteger","tv.blademaker.slash.ratelimit.Bucket.remaining"]},{"name":"val resetAfter: Long","description":"tv.blademaker.slash.ratelimit.Bucket.resetAfter","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/reset-after.html","searchKeys":["resetAfter","val resetAfter: Long","tv.blademaker.slash.ratelimit.Bucket.resetAfter"]},{"name":"val target: InteractionTarget","description":"tv.blademaker.slash.annotations.SlashCommand.target","location":"-slash/tv.blademaker.slash.annotations/-slash-command/target.html","searchKeys":["target","val target: InteractionTarget","tv.blademaker.slash.annotations.SlashCommand.target"]},{"name":"val target: InteractionTarget","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.target","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/target.html","searchKeys":["target","val target: InteractionTarget","tv.blademaker.slash.exceptions.InteractionTargetMismatch.target"]},{"name":"val target: InteractionTarget","description":"tv.blademaker.slash.internal.SlashCommandHandler.target","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/target.html","searchKeys":["target","val target: InteractionTarget","tv.blademaker.slash.internal.SlashCommandHandler.target"]},{"name":"val target: PermissionTarget","description":"tv.blademaker.slash.exceptions.PermissionsLackException.target","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/target.html","searchKeys":["target","val target: PermissionTarget","tv.blademaker.slash.exceptions.PermissionsLackException.target"]},{"name":"val target: RateLimit.Target","description":"tv.blademaker.slash.ratelimit.RateLimit.target","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/target.html","searchKeys":["target","val target: RateLimit.Target","tv.blademaker.slash.ratelimit.RateLimit.target"]},{"name":"val unit: TimeUnit","description":"tv.blademaker.slash.ratelimit.RateLimit.unit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/unit.html","searchKeys":["unit","val unit: TimeUnit","tv.blademaker.slash.ratelimit.RateLimit.unit"]},{"name":"val user: Array<Permission>","description":"tv.blademaker.slash.annotations.Permissions.user","location":"-slash/tv.blademaker.slash.annotations/-permissions/user.html","searchKeys":["user","val user: Array<Permission>","tv.blademaker.slash.annotations.Permissions.user"]},{"name":"val value: String","description":"tv.blademaker.slash.annotations.OptionName.value","location":"-slash/tv.blademaker.slash.annotations/-option-name/value.html","searchKeys":["value","val value: String","tv.blademaker.slash.annotations.OptionName.value"]},{"name":"var actionRows: Collection<ActionRow>? = null","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration.actionRows","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/action-rows.html","searchKeys":["actionRows","var actionRows: Collection<ActionRow>? = null","tv.blademaker.slash.context.actions.ContextAction.Configuration.actionRows"]},{"name":"var baseName: String","description":"tv.blademaker.slash.metrics.MetricsStrategy.baseName","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/base-name.html","searchKeys":["baseName","var baseName: String","tv.blademaker.slash.metrics.MetricsStrategy.baseName"]},{"name":"var ephemeral: Boolean = false","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration.ephemeral","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/ephemeral.html","searchKeys":["ephemeral","var ephemeral: Boolean = false","tv.blademaker.slash.context.actions.ContextAction.Configuration.ephemeral"]},{"name":"var executedCommands: Boolean = true","description":"tv.blademaker.slash.metrics.MetricsStrategy.executedCommands","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/executed-commands.html","searchKeys":["executedCommands","var executedCommands: Boolean = true","tv.blademaker.slash.metrics.MetricsStrategy.executedCommands"]},{"name":"var executor: ScheduledExecutorService? = null","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.executor","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-configuration/executor.html","searchKeys":["executor","var executor: ScheduledExecutorService? = null","tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.executor"]},{"name":"var failedCommands: Boolean = true","description":"tv.blademaker.slash.metrics.MetricsStrategy.failedCommands","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/failed-commands.html","searchKeys":["failedCommands","var failedCommands: Boolean = true","tv.blademaker.slash.metrics.MetricsStrategy.failedCommands"]},{"name":"var measureTime: Boolean = true","description":"tv.blademaker.slash.metrics.MetricsStrategy.measureTime","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/measure-time.html","searchKeys":["measureTime","var measureTime: Boolean = true","tv.blademaker.slash.metrics.MetricsStrategy.measureTime"]},{"name":"var onRateLimitHit: (ctx: SlashCommandContext, rateLimit: RateLimit?) -> Unit","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.onRateLimitHit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-configuration/on-rate-limit-hit.html","searchKeys":["onRateLimitHit","var onRateLimitHit: (ctx: SlashCommandContext, rateLimit: RateLimit?) -> Unit","tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.onRateLimitHit"]},{"name":"var purgeDelay: Long = 10","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.purgeDelay","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-configuration/purge-delay.html","searchKeys":["purgeDelay","var purgeDelay: Long = 10","tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.purgeDelay"]},{"name":"var purgeUnit: TimeUnit","description":"tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.purgeUnit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-handler/-configuration/purge-unit.html","searchKeys":["purgeUnit","var purgeUnit: TimeUnit","tv.blademaker.slash.ratelimit.RateLimitHandler.Configuration.purgeUnit"]},{"name":"var successfulCommands: Boolean = true","description":"tv.blademaker.slash.metrics.MetricsStrategy.successfulCommands","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/successful-commands.html","searchKeys":["successfulCommands","var successfulCommands: Boolean = true","tv.blademaker.slash.metrics.MetricsStrategy.successfulCommands"]}]
