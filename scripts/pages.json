[{"name":"ALL","description":"tv.blademaker.slash.annotations.InteractionTarget.ALL","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/-a-l-l/index.html","searchKeys":["ALL","ALL","tv.blademaker.slash.annotations.InteractionTarget.ALL"]},{"name":"ATTACHMENT","description":"tv.blademaker.slash.internal.ValidOptionTypes.ATTACHMENT","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-a-t-t-a-c-h-m-e-n-t/index.html","searchKeys":["ATTACHMENT","ATTACHMENT","tv.blademaker.slash.internal.ValidOptionTypes.ATTACHMENT"]},{"name":"AUDIO_CHANNEL","description":"tv.blademaker.slash.internal.ValidOptionTypes.AUDIO_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-a-u-d-i-o_-c-h-a-n-n-e-l/index.html","searchKeys":["AUDIO_CHANNEL","AUDIO_CHANNEL","tv.blademaker.slash.internal.ValidOptionTypes.AUDIO_CHANNEL"]},{"name":"BOOLEAN","description":"tv.blademaker.slash.internal.ValidOptionTypes.BOOLEAN","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN","tv.blademaker.slash.internal.ValidOptionTypes.BOOLEAN"]},{"name":"BOT","description":"tv.blademaker.slash.PermissionTarget.BOT","location":"-slash/tv.blademaker.slash/-permission-target/-b-o-t/index.html","searchKeys":["BOT","BOT","tv.blademaker.slash.PermissionTarget.BOT"]},{"name":"CHANNEL","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.CHANNEL","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/-c-h-a-n-n-e-l/index.html","searchKeys":["CHANNEL","CHANNEL","tv.blademaker.slash.ratelimit.RateLimit.Target.CHANNEL"]},{"name":"DM","description":"tv.blademaker.slash.annotations.InteractionTarget.DM","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/-d-m/index.html","searchKeys":["DM","DM","tv.blademaker.slash.annotations.InteractionTarget.DM"]},{"name":"DOUBLE","description":"tv.blademaker.slash.internal.ValidOptionTypes.DOUBLE","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-d-o-u-b-l-e/index.html","searchKeys":["DOUBLE","DOUBLE","tv.blademaker.slash.internal.ValidOptionTypes.DOUBLE"]},{"name":"FLOAT","description":"tv.blademaker.slash.internal.ValidOptionTypes.FLOAT","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-f-l-o-a-t/index.html","searchKeys":["FLOAT","FLOAT","tv.blademaker.slash.internal.ValidOptionTypes.FLOAT"]},{"name":"GUILD","description":"tv.blademaker.slash.annotations.InteractionTarget.GUILD","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/-g-u-i-l-d/index.html","searchKeys":["GUILD","GUILD","tv.blademaker.slash.annotations.InteractionTarget.GUILD"]},{"name":"GUILD","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.GUILD","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/-g-u-i-l-d/index.html","searchKeys":["GUILD","GUILD","tv.blademaker.slash.ratelimit.RateLimit.Target.GUILD"]},{"name":"GUILD_CATEGORY","description":"tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CATEGORY","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-g-u-i-l-d_-c-a-t-e-g-o-r-y/index.html","searchKeys":["GUILD_CATEGORY","GUILD_CATEGORY","tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CATEGORY"]},{"name":"GUILD_CHANNEL","description":"tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-g-u-i-l-d_-c-h-a-n-n-e-l/index.html","searchKeys":["GUILD_CHANNEL","GUILD_CHANNEL","tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CHANNEL"]},{"name":"GUILD_MESSAGE_CHANNEL","description":"tv.blademaker.slash.internal.ValidOptionTypes.GUILD_MESSAGE_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-g-u-i-l-d_-m-e-s-s-a-g-e_-c-h-a-n-n-e-l/index.html","searchKeys":["GUILD_MESSAGE_CHANNEL","GUILD_MESSAGE_CHANNEL","tv.blademaker.slash.internal.ValidOptionTypes.GUILD_MESSAGE_CHANNEL"]},{"name":"INTEGER","description":"tv.blademaker.slash.internal.ValidOptionTypes.INTEGER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-i-n-t-e-g-e-r/index.html","searchKeys":["INTEGER","INTEGER","tv.blademaker.slash.internal.ValidOptionTypes.INTEGER"]},{"name":"LONG","description":"tv.blademaker.slash.internal.ValidOptionTypes.LONG","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-l-o-n-g/index.html","searchKeys":["LONG","LONG","tv.blademaker.slash.internal.ValidOptionTypes.LONG"]},{"name":"MEMBER","description":"tv.blademaker.slash.internal.ValidOptionTypes.MEMBER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-m-e-m-b-e-r/index.html","searchKeys":["MEMBER","MEMBER","tv.blademaker.slash.internal.ValidOptionTypes.MEMBER"]},{"name":"ROLE","description":"tv.blademaker.slash.internal.ValidOptionTypes.ROLE","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-r-o-l-e/index.html","searchKeys":["ROLE","ROLE","tv.blademaker.slash.internal.ValidOptionTypes.ROLE"]},{"name":"STAGE_CHANNEL","description":"tv.blademaker.slash.internal.ValidOptionTypes.STAGE_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-s-t-a-g-e_-c-h-a-n-n-e-l/index.html","searchKeys":["STAGE_CHANNEL","STAGE_CHANNEL","tv.blademaker.slash.internal.ValidOptionTypes.STAGE_CHANNEL"]},{"name":"STRING","description":"tv.blademaker.slash.internal.ValidOptionTypes.STRING","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING","tv.blademaker.slash.internal.ValidOptionTypes.STRING"]},{"name":"TEXT_CHANNEL","description":"tv.blademaker.slash.internal.ValidOptionTypes.TEXT_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-t-e-x-t_-c-h-a-n-n-e-l/index.html","searchKeys":["TEXT_CHANNEL","TEXT_CHANNEL","tv.blademaker.slash.internal.ValidOptionTypes.TEXT_CHANNEL"]},{"name":"USER","description":"tv.blademaker.slash.PermissionTarget.USER","location":"-slash/tv.blademaker.slash/-permission-target/-u-s-e-r/index.html","searchKeys":["USER","USER","tv.blademaker.slash.PermissionTarget.USER"]},{"name":"USER","description":"tv.blademaker.slash.internal.ValidOptionTypes.USER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-u-s-e-r/index.html","searchKeys":["USER","USER","tv.blademaker.slash.internal.ValidOptionTypes.USER"]},{"name":"USER","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.USER","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/-u-s-e-r/index.html","searchKeys":["USER","USER","tv.blademaker.slash.ratelimit.RateLimit.Target.USER"]},{"name":"VOICE_CHANNEL","description":"tv.blademaker.slash.internal.ValidOptionTypes.VOICE_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-v-o-i-c-e_-c-h-a-n-n-e-l/index.html","searchKeys":["VOICE_CHANNEL","VOICE_CHANNEL","tv.blademaker.slash.internal.ValidOptionTypes.VOICE_CHANNEL"]},{"name":"abstract class BaseSlashCommand(val commandName: String) : InterceptorHandler<SlashCommandContext, SlashCommandInterceptor> ","description":"tv.blademaker.slash.BaseSlashCommand","location":"-slash/tv.blademaker.slash/-base-slash-command/index.html","searchKeys":["BaseSlashCommand","abstract class BaseSlashCommand(val commandName: String) : InterceptorHandler<SlashCommandContext, SlashCommandInterceptor> ","tv.blademaker.slash.BaseSlashCommand"]},{"name":"abstract class InterceptorHandler<C : InteractionContext<*>, T : Interceptor<C>>","description":"tv.blademaker.slash.internal.InterceptorHandler","location":"-slash/tv.blademaker.slash.internal/-interceptor-handler/index.html","searchKeys":["InterceptorHandler","abstract class InterceptorHandler<C : InteractionContext<*>, T : Interceptor<C>>","tv.blademaker.slash.internal.InterceptorHandler"]},{"name":"abstract class MessageCommand(val commandName: String) : InterceptorHandler<MessageCommandContext, MessageCommandInterceptor> ","description":"tv.blademaker.slash.MessageCommand","location":"-slash/tv.blademaker.slash/-message-command/index.html","searchKeys":["MessageCommand","abstract class MessageCommand(val commandName: String) : InterceptorHandler<MessageCommandContext, MessageCommandInterceptor> ","tv.blademaker.slash.MessageCommand"]},{"name":"abstract class UserCommand(val commandName: String) : InterceptorHandler<UserCommandContext, UserCommandInterceptor> ","description":"tv.blademaker.slash.UserCommand","location":"-slash/tv.blademaker.slash/-user-command/index.html","searchKeys":["UserCommand","abstract class UserCommand(val commandName: String) : InterceptorHandler<UserCommandContext, UserCommandInterceptor> ","tv.blademaker.slash.UserCommand"]},{"name":"abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: ButtonInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: ButtonInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: ModalInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: ModalInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Throwable, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onException(ex: Throwable, command: MessageCommand, event: MessageContextInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Throwable, command: MessageCommand, event: MessageContextInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onException(ex: Throwable, command: UserCommand, event: UserContextInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-exception.html","searchKeys":["onException","abstract fun onException(ex: Throwable, command: UserCommand, event: UserContextInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.onException"]},{"name":"abstract fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onInteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-interaction-target-mismatch.html","searchKeys":["onInteractionTargetMismatch","abstract fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","tv.blademaker.slash.exceptions.ExceptionHandler.onInteractionTargetMismatch"]},{"name":"abstract fun onPermissionLackException(ex: PermissionsLackException)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onPermissionLackException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-permission-lack-exception.html","searchKeys":["onPermissionLackException","abstract fun onPermissionLackException(ex: PermissionsLackException)","tv.blademaker.slash.exceptions.ExceptionHandler.onPermissionLackException"]},{"name":"abstract fun onTimeoutCancellationException(ex: TimeoutCancellationException, event: SlashCommandInteractionEvent, timeout: Duration)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.onTimeoutCancellationException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/on-timeout-cancellation-exception.html","searchKeys":["onTimeoutCancellationException","abstract fun onTimeoutCancellationException(ex: TimeoutCancellationException, event: SlashCommandInteractionEvent, timeout: Duration)","tv.blademaker.slash.exceptions.ExceptionHandler.onTimeoutCancellationException"]},{"name":"abstract fun reply(): ReplyCallbackAction","description":"tv.blademaker.slash.context.actions.ContextAction.reply","location":"-slash/tv.blademaker.slash.context.actions/-context-action/reply.html","searchKeys":["reply","abstract fun reply(): ReplyCallbackAction","tv.blademaker.slash.context.actions.ContextAction.reply"]},{"name":"abstract fun send(): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.actions.ContextAction.send","location":"-slash/tv.blademaker.slash.context.actions/-context-action/send.html","searchKeys":["send","abstract fun send(): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.actions.ContextAction.send"]},{"name":"abstract suspend fun acknowledge(ephemeral: Boolean = false)","description":"tv.blademaker.slash.context.DeferrableInteraction.acknowledge","location":"-slash/tv.blademaker.slash.context/-deferrable-interaction/acknowledge.html","searchKeys":["acknowledge","abstract suspend fun acknowledge(ephemeral: Boolean = false)","tv.blademaker.slash.context.DeferrableInteraction.acknowledge"]},{"name":"abstract suspend fun acquire(annotation: RateLimit, event: SlashCommandInteractionEvent): Long?","description":"tv.blademaker.slash.ratelimit.RateLimitClient.acquire","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-client/acquire.html","searchKeys":["acquire","abstract suspend fun acquire(annotation: RateLimit, event: SlashCommandInteractionEvent): Long?","tv.blademaker.slash.ratelimit.RateLimitClient.acquire"]},{"name":"abstract suspend fun handle(ctx: MessageCommandContext)","description":"tv.blademaker.slash.MessageCommand.handle","location":"-slash/tv.blademaker.slash/-message-command/handle.html","searchKeys":["handle","abstract suspend fun handle(ctx: MessageCommandContext)","tv.blademaker.slash.MessageCommand.handle"]},{"name":"abstract suspend fun handle(ctx: UserCommandContext)","description":"tv.blademaker.slash.UserCommand.handle","location":"-slash/tv.blademaker.slash/-user-command/handle.html","searchKeys":["handle","abstract suspend fun handle(ctx: UserCommandContext)","tv.blademaker.slash.UserCommand.handle"]},{"name":"abstract suspend fun intercept(ctx: C): Boolean","description":"tv.blademaker.slash.internal.Interceptor.intercept","location":"-slash/tv.blademaker.slash.internal/-interceptor/intercept.html","searchKeys":["intercept","abstract suspend fun intercept(ctx: C): Boolean","tv.blademaker.slash.internal.Interceptor.intercept"]},{"name":"abstract val client: SlashCommandClient","description":"tv.blademaker.slash.context.InteractionContext.client","location":"-slash/tv.blademaker.slash.context/-interaction-context/client.html","searchKeys":["client","abstract val client: SlashCommandClient","tv.blademaker.slash.context.InteractionContext.client"]},{"name":"abstract val configuration: ContextAction.Configuration","description":"tv.blademaker.slash.context.actions.ContextAction.configuration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/configuration.html","searchKeys":["configuration","abstract val configuration: ContextAction.Configuration","tv.blademaker.slash.context.actions.ContextAction.configuration"]},{"name":"abstract val event: E","description":"tv.blademaker.slash.context.InteractionContext.event","location":"-slash/tv.blademaker.slash.context/-interaction-context/event.html","searchKeys":["event","abstract val event: E","tv.blademaker.slash.context.InteractionContext.event"]},{"name":"abstract val function: KFunction<*>","description":"tv.blademaker.slash.context.FunctionHandler.function","location":"-slash/tv.blademaker.slash.context/-function-handler/function.html","searchKeys":["function","abstract val function: KFunction<*>","tv.blademaker.slash.context.FunctionHandler.function"]},{"name":"abstract val function: KFunction<*>","description":"tv.blademaker.slash.internal.Handler.function","location":"-slash/tv.blademaker.slash.internal/-handler/function.html","searchKeys":["function","abstract val function: KFunction<*>","tv.blademaker.slash.internal.Handler.function"]},{"name":"abstract val id: String","description":"tv.blademaker.slash.ratelimit.Bucket.id","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/id.html","searchKeys":["id","abstract val id: String","tv.blademaker.slash.ratelimit.Bucket.id"]},{"name":"abstract val interaction: Interaction","description":"tv.blademaker.slash.context.actions.ContextAction.interaction","location":"-slash/tv.blademaker.slash.context.actions/-context-action/interaction.html","searchKeys":["interaction","abstract val interaction: Interaction","tv.blademaker.slash.context.actions.ContextAction.interaction"]},{"name":"abstract val original: T","description":"tv.blademaker.slash.context.actions.ContextAction.original","location":"-slash/tv.blademaker.slash.context.actions/-context-action/original.html","searchKeys":["original","abstract val original: T","tv.blademaker.slash.context.actions.ContextAction.original"]},{"name":"abstract val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.Handler.parent","location":"-slash/tv.blademaker.slash.internal/-handler/parent.html","searchKeys":["parent","abstract val parent: BaseSlashCommand","tv.blademaker.slash.internal.Handler.parent"]},{"name":"abstract val path: String","description":"tv.blademaker.slash.internal.Handler.path","location":"-slash/tv.blademaker.slash.internal/-handler/path.html","searchKeys":["path","abstract val path: String","tv.blademaker.slash.internal.Handler.path"]},{"name":"abstract val remaining: Int","description":"tv.blademaker.slash.ratelimit.Bucket.remaining","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/remaining.html","searchKeys":["remaining","abstract val remaining: Int","tv.blademaker.slash.ratelimit.Bucket.remaining"]},{"name":"abstract val ttl: Long","description":"tv.blademaker.slash.ratelimit.Bucket.ttl","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/ttl.html","searchKeys":["ttl","abstract val ttl: Long","tv.blademaker.slash.ratelimit.Bucket.ttl"]},{"name":"abstract var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.context.SlashCommandContext.extra","location":"-slash/tv.blademaker.slash.context/-slash-command-context/extra.html","searchKeys":["extra","abstract var extra: AtomicReference<Any?>","tv.blademaker.slash.context.SlashCommandContext.extra"]},{"name":"annotation class OnAutoComplete(val name: String = \"\", val group: String = \"\", val optionName: String)","description":"tv.blademaker.slash.annotations.OnAutoComplete","location":"-slash/tv.blademaker.slash.annotations/-on-auto-complete/index.html","searchKeys":["OnAutoComplete","annotation class OnAutoComplete(val name: String = \"\", val group: String = \"\", val optionName: String)","tv.blademaker.slash.annotations.OnAutoComplete"]},{"name":"annotation class OnButton(val buttonId: String)","description":"tv.blademaker.slash.annotations.OnButton","location":"-slash/tv.blademaker.slash.annotations/-on-button/index.html","searchKeys":["OnButton","annotation class OnButton(val buttonId: String)","tv.blademaker.slash.annotations.OnButton"]},{"name":"annotation class OnModal(val modalId: String)","description":"tv.blademaker.slash.annotations.OnModal","location":"-slash/tv.blademaker.slash.annotations/-on-modal/index.html","searchKeys":["OnModal","annotation class OnModal(val modalId: String)","tv.blademaker.slash.annotations.OnModal"]},{"name":"annotation class OnSlashCommand(val name: String = \"\", val group: String = \"\", val target: InteractionTarget = InteractionTarget.GUILD)","description":"tv.blademaker.slash.annotations.OnSlashCommand","location":"-slash/tv.blademaker.slash.annotations/-on-slash-command/index.html","searchKeys":["OnSlashCommand","annotation class OnSlashCommand(val name: String = \"\", val group: String = \"\", val target: InteractionTarget = InteractionTarget.GUILD)","tv.blademaker.slash.annotations.OnSlashCommand"]},{"name":"annotation class OptionName(val value: String)","description":"tv.blademaker.slash.annotations.OptionName","location":"-slash/tv.blademaker.slash.annotations/-option-name/index.html","searchKeys":["OptionName","annotation class OptionName(val value: String)","tv.blademaker.slash.annotations.OptionName"]},{"name":"annotation class Permissions(val user: Array<Permission> = [], val bot: Array<Permission> = [])","description":"tv.blademaker.slash.annotations.Permissions","location":"-slash/tv.blademaker.slash.annotations/-permissions/index.html","searchKeys":["Permissions","annotation class Permissions(val user: Array<Permission> = [], val bot: Array<Permission> = [])","tv.blademaker.slash.annotations.Permissions"]},{"name":"annotation class RateLimit(val quota: Int, val duration: Long, val unit: TimeUnit, val target: RateLimit.Target)","description":"tv.blademaker.slash.ratelimit.RateLimit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/index.html","searchKeys":["RateLimit","annotation class RateLimit(val quota: Int, val duration: Long, val unit: TimeUnit, val target: RateLimit.Target)","tv.blademaker.slash.ratelimit.RateLimit"]},{"name":"class AutoCompleteContext(val event: CommandAutoCompleteInteractionEvent, val client: SlashCommandClient, val function: KFunction<*>) : CommandAutoCompleteInteraction, InteractionContext<CommandAutoCompleteInteractionEvent> , FunctionHandler","description":"tv.blademaker.slash.context.AutoCompleteContext","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/index.html","searchKeys":["AutoCompleteContext","class AutoCompleteContext(val event: CommandAutoCompleteInteractionEvent, val client: SlashCommandClient, val function: KFunction<*>) : CommandAutoCompleteInteraction, InteractionContext<CommandAutoCompleteInteractionEvent> , FunctionHandler","tv.blademaker.slash.context.AutoCompleteContext"]},{"name":"class AutoCompleteHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","description":"tv.blademaker.slash.internal.AutoCompleteHandler","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/index.html","searchKeys":["AutoCompleteHandler","class AutoCompleteHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","tv.blademaker.slash.internal.AutoCompleteHandler"]},{"name":"class ButtonContext(val event: ButtonInteractionEvent, val client: SlashCommandClient, val matcher: Matcher, val function: KFunction<*>) : ButtonInteraction, InteractionContext<ButtonInteractionEvent> , FunctionHandler","description":"tv.blademaker.slash.context.ButtonContext","location":"-slash/tv.blademaker.slash.context/-button-context/index.html","searchKeys":["ButtonContext","class ButtonContext(val event: ButtonInteractionEvent, val client: SlashCommandClient, val matcher: Matcher, val function: KFunction<*>) : ButtonInteraction, InteractionContext<ButtonInteractionEvent> , FunctionHandler","tv.blademaker.slash.context.ButtonContext"]},{"name":"class ButtonHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","description":"tv.blademaker.slash.internal.ButtonHandler","location":"-slash/tv.blademaker.slash.internal/-button-handler/index.html","searchKeys":["ButtonHandler","class ButtonHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","tv.blademaker.slash.internal.ButtonHandler"]},{"name":"class Configuration","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/index.html","searchKeys":["Configuration","class Configuration","tv.blademaker.slash.context.actions.ContextAction.Configuration"]},{"name":"class EmbedContextAction(val ctx: SlashCommandContext, val original: MessageEmbed) : ContextAction<MessageEmbed> ","description":"tv.blademaker.slash.context.actions.EmbedContextAction","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/index.html","searchKeys":["EmbedContextAction","class EmbedContextAction(val ctx: SlashCommandContext, val original: MessageEmbed) : ContextAction<MessageEmbed> ","tv.blademaker.slash.context.actions.EmbedContextAction"]},{"name":"class ExceptionHandlerImpl : ExceptionHandler","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/index.html","searchKeys":["ExceptionHandlerImpl","class ExceptionHandlerImpl : ExceptionHandler","tv.blademaker.slash.exceptions.ExceptionHandlerImpl"]},{"name":"class GuildSlashCommandContextImpl(val event: SlashCommandInteractionEvent, val client: SlashCommandClient, val function: KFunction<*>) : GuildSlashCommandContext","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/index.html","searchKeys":["GuildSlashCommandContextImpl","class GuildSlashCommandContextImpl(val event: SlashCommandInteractionEvent, val client: SlashCommandClient, val function: KFunction<*>) : GuildSlashCommandContext","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl"]},{"name":"class InteractionTargetMismatch(val context: SlashCommandContext, val commandPath: String, val target: InteractionTarget) : RuntimeException","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/index.html","searchKeys":["InteractionTargetMismatch","class InteractionTargetMismatch(val context: SlashCommandContext, val commandPath: String, val target: InteractionTarget) : RuntimeException","tv.blademaker.slash.exceptions.InteractionTargetMismatch"]},{"name":"class MessageCommandContext(val event: MessageContextInteractionEvent, val client: SlashCommandClient) : InteractionContext<MessageContextInteractionEvent> , MessageContextInteraction","description":"tv.blademaker.slash.context.MessageCommandContext","location":"-slash/tv.blademaker.slash.context/-message-command-context/index.html","searchKeys":["MessageCommandContext","class MessageCommandContext(val event: MessageContextInteractionEvent, val client: SlashCommandClient) : InteractionContext<MessageContextInteractionEvent> , MessageContextInteraction","tv.blademaker.slash.context.MessageCommandContext"]},{"name":"class MessageContextAction(val ctx: SlashCommandContext, val original: MessageCreateData) : ContextAction<MessageCreateData> ","description":"tv.blademaker.slash.context.actions.MessageContextAction","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/index.html","searchKeys":["MessageContextAction","class MessageContextAction(val ctx: SlashCommandContext, val original: MessageCreateData) : ContextAction<MessageCreateData> ","tv.blademaker.slash.context.actions.MessageContextAction"]},{"name":"class MetricsStrategy","description":"tv.blademaker.slash.metrics.MetricsStrategy","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/index.html","searchKeys":["MetricsStrategy","class MetricsStrategy","tv.blademaker.slash.metrics.MetricsStrategy"]},{"name":"class ModalContext(val event: ModalInteractionEvent, val client: SlashCommandClient, val matcher: Matcher, val function: KFunction<*>) : ModalInteraction, DeferrableInteraction, InteractionContext<ModalInteractionEvent> , FunctionHandler","description":"tv.blademaker.slash.context.ModalContext","location":"-slash/tv.blademaker.slash.context/-modal-context/index.html","searchKeys":["ModalContext","class ModalContext(val event: ModalInteractionEvent, val client: SlashCommandClient, val matcher: Matcher, val function: KFunction<*>) : ModalInteraction, DeferrableInteraction, InteractionContext<ModalInteractionEvent> , FunctionHandler","tv.blademaker.slash.context.ModalContext"]},{"name":"class ModalContextAction(val ctx: ModalContext, val original: MessageCreateData) : ContextAction<MessageCreateData> ","description":"tv.blademaker.slash.context.actions.ModalContextAction","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/index.html","searchKeys":["ModalContextAction","class ModalContextAction(val ctx: ModalContext, val original: MessageCreateData) : ContextAction<MessageCreateData> ","tv.blademaker.slash.context.actions.ModalContextAction"]},{"name":"class ModalHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","description":"tv.blademaker.slash.internal.ModalHandler","location":"-slash/tv.blademaker.slash.internal/-modal-handler/index.html","searchKeys":["ModalHandler","class ModalHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","tv.blademaker.slash.internal.ModalHandler"]},{"name":"class PermissionsLackException(val context: SlashCommandContext, val target: PermissionTarget, val permissions: Array<Permission>) : RuntimeException","description":"tv.blademaker.slash.exceptions.PermissionsLackException","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/index.html","searchKeys":["PermissionsLackException","class PermissionsLackException(val context: SlashCommandContext, val target: PermissionTarget, val permissions: Array<Permission>) : RuntimeException","tv.blademaker.slash.exceptions.PermissionsLackException"]},{"name":"class SlashCommandClient : EventListener, CoroutineScope","description":"tv.blademaker.slash.client.SlashCommandClient","location":"-slash/tv.blademaker.slash.client/-slash-command-client/index.html","searchKeys":["SlashCommandClient","class SlashCommandClient : EventListener, CoroutineScope","tv.blademaker.slash.client.SlashCommandClient"]},{"name":"class SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/index.html","searchKeys":["SlashCommandClientBuilder","class SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder"]},{"name":"class SlashCommandContextImpl(val event: SlashCommandInteractionEvent, val client: SlashCommandClient, val function: KFunction<*>) : SlashCommandContext","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/index.html","searchKeys":["SlashCommandContextImpl","class SlashCommandContextImpl(val event: SlashCommandInteractionEvent, val client: SlashCommandClient, val function: KFunction<*>) : SlashCommandContext","tv.blademaker.slash.context.impl.SlashCommandContextImpl"]},{"name":"class SlashCommandHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","description":"tv.blademaker.slash.internal.SlashCommandHandler","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/index.html","searchKeys":["SlashCommandHandler","class SlashCommandHandler(val parent: BaseSlashCommand, val function: KFunction<*>) : Handler","tv.blademaker.slash.internal.SlashCommandHandler"]},{"name":"class UserCommandContext(val event: UserContextInteractionEvent, val client: SlashCommandClient) : InteractionContext<UserContextInteractionEvent> , UserContextInteraction","description":"tv.blademaker.slash.context.UserCommandContext","location":"-slash/tv.blademaker.slash.context/-user-command-context/index.html","searchKeys":["UserCommandContext","class UserCommandContext(val event: UserContextInteractionEvent, val client: SlashCommandClient) : InteractionContext<UserContextInteractionEvent> , UserContextInteraction","tv.blademaker.slash.context.UserCommandContext"]},{"name":"constructor()","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration.Configuration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/-configuration.html","searchKeys":["Configuration","constructor()","tv.blademaker.slash.context.actions.ContextAction.Configuration.Configuration"]},{"name":"constructor()","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.ExceptionHandlerImpl","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/-exception-handler-impl.html","searchKeys":["ExceptionHandlerImpl","constructor()","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.ExceptionHandlerImpl"]},{"name":"constructor()","description":"tv.blademaker.slash.internal.InterceptorHandler.InterceptorHandler","location":"-slash/tv.blademaker.slash.internal/-interceptor-handler/-interceptor-handler.html","searchKeys":["InterceptorHandler","constructor()","tv.blademaker.slash.internal.InterceptorHandler.InterceptorHandler"]},{"name":"constructor()","description":"tv.blademaker.slash.metrics.MetricsStrategy.MetricsStrategy","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/-metrics-strategy.html","searchKeys":["MetricsStrategy","constructor()","tv.blademaker.slash.metrics.MetricsStrategy.MetricsStrategy"]},{"name":"constructor(commandName: String)","description":"tv.blademaker.slash.BaseSlashCommand.BaseSlashCommand","location":"-slash/tv.blademaker.slash/-base-slash-command/-base-slash-command.html","searchKeys":["BaseSlashCommand","constructor(commandName: String)","tv.blademaker.slash.BaseSlashCommand.BaseSlashCommand"]},{"name":"constructor(commandName: String)","description":"tv.blademaker.slash.MessageCommand.MessageCommand","location":"-slash/tv.blademaker.slash/-message-command/-message-command.html","searchKeys":["MessageCommand","constructor(commandName: String)","tv.blademaker.slash.MessageCommand.MessageCommand"]},{"name":"constructor(commandName: String)","description":"tv.blademaker.slash.UserCommand.UserCommand","location":"-slash/tv.blademaker.slash/-user-command/-user-command.html","searchKeys":["UserCommand","constructor(commandName: String)","tv.blademaker.slash.UserCommand.UserCommand"]},{"name":"constructor(context: SlashCommandContext, commandPath: String, target: InteractionTarget)","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.InteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/-interaction-target-mismatch.html","searchKeys":["InteractionTargetMismatch","constructor(context: SlashCommandContext, commandPath: String, target: InteractionTarget)","tv.blademaker.slash.exceptions.InteractionTargetMismatch.InteractionTargetMismatch"]},{"name":"constructor(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>)","description":"tv.blademaker.slash.exceptions.PermissionsLackException.PermissionsLackException","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/-permissions-lack-exception.html","searchKeys":["PermissionsLackException","constructor(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>)","tv.blademaker.slash.exceptions.PermissionsLackException.PermissionsLackException"]},{"name":"constructor(ctx: ModalContext, original: MessageCreateData)","description":"tv.blademaker.slash.context.actions.ModalContextAction.ModalContextAction","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/-modal-context-action.html","searchKeys":["ModalContextAction","constructor(ctx: ModalContext, original: MessageCreateData)","tv.blademaker.slash.context.actions.ModalContextAction.ModalContextAction"]},{"name":"constructor(ctx: SlashCommandContext, original: MessageCreateData)","description":"tv.blademaker.slash.context.actions.MessageContextAction.MessageContextAction","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/-message-context-action.html","searchKeys":["MessageContextAction","constructor(ctx: SlashCommandContext, original: MessageCreateData)","tv.blademaker.slash.context.actions.MessageContextAction.MessageContextAction"]},{"name":"constructor(ctx: SlashCommandContext, original: MessageEmbed)","description":"tv.blademaker.slash.context.actions.EmbedContextAction.EmbedContextAction","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/-embed-context-action.html","searchKeys":["EmbedContextAction","constructor(ctx: SlashCommandContext, original: MessageEmbed)","tv.blademaker.slash.context.actions.EmbedContextAction.EmbedContextAction"]},{"name":"constructor(elapsedTime: Long, slashCommands: List<BaseSlashCommand>, userCommands: List<UserCommand>, messageCommands: List<MessageCommand>)","description":"tv.blademaker.slash.DiscoveryResult.DiscoveryResult","location":"-slash/tv.blademaker.slash/-discovery-result/-discovery-result.html","searchKeys":["DiscoveryResult","constructor(elapsedTime: Long, slashCommands: List<BaseSlashCommand>, userCommands: List<UserCommand>, messageCommands: List<MessageCommand>)","tv.blademaker.slash.DiscoveryResult.DiscoveryResult"]},{"name":"constructor(event: ButtonInteractionEvent, client: SlashCommandClient, matcher: Matcher, function: KFunction<*>)","description":"tv.blademaker.slash.context.ButtonContext.ButtonContext","location":"-slash/tv.blademaker.slash.context/-button-context/-button-context.html","searchKeys":["ButtonContext","constructor(event: ButtonInteractionEvent, client: SlashCommandClient, matcher: Matcher, function: KFunction<*>)","tv.blademaker.slash.context.ButtonContext.ButtonContext"]},{"name":"constructor(event: CommandAutoCompleteInteractionEvent, client: SlashCommandClient, function: KFunction<*>)","description":"tv.blademaker.slash.context.AutoCompleteContext.AutoCompleteContext","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/-auto-complete-context.html","searchKeys":["AutoCompleteContext","constructor(event: CommandAutoCompleteInteractionEvent, client: SlashCommandClient, function: KFunction<*>)","tv.blademaker.slash.context.AutoCompleteContext.AutoCompleteContext"]},{"name":"constructor(event: MessageContextInteractionEvent, client: SlashCommandClient)","description":"tv.blademaker.slash.context.MessageCommandContext.MessageCommandContext","location":"-slash/tv.blademaker.slash.context/-message-command-context/-message-command-context.html","searchKeys":["MessageCommandContext","constructor(event: MessageContextInteractionEvent, client: SlashCommandClient)","tv.blademaker.slash.context.MessageCommandContext.MessageCommandContext"]},{"name":"constructor(event: ModalInteractionEvent, client: SlashCommandClient, matcher: Matcher, function: KFunction<*>)","description":"tv.blademaker.slash.context.ModalContext.ModalContext","location":"-slash/tv.blademaker.slash.context/-modal-context/-modal-context.html","searchKeys":["ModalContext","constructor(event: ModalInteractionEvent, client: SlashCommandClient, matcher: Matcher, function: KFunction<*>)","tv.blademaker.slash.context.ModalContext.ModalContext"]},{"name":"constructor(event: SlashCommandInteractionEvent, client: SlashCommandClient, function: KFunction<*>)","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.GuildSlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/-guild-slash-command-context-impl.html","searchKeys":["GuildSlashCommandContextImpl","constructor(event: SlashCommandInteractionEvent, client: SlashCommandClient, function: KFunction<*>)","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.GuildSlashCommandContextImpl"]},{"name":"constructor(event: SlashCommandInteractionEvent, client: SlashCommandClient, function: KFunction<*>)","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.SlashCommandContextImpl","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/-slash-command-context-impl.html","searchKeys":["SlashCommandContextImpl","constructor(event: SlashCommandInteractionEvent, client: SlashCommandClient, function: KFunction<*>)","tv.blademaker.slash.context.impl.SlashCommandContextImpl.SlashCommandContextImpl"]},{"name":"constructor(event: UserContextInteractionEvent, client: SlashCommandClient)","description":"tv.blademaker.slash.context.UserCommandContext.UserCommandContext","location":"-slash/tv.blademaker.slash.context/-user-command-context/-user-command-context.html","searchKeys":["UserCommandContext","constructor(event: UserContextInteractionEvent, client: SlashCommandClient)","tv.blademaker.slash.context.UserCommandContext.UserCommandContext"]},{"name":"constructor(message: List<MessageCommand>, slash: List<BaseSlashCommand>, user: List<UserCommand>)","description":"tv.blademaker.slash.internal.Registry.Registry","location":"-slash/tv.blademaker.slash.internal/-registry/-registry.html","searchKeys":["Registry","constructor(message: List<MessageCommand>, slash: List<BaseSlashCommand>, user: List<UserCommand>)","tv.blademaker.slash.internal.Registry.Registry"]},{"name":"constructor(parent: BaseSlashCommand, function: KFunction<*>)","description":"tv.blademaker.slash.internal.AutoCompleteHandler.AutoCompleteHandler","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/-auto-complete-handler.html","searchKeys":["AutoCompleteHandler","constructor(parent: BaseSlashCommand, function: KFunction<*>)","tv.blademaker.slash.internal.AutoCompleteHandler.AutoCompleteHandler"]},{"name":"constructor(parent: BaseSlashCommand, function: KFunction<*>)","description":"tv.blademaker.slash.internal.ButtonHandler.ButtonHandler","location":"-slash/tv.blademaker.slash.internal/-button-handler/-button-handler.html","searchKeys":["ButtonHandler","constructor(parent: BaseSlashCommand, function: KFunction<*>)","tv.blademaker.slash.internal.ButtonHandler.ButtonHandler"]},{"name":"constructor(parent: BaseSlashCommand, function: KFunction<*>)","description":"tv.blademaker.slash.internal.ModalHandler.ModalHandler","location":"-slash/tv.blademaker.slash.internal/-modal-handler/-modal-handler.html","searchKeys":["ModalHandler","constructor(parent: BaseSlashCommand, function: KFunction<*>)","tv.blademaker.slash.internal.ModalHandler.ModalHandler"]},{"name":"constructor(parent: BaseSlashCommand, function: KFunction<*>)","description":"tv.blademaker.slash.internal.SlashCommandHandler.SlashCommandHandler","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/-slash-command-handler.html","searchKeys":["SlashCommandHandler","constructor(parent: BaseSlashCommand, function: KFunction<*>)","tv.blademaker.slash.internal.SlashCommandHandler.SlashCommandHandler"]},{"name":"data class DiscoveryResult(val elapsedTime: Long, val slashCommands: List<BaseSlashCommand>, val userCommands: List<UserCommand>, val messageCommands: List<MessageCommand>)","description":"tv.blademaker.slash.DiscoveryResult","location":"-slash/tv.blademaker.slash/-discovery-result/index.html","searchKeys":["DiscoveryResult","data class DiscoveryResult(val elapsedTime: Long, val slashCommands: List<BaseSlashCommand>, val userCommands: List<UserCommand>, val messageCommands: List<MessageCommand>)","tv.blademaker.slash.DiscoveryResult"]},{"name":"data class Registry(val message: List<MessageCommand>, val slash: List<BaseSlashCommand>, val user: List<UserCommand>)","description":"tv.blademaker.slash.internal.Registry","location":"-slash/tv.blademaker.slash.internal/-registry/index.html","searchKeys":["Registry","data class Registry(val message: List<MessageCommand>, val slash: List<BaseSlashCommand>, val user: List<UserCommand>)","tv.blademaker.slash.internal.Registry"]},{"name":"enum InteractionTarget : Enum<InteractionTarget> ","description":"tv.blademaker.slash.annotations.InteractionTarget","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/index.html","searchKeys":["InteractionTarget","enum InteractionTarget : Enum<InteractionTarget> ","tv.blademaker.slash.annotations.InteractionTarget"]},{"name":"enum PermissionTarget : Enum<PermissionTarget> ","description":"tv.blademaker.slash.PermissionTarget","location":"-slash/tv.blademaker.slash/-permission-target/index.html","searchKeys":["PermissionTarget","enum PermissionTarget : Enum<PermissionTarget> ","tv.blademaker.slash.PermissionTarget"]},{"name":"enum Target : Enum<RateLimit.Target> ","description":"tv.blademaker.slash.ratelimit.RateLimit.Target","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/index.html","searchKeys":["Target","enum Target : Enum<RateLimit.Target> ","tv.blademaker.slash.ratelimit.RateLimit.Target"]},{"name":"enum ValidOptionTypes : Enum<ValidOptionTypes> ","description":"tv.blademaker.slash.internal.ValidOptionTypes","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/index.html","searchKeys":["ValidOptionTypes","enum ValidOptionTypes : Enum<ValidOptionTypes> ","tv.blademaker.slash.internal.ValidOptionTypes"]},{"name":"fun Array<Permission>.toHuman(jump: Boolean = false): String","description":"tv.blademaker.slash.SlashUtils.toHuman","location":"-slash/tv.blademaker.slash/-slash-utils/to-human.html","searchKeys":["toHuman","fun Array<Permission>.toHuman(jump: Boolean = false): String","tv.blademaker.slash.SlashUtils.toHuman"]},{"name":"fun MessageCreateBuilder.append(content: String): MessageCreateBuilder","description":"tv.blademaker.slash.utils.append","location":"-slash/tv.blademaker.slash.utils/append.html","searchKeys":["append","fun MessageCreateBuilder.append(content: String): MessageCreateBuilder","tv.blademaker.slash.utils.append"]},{"name":"fun MessageCreateBuilder.appendCodeBlock(content: String, language: String = \"\"): MessageCreateBuilder","description":"tv.blademaker.slash.utils.appendCodeBlock","location":"-slash/tv.blademaker.slash.utils/append-code-block.html","searchKeys":["appendCodeBlock","fun MessageCreateBuilder.appendCodeBlock(content: String, language: String = \"\"): MessageCreateBuilder","tv.blademaker.slash.utils.appendCodeBlock"]},{"name":"fun MessageCreateBuilder.appendLine(): MessageCreateBuilder","description":"tv.blademaker.slash.utils.appendLine","location":"-slash/tv.blademaker.slash.utils/append-line.html","searchKeys":["appendLine","fun MessageCreateBuilder.appendLine(): MessageCreateBuilder","tv.blademaker.slash.utils.appendLine"]},{"name":"fun MessageCreateBuilder.appendLine(content: String): MessageCreateBuilder","description":"tv.blademaker.slash.utils.appendLine","location":"-slash/tv.blademaker.slash.utils/append-line.html","searchKeys":["appendLine","fun MessageCreateBuilder.appendLine(content: String): MessageCreateBuilder","tv.blademaker.slash.utils.appendLine"]},{"name":"fun OnButton.matcher(input: String): Matcher","description":"tv.blademaker.slash.annotations.matcher","location":"-slash/tv.blademaker.slash.annotations/matcher.html","searchKeys":["matcher","fun OnButton.matcher(input: String): Matcher","tv.blademaker.slash.annotations.matcher"]},{"name":"fun OnModal.matcher(input: String): Matcher","description":"tv.blademaker.slash.annotations.matcher","location":"-slash/tv.blademaker.slash.annotations/matcher.html","searchKeys":["matcher","fun OnModal.matcher(input: String): Matcher","tv.blademaker.slash.annotations.matcher"]},{"name":"fun RestAction<*>.asEphemeral(): RestAction<*>","description":"tv.blademaker.slash.SlashUtils.asEphemeral","location":"-slash/tv.blademaker.slash/-slash-utils/as-ephemeral.html","searchKeys":["asEphemeral","fun RestAction<*>.asEphemeral(): RestAction<*>","tv.blademaker.slash.SlashUtils.asEphemeral"]},{"name":"fun RestAction<*>.asEphemeral(): RestAction<*>","description":"tv.blademaker.slash.extensions.asEphemeral","location":"-slash/tv.blademaker.slash.extensions/as-ephemeral.html","searchKeys":["asEphemeral","fun RestAction<*>.asEphemeral(): RestAction<*>","tv.blademaker.slash.extensions.asEphemeral"]},{"name":"fun addInterceptor(interceptor: Interceptor<*>): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.addInterceptor","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/add-interceptor.html","searchKeys":["addInterceptor","fun addInterceptor(interceptor: Interceptor<*>): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.addInterceptor"]},{"name":"fun addInterceptor(interceptor: T)","description":"tv.blademaker.slash.internal.InterceptorHandler.addInterceptor","location":"-slash/tv.blademaker.slash.internal/-interceptor-handler/add-interceptor.html","searchKeys":["addInterceptor","fun addInterceptor(interceptor: T)","tv.blademaker.slash.internal.InterceptorHandler.addInterceptor"]},{"name":"fun addMessageInterceptor(builder: suspend (ctx: MessageCommandContext) -> Boolean): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.addMessageInterceptor","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/add-message-interceptor.html","searchKeys":["addMessageInterceptor","fun addMessageInterceptor(builder: suspend (ctx: MessageCommandContext) -> Boolean): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.addMessageInterceptor"]},{"name":"fun addMessageInterceptor(interceptor: MessageCommandInterceptor): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.addMessageInterceptor","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/add-message-interceptor.html","searchKeys":["addMessageInterceptor","fun addMessageInterceptor(interceptor: MessageCommandInterceptor): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.addMessageInterceptor"]},{"name":"fun addSlashInterceptor(builder: suspend (ctx: SlashCommandContext) -> Boolean): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.addSlashInterceptor","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/add-slash-interceptor.html","searchKeys":["addSlashInterceptor","fun addSlashInterceptor(builder: suspend (ctx: SlashCommandContext) -> Boolean): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.addSlashInterceptor"]},{"name":"fun addSlashInterceptor(interceptor: SlashCommandInterceptor): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.addSlashInterceptor","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/add-slash-interceptor.html","searchKeys":["addSlashInterceptor","fun addSlashInterceptor(interceptor: SlashCommandInterceptor): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.addSlashInterceptor"]},{"name":"fun addUserInterceptor(builder: suspend (ctx: UserCommandContext) -> Boolean): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.addUserInterceptor","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/add-user-interceptor.html","searchKeys":["addUserInterceptor","fun addUserInterceptor(builder: suspend (ctx: UserCommandContext) -> Boolean): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.addUserInterceptor"]},{"name":"fun addUserInterceptor(interceptor: UserCommandInterceptor): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.addUserInterceptor","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/add-user-interceptor.html","searchKeys":["addUserInterceptor","fun addUserInterceptor(interceptor: UserCommandInterceptor): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.addUserInterceptor"]},{"name":"fun build(): SlashCommandClient","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.build","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/build.html","searchKeys":["build","fun build(): SlashCommandClient","tv.blademaker.slash.client.SlashCommandClientBuilder.build"]},{"name":"fun buildWith(jda: JDA): SlashCommandClient","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.buildWith","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/build-with.html","searchKeys":["buildWith","fun buildWith(jda: JDA): SlashCommandClient","tv.blademaker.slash.client.SlashCommandClientBuilder.buildWith"]},{"name":"fun buildWith(shardManager: ShardManager): SlashCommandClient","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.buildWith","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/build-with.html","searchKeys":["buildWith","fun buildWith(shardManager: ShardManager): SlashCommandClient","tv.blademaker.slash.client.SlashCommandClientBuilder.buildWith"]},{"name":"fun builder(packageName: String): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClient.Companion.builder","location":"-slash/tv.blademaker.slash.client/-slash-command-client/-companion/builder.html","searchKeys":["builder","fun builder(packageName: String): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClient.Companion.builder"]},{"name":"fun convert(option: OptionMapping?): Any?","description":"tv.blademaker.slash.internal.ValidOptionTypes.convert","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/convert.html","searchKeys":["convert","fun convert(option: OptionMapping?): Any?","tv.blademaker.slash.internal.ValidOptionTypes.convert"]},{"name":"fun discoverSlashCommands(packageName: String): DiscoveryResult","description":"tv.blademaker.slash.SlashUtils.discoverSlashCommands","location":"-slash/tv.blademaker.slash/-slash-utils/discover-slash-commands.html","searchKeys":["discoverSlashCommands","fun discoverSlashCommands(packageName: String): DiscoveryResult","tv.blademaker.slash.SlashUtils.discoverSlashCommands"]},{"name":"fun editOriginal(): WebhookMessageEditAction<Message>","description":"tv.blademaker.slash.context.actions.EmbedContextAction.editOriginal","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/edit-original.html","searchKeys":["editOriginal","fun editOriginal(): WebhookMessageEditAction<Message>","tv.blademaker.slash.context.actions.EmbedContextAction.editOriginal"]},{"name":"fun editOriginal(): WebhookMessageEditAction<Message>","description":"tv.blademaker.slash.context.actions.MessageContextAction.editOriginal","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/edit-original.html","searchKeys":["editOriginal","fun editOriginal(): WebhookMessageEditAction<Message>","tv.blademaker.slash.context.actions.MessageContextAction.editOriginal"]},{"name":"fun editOriginal(): WebhookMessageEditAction<Message>","description":"tv.blademaker.slash.context.actions.ModalContextAction.editOriginal","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/edit-original.html","searchKeys":["editOriginal","fun editOriginal(): WebhookMessageEditAction<Message>","tv.blademaker.slash.context.actions.ModalContextAction.editOriginal"]},{"name":"fun enableMetrics(): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.enableMetrics","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/enable-metrics.html","searchKeys":["enableMetrics","fun enableMetrics(): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.enableMetrics"]},{"name":"fun enableMetrics(builder: MetricsStrategy.() -> Unit): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.enableMetrics","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/enable-metrics.html","searchKeys":["enableMetrics","fun enableMetrics(builder: MetricsStrategy.() -> Unit): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.enableMetrics"]},{"name":"fun fromDiscovery(discovery: DiscoveryResult): Registry","description":"tv.blademaker.slash.internal.Registry.Companion.fromDiscovery","location":"-slash/tv.blademaker.slash.internal/-registry/-companion/from-discovery.html","searchKeys":["fromDiscovery","fun fromDiscovery(discovery: DiscoveryResult): Registry","tv.blademaker.slash.internal.Registry.Companion.fromDiscovery"]},{"name":"fun get(type: KType): ValidOptionTypes?","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion.get","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/get.html","searchKeys":["get","fun get(type: KType): ValidOptionTypes?","tv.blademaker.slash.internal.ValidOptionTypes.Companion.get"]},{"name":"fun guild(client: SlashCommandClient, event: SlashCommandInteractionEvent, function: KFunction<*>): GuildSlashCommandContext","description":"tv.blademaker.slash.context.SlashCommandContext.Companion.guild","location":"-slash/tv.blademaker.slash.context/-slash-command-context/-companion/guild.html","searchKeys":["guild","fun guild(client: SlashCommandClient, event: SlashCommandInteractionEvent, function: KFunction<*>): GuildSlashCommandContext","tv.blademaker.slash.context.SlashCommandContext.Companion.guild"]},{"name":"fun impl(client: SlashCommandClient, event: SlashCommandInteractionEvent, function: KFunction<*>): SlashCommandContext","description":"tv.blademaker.slash.context.SlashCommandContext.Companion.impl","location":"-slash/tv.blademaker.slash.context/-slash-command-context/-companion/impl.html","searchKeys":["impl","fun impl(client: SlashCommandClient, event: SlashCommandInteractionEvent, function: KFunction<*>): SlashCommandContext","tv.blademaker.slash.context.SlashCommandContext.Companion.impl"]},{"name":"fun isValidType(type: KClassifier?): Boolean","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion.isValidType","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/is-valid-type.html","searchKeys":["isValidType","fun isValidType(type: KClassifier?): Boolean","tv.blademaker.slash.internal.ValidOptionTypes.Companion.isValidType"]},{"name":"fun matcher(input: String): Matcher","description":"tv.blademaker.slash.internal.ButtonHandler.matcher","location":"-slash/tv.blademaker.slash.internal/-button-handler/matcher.html","searchKeys":["matcher","fun matcher(input: String): Matcher","tv.blademaker.slash.internal.ButtonHandler.matcher"]},{"name":"fun matcher(input: String): Matcher","description":"tv.blademaker.slash.internal.ModalHandler.matcher","location":"-slash/tv.blademaker.slash.internal/-modal-handler/matcher.html","searchKeys":["matcher","fun matcher(input: String): Matcher","tv.blademaker.slash.internal.ModalHandler.matcher"]},{"name":"fun matches(input: String): Boolean","description":"tv.blademaker.slash.internal.ButtonHandler.matches","location":"-slash/tv.blademaker.slash.internal/-button-handler/matches.html","searchKeys":["matches","fun matches(input: String): Boolean","tv.blademaker.slash.internal.ButtonHandler.matches"]},{"name":"fun matches(input: String): Boolean","description":"tv.blademaker.slash.internal.ModalHandler.matches","location":"-slash/tv.blademaker.slash.internal/-modal-handler/matches.html","searchKeys":["matches","fun matches(input: String): Boolean","tv.blademaker.slash.internal.ModalHandler.matches"]},{"name":"fun setRateLimitClient(client: RateLimitClient?): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.setRateLimitClient","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/set-rate-limit-client.html","searchKeys":["setRateLimitClient","fun setRateLimitClient(client: RateLimitClient?): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.setRateLimitClient"]},{"name":"fun valueOf(value: String): InteractionTarget","description":"tv.blademaker.slash.annotations.InteractionTarget.valueOf","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): InteractionTarget","tv.blademaker.slash.annotations.InteractionTarget.valueOf"]},{"name":"fun valueOf(value: String): PermissionTarget","description":"tv.blademaker.slash.PermissionTarget.valueOf","location":"-slash/tv.blademaker.slash/-permission-target/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PermissionTarget","tv.blademaker.slash.PermissionTarget.valueOf"]},{"name":"fun valueOf(value: String): RateLimit.Target","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.valueOf","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RateLimit.Target","tv.blademaker.slash.ratelimit.RateLimit.Target.valueOf"]},{"name":"fun valueOf(value: String): ValidOptionTypes","description":"tv.blademaker.slash.internal.ValidOptionTypes.valueOf","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ValidOptionTypes","tv.blademaker.slash.internal.ValidOptionTypes.valueOf"]},{"name":"fun values(): Array<InteractionTarget>","description":"tv.blademaker.slash.annotations.InteractionTarget.values","location":"-slash/tv.blademaker.slash.annotations/-interaction-target/values.html","searchKeys":["values","fun values(): Array<InteractionTarget>","tv.blademaker.slash.annotations.InteractionTarget.values"]},{"name":"fun values(): Array<PermissionTarget>","description":"tv.blademaker.slash.PermissionTarget.values","location":"-slash/tv.blademaker.slash/-permission-target/values.html","searchKeys":["values","fun values(): Array<PermissionTarget>","tv.blademaker.slash.PermissionTarget.values"]},{"name":"fun values(): Array<RateLimit.Target>","description":"tv.blademaker.slash.ratelimit.RateLimit.Target.values","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/-target/values.html","searchKeys":["values","fun values(): Array<RateLimit.Target>","tv.blademaker.slash.ratelimit.RateLimit.Target.values"]},{"name":"fun values(): Array<ValidOptionTypes>","description":"tv.blademaker.slash.internal.ValidOptionTypes.values","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/values.html","searchKeys":["values","fun values(): Array<ValidOptionTypes>","tv.blademaker.slash.internal.ValidOptionTypes.values"]},{"name":"fun withEventFlow(eventsFlow: MutableSharedFlow<GenericEvent>): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.withEventFlow","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/with-event-flow.html","searchKeys":["withEventFlow","fun withEventFlow(eventsFlow: MutableSharedFlow<GenericEvent>): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.withEventFlow"]},{"name":"fun withTimeout(duration: Duration): SlashCommandClientBuilder","description":"tv.blademaker.slash.client.SlashCommandClientBuilder.withTimeout","location":"-slash/tv.blademaker.slash.client/-slash-command-client-builder/with-timeout.html","searchKeys":["withTimeout","fun withTimeout(duration: Duration): SlashCommandClientBuilder","tv.blademaker.slash.client.SlashCommandClientBuilder.withTimeout"]},{"name":"inline fun <E : GenericEvent> on(events: SharedFlow<GenericEvent>, scope: CoroutineScope, noinline action: suspend (event: E) -> Unit): Job","description":"tv.blademaker.slash.SlashUtils.on","location":"-slash/tv.blademaker.slash/-slash-utils/on.html","searchKeys":["on","inline fun <E : GenericEvent> on(events: SharedFlow<GenericEvent>, scope: CoroutineScope, noinline action: suspend (event: E) -> Unit): Job","tv.blademaker.slash.SlashUtils.on"]},{"name":"inline suspend fun <E : GenericEvent> InteractionContext<*>.await(timeout: Duration, crossinline filter: suspend (event: E) -> Boolean): E?","description":"tv.blademaker.slash.context.await","location":"-slash/tv.blademaker.slash.context/await.html","searchKeys":["await","inline suspend fun <E : GenericEvent> InteractionContext<*>.await(timeout: Duration, crossinline filter: suspend (event: E) -> Boolean): E?","tv.blademaker.slash.context.await"]},{"name":"inline suspend fun <E : GenericEvent> await(events: SharedFlow<GenericEvent>, timeout: Duration, crossinline filter: suspend (event: E) -> Boolean): E?","description":"tv.blademaker.slash.SlashUtils.await","location":"-slash/tv.blademaker.slash/-slash-utils/await.html","searchKeys":["await","inline suspend fun <E : GenericEvent> await(events: SharedFlow<GenericEvent>, timeout: Duration, crossinline filter: suspend (event: E) -> Boolean): E?","tv.blademaker.slash.SlashUtils.await"]},{"name":"interface Bucket","description":"tv.blademaker.slash.ratelimit.Bucket","location":"-slash/tv.blademaker.slash.ratelimit/-bucket/index.html","searchKeys":["Bucket","interface Bucket","tv.blademaker.slash.ratelimit.Bucket"]},{"name":"interface ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction","location":"-slash/tv.blademaker.slash.context.actions/-context-action/index.html","searchKeys":["ContextAction","interface ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction"]},{"name":"interface DeferrableInteraction","description":"tv.blademaker.slash.context.DeferrableInteraction","location":"-slash/tv.blademaker.slash.context/-deferrable-interaction/index.html","searchKeys":["DeferrableInteraction","interface DeferrableInteraction","tv.blademaker.slash.context.DeferrableInteraction"]},{"name":"interface ExceptionHandler","description":"tv.blademaker.slash.exceptions.ExceptionHandler","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/index.html","searchKeys":["ExceptionHandler","interface ExceptionHandler","tv.blademaker.slash.exceptions.ExceptionHandler"]},{"name":"interface FunctionHandler","description":"tv.blademaker.slash.context.FunctionHandler","location":"-slash/tv.blademaker.slash.context/-function-handler/index.html","searchKeys":["FunctionHandler","interface FunctionHandler","tv.blademaker.slash.context.FunctionHandler"]},{"name":"interface GuildSlashCommandContext : SlashCommandContext","description":"tv.blademaker.slash.context.GuildSlashCommandContext","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/index.html","searchKeys":["GuildSlashCommandContext","interface GuildSlashCommandContext : SlashCommandContext","tv.blademaker.slash.context.GuildSlashCommandContext"]},{"name":"interface Handler","description":"tv.blademaker.slash.internal.Handler","location":"-slash/tv.blademaker.slash.internal/-handler/index.html","searchKeys":["Handler","interface Handler","tv.blademaker.slash.internal.Handler"]},{"name":"interface InteractionContext<E : GenericInteractionCreateEvent>","description":"tv.blademaker.slash.context.InteractionContext","location":"-slash/tv.blademaker.slash.context/-interaction-context/index.html","searchKeys":["InteractionContext","interface InteractionContext<E : GenericInteractionCreateEvent>","tv.blademaker.slash.context.InteractionContext"]},{"name":"interface Interceptor<C : InteractionContext<*>>","description":"tv.blademaker.slash.internal.Interceptor","location":"-slash/tv.blademaker.slash.internal/-interceptor/index.html","searchKeys":["Interceptor","interface Interceptor<C : InteractionContext<*>>","tv.blademaker.slash.internal.Interceptor"]},{"name":"interface MessageCommandInterceptor : Interceptor<MessageCommandContext> ","description":"tv.blademaker.slash.internal.MessageCommandInterceptor","location":"-slash/tv.blademaker.slash.internal/-message-command-interceptor/index.html","searchKeys":["MessageCommandInterceptor","interface MessageCommandInterceptor : Interceptor<MessageCommandContext> ","tv.blademaker.slash.internal.MessageCommandInterceptor"]},{"name":"interface RateLimitClient","description":"tv.blademaker.slash.ratelimit.RateLimitClient","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-client/index.html","searchKeys":["RateLimitClient","interface RateLimitClient","tv.blademaker.slash.ratelimit.RateLimitClient"]},{"name":"interface SlashCommandContext : DeferrableInteraction, InteractionContext<SlashCommandInteractionEvent> , FunctionHandler","description":"tv.blademaker.slash.context.SlashCommandContext","location":"-slash/tv.blademaker.slash.context/-slash-command-context/index.html","searchKeys":["SlashCommandContext","interface SlashCommandContext : DeferrableInteraction, InteractionContext<SlashCommandInteractionEvent> , FunctionHandler","tv.blademaker.slash.context.SlashCommandContext"]},{"name":"interface SlashCommandInterceptor : Interceptor<SlashCommandContext> ","description":"tv.blademaker.slash.internal.SlashCommandInterceptor","location":"-slash/tv.blademaker.slash.internal/-slash-command-interceptor/index.html","searchKeys":["SlashCommandInterceptor","interface SlashCommandInterceptor : Interceptor<SlashCommandContext> ","tv.blademaker.slash.internal.SlashCommandInterceptor"]},{"name":"interface UserCommandInterceptor : Interceptor<UserCommandContext> ","description":"tv.blademaker.slash.internal.UserCommandInterceptor","location":"-slash/tv.blademaker.slash.internal/-user-command-interceptor/index.html","searchKeys":["UserCommandInterceptor","interface UserCommandInterceptor : Interceptor<UserCommandContext> ","tv.blademaker.slash.internal.UserCommandInterceptor"]},{"name":"object Companion","description":"tv.blademaker.slash.client.SlashCommandClient.Companion","location":"-slash/tv.blademaker.slash.client/-slash-command-client/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.client.SlashCommandClient.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.context.SlashCommandContext.Companion","location":"-slash/tv.blademaker.slash.context/-slash-command-context/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.context.SlashCommandContext.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.context.actions.ContextAction.Companion","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.context.actions.ContextAction.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.AutoCompleteHandler.Companion","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.AutoCompleteHandler.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.Registry.Companion","location":"-slash/tv.blademaker.slash.internal/-registry/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.Registry.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.SlashCommandHandler.Companion","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.SlashCommandHandler.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.ValidOptionTypes.Companion"]},{"name":"object SlashUtils","description":"tv.blademaker.slash.SlashUtils","location":"-slash/tv.blademaker.slash/-slash-utils/index.html","searchKeys":["SlashUtils","object SlashUtils","tv.blademaker.slash.SlashUtils"]},{"name":"object UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","description":"tv.blademaker.slash.extensions.UncaughtExceptionHandler","location":"-slash/tv.blademaker.slash.extensions/-uncaught-exception-handler/index.html","searchKeys":["UncaughtExceptionHandler","object UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","tv.blademaker.slash.extensions.UncaughtExceptionHandler"]},{"name":"open fun applyConfiguration(configuration: ContextAction.Configuration.() -> Unit): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.applyConfiguration","location":"-slash/tv.blademaker.slash.context.actions/-context-action/apply-configuration.html","searchKeys":["applyConfiguration","open fun applyConfiguration(configuration: ContextAction.Configuration.() -> Unit): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.applyConfiguration"]},{"name":"open fun createBucketKey(annotation: RateLimit, event: SlashCommandInteractionEvent): String","description":"tv.blademaker.slash.ratelimit.RateLimitClient.createBucketKey","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-client/create-bucket-key.html","searchKeys":["createBucketKey","open fun createBucketKey(annotation: RateLimit, event: SlashCommandInteractionEvent): String","tv.blademaker.slash.ratelimit.RateLimitClient.createBucketKey"]},{"name":"open fun embed(builder: EmbedBuilder.() -> Unit): EmbedContextAction","description":"tv.blademaker.slash.context.SlashCommandContext.embed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/embed.html","searchKeys":["embed","open fun embed(builder: EmbedBuilder.() -> Unit): EmbedContextAction","tv.blademaker.slash.context.SlashCommandContext.embed"]},{"name":"open fun getOption(name: String): OptionMapping?","description":"tv.blademaker.slash.context.SlashCommandContext.getOption","location":"-slash/tv.blademaker.slash.context/-slash-command-context/get-option.html","searchKeys":["getOption","open fun getOption(name: String): OptionMapping?","tv.blademaker.slash.context.SlashCommandContext.getOption"]},{"name":"open fun message(builder: MessageCreateBuilder.() -> Unit): MessageContextAction","description":"tv.blademaker.slash.context.SlashCommandContext.message","location":"-slash/tv.blademaker.slash.context/-slash-command-context/message.html","searchKeys":["message","open fun message(builder: MessageCreateBuilder.() -> Unit): MessageContextAction","tv.blademaker.slash.context.SlashCommandContext.message"]},{"name":"open fun onRateLimitHit(ctx: SlashCommandContext, rateLimit: RateLimit, waitFor: Long)","description":"tv.blademaker.slash.ratelimit.RateLimitClient.onRateLimitHit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit-client/on-rate-limit-hit.html","searchKeys":["onRateLimitHit","open fun onRateLimitHit(ctx: SlashCommandContext, rateLimit: RateLimit, waitFor: Long)","tv.blademaker.slash.ratelimit.RateLimitClient.onRateLimitHit"]},{"name":"open fun queue()","description":"tv.blademaker.slash.context.actions.ContextAction.queue","location":"-slash/tv.blademaker.slash.context.actions/-context-action/queue.html","searchKeys":["queue","open fun queue()","tv.blademaker.slash.context.actions.ContextAction.queue"]},{"name":"open fun replyEmbed(builder: EmbedBuilder): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(builder: EmbedBuilder): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyEmbed"]},{"name":"open fun replyEmbed(builder: EmbedBuilder.() -> Unit): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(builder: EmbedBuilder.() -> Unit): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyEmbed"]},{"name":"open fun replyEmbed(embed: MessageEmbed): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(embed: MessageEmbed): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyEmbed"]},{"name":"open fun replyMessage(builder: MessageCreateBuilder): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(builder: MessageCreateBuilder): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(builder: MessageCreateBuilder.() -> Unit): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(builder: MessageCreateBuilder.() -> Unit): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(content: String): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(content: String): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(message: Message): ReplyCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(message: Message): ReplyCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyMessage"]},{"name":"open fun replyModal(customId: String, title: String, builder: Modal.Builder.() -> Unit): ModalCallbackAction","description":"tv.blademaker.slash.context.SlashCommandContext.replyModal","location":"-slash/tv.blademaker.slash.context/-slash-command-context/reply-modal.html","searchKeys":["replyModal","open fun replyModal(customId: String, title: String, builder: Modal.Builder.() -> Unit): ModalCallbackAction","tv.blademaker.slash.context.SlashCommandContext.replyModal"]},{"name":"open fun sendEmbed(builder: EmbedBuilder): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(builder: EmbedBuilder): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendEmbed"]},{"name":"open fun sendEmbed(builder: EmbedBuilder.() -> Unit): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(builder: EmbedBuilder.() -> Unit): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendEmbed"]},{"name":"open fun sendEmbed(embed: MessageEmbed): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(embed: MessageEmbed): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendEmbed"]},{"name":"open fun sendMessage(builder: MessageCreateBuilder): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(builder: MessageCreateBuilder): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(builder: MessageCreateBuilder.() -> Unit): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(builder: MessageCreateBuilder.() -> Unit): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(content: String): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(content: String): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(message: Message): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.context/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(message: Message): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.SlashCommandContext.sendMessage"]},{"name":"open fun setActionRows(rows: Collection<ActionRow>): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.setActionRows","location":"-slash/tv.blademaker.slash.context.actions/-context-action/set-action-rows.html","searchKeys":["setActionRows","open fun setActionRows(rows: Collection<ActionRow>): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.setActionRows"]},{"name":"open fun setActionRows(vararg rows: ActionRow): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.setActionRows","location":"-slash/tv.blademaker.slash.context.actions/-context-action/set-action-rows.html","searchKeys":["setActionRows","open fun setActionRows(vararg rows: ActionRow): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.setActionRows"]},{"name":"open fun setEphemeral(ephemeral: Boolean): ContextAction<T>","description":"tv.blademaker.slash.context.actions.ContextAction.setEphemeral","location":"-slash/tv.blademaker.slash.context.actions/-context-action/set-ephemeral.html","searchKeys":["setEphemeral","open fun setEphemeral(ephemeral: Boolean): ContextAction<T>","tv.blademaker.slash.context.actions.ContextAction.setEphemeral"]},{"name":"open fun wrap(e: Throwable, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.wrap","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/wrap.html","searchKeys":["wrap","open fun wrap(e: Throwable, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.wrap"]},{"name":"open fun wrap(e: Throwable, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandler.wrap","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler/wrap.html","searchKeys":["wrap","open fun wrap(e: Throwable, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandler.wrap"]},{"name":"open override fun onEvent(event: GenericEvent)","description":"tv.blademaker.slash.client.SlashCommandClient.onEvent","location":"-slash/tv.blademaker.slash.client/-slash-command-client/on-event.html","searchKeys":["onEvent","open override fun onEvent(event: GenericEvent)","tv.blademaker.slash.client.SlashCommandClient.onEvent"]},{"name":"open override fun onException(ex: Throwable, command: BaseSlashCommand, event: ButtonInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Throwable, command: BaseSlashCommand, event: ButtonInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onException(ex: Throwable, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Throwable, command: BaseSlashCommand, event: CommandAutoCompleteInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onException(ex: Throwable, command: BaseSlashCommand, event: ModalInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Throwable, command: BaseSlashCommand, event: ModalInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onException(ex: Throwable, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Throwable, command: BaseSlashCommand, event: SlashCommandInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onException(ex: Throwable, command: MessageCommand, event: MessageContextInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Throwable, command: MessageCommand, event: MessageContextInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onException(ex: Throwable, command: UserCommand, event: UserContextInteractionEvent)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-exception.html","searchKeys":["onException","open override fun onException(ex: Throwable, command: UserCommand, event: UserContextInteractionEvent)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onException"]},{"name":"open override fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onInteractionTargetMismatch","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-interaction-target-mismatch.html","searchKeys":["onInteractionTargetMismatch","open override fun onInteractionTargetMismatch(ex: InteractionTargetMismatch)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onInteractionTargetMismatch"]},{"name":"open override fun onPermissionLackException(ex: PermissionsLackException)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onPermissionLackException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-permission-lack-exception.html","searchKeys":["onPermissionLackException","open override fun onPermissionLackException(ex: PermissionsLackException)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onPermissionLackException"]},{"name":"open override fun onTimeoutCancellationException(ex: TimeoutCancellationException, event: SlashCommandInteractionEvent, timeout: Duration)","description":"tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onTimeoutCancellationException","location":"-slash/tv.blademaker.slash.exceptions/-exception-handler-impl/on-timeout-cancellation-exception.html","searchKeys":["onTimeoutCancellationException","open override fun onTimeoutCancellationException(ex: TimeoutCancellationException, event: SlashCommandInteractionEvent, timeout: Duration)","tv.blademaker.slash.exceptions.ExceptionHandlerImpl.onTimeoutCancellationException"]},{"name":"open override fun reply(): ReplyCallbackAction","description":"tv.blademaker.slash.context.actions.EmbedContextAction.reply","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/reply.html","searchKeys":["reply","open override fun reply(): ReplyCallbackAction","tv.blademaker.slash.context.actions.EmbedContextAction.reply"]},{"name":"open override fun reply(): ReplyCallbackAction","description":"tv.blademaker.slash.context.actions.MessageContextAction.reply","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/reply.html","searchKeys":["reply","open override fun reply(): ReplyCallbackAction","tv.blademaker.slash.context.actions.MessageContextAction.reply"]},{"name":"open override fun reply(): ReplyCallbackAction","description":"tv.blademaker.slash.context.actions.ModalContextAction.reply","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/reply.html","searchKeys":["reply","open override fun reply(): ReplyCallbackAction","tv.blademaker.slash.context.actions.ModalContextAction.reply"]},{"name":"open override fun send(): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.actions.EmbedContextAction.send","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/send.html","searchKeys":["send","open override fun send(): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.actions.EmbedContextAction.send"]},{"name":"open override fun send(): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.actions.MessageContextAction.send","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/send.html","searchKeys":["send","open override fun send(): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.actions.MessageContextAction.send"]},{"name":"open override fun send(): WebhookMessageCreateAction<Message>","description":"tv.blademaker.slash.context.actions.ModalContextAction.send","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/send.html","searchKeys":["send","open override fun send(): WebhookMessageCreateAction<Message>","tv.blademaker.slash.context.actions.ModalContextAction.send"]},{"name":"open override fun uncaughtException(t: Thread, e: Throwable)","description":"tv.blademaker.slash.extensions.UncaughtExceptionHandler.uncaughtException","location":"-slash/tv.blademaker.slash.extensions/-uncaught-exception-handler/uncaught-exception.html","searchKeys":["uncaughtException","open override fun uncaughtException(t: Thread, e: Throwable)","tv.blademaker.slash.extensions.UncaughtExceptionHandler.uncaughtException"]},{"name":"open override val channel: GuildMessageChannel","description":"tv.blademaker.slash.context.GuildSlashCommandContext.channel","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/channel.html","searchKeys":["channel","open override val channel: GuildMessageChannel","tv.blademaker.slash.context.GuildSlashCommandContext.channel"]},{"name":"open override val client: SlashCommandClient","description":"tv.blademaker.slash.context.AutoCompleteContext.client","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/client.html","searchKeys":["client","open override val client: SlashCommandClient","tv.blademaker.slash.context.AutoCompleteContext.client"]},{"name":"open override val client: SlashCommandClient","description":"tv.blademaker.slash.context.ButtonContext.client","location":"-slash/tv.blademaker.slash.context/-button-context/client.html","searchKeys":["client","open override val client: SlashCommandClient","tv.blademaker.slash.context.ButtonContext.client"]},{"name":"open override val client: SlashCommandClient","description":"tv.blademaker.slash.context.MessageCommandContext.client","location":"-slash/tv.blademaker.slash.context/-message-command-context/client.html","searchKeys":["client","open override val client: SlashCommandClient","tv.blademaker.slash.context.MessageCommandContext.client"]},{"name":"open override val client: SlashCommandClient","description":"tv.blademaker.slash.context.ModalContext.client","location":"-slash/tv.blademaker.slash.context/-modal-context/client.html","searchKeys":["client","open override val client: SlashCommandClient","tv.blademaker.slash.context.ModalContext.client"]},{"name":"open override val client: SlashCommandClient","description":"tv.blademaker.slash.context.UserCommandContext.client","location":"-slash/tv.blademaker.slash.context/-user-command-context/client.html","searchKeys":["client","open override val client: SlashCommandClient","tv.blademaker.slash.context.UserCommandContext.client"]},{"name":"open override val client: SlashCommandClient","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.client","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/client.html","searchKeys":["client","open override val client: SlashCommandClient","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.client"]},{"name":"open override val client: SlashCommandClient","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.client","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/client.html","searchKeys":["client","open override val client: SlashCommandClient","tv.blademaker.slash.context.impl.SlashCommandContextImpl.client"]},{"name":"open override val configuration: ContextAction.Configuration","description":"tv.blademaker.slash.context.actions.EmbedContextAction.configuration","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/configuration.html","searchKeys":["configuration","open override val configuration: ContextAction.Configuration","tv.blademaker.slash.context.actions.EmbedContextAction.configuration"]},{"name":"open override val configuration: ContextAction.Configuration","description":"tv.blademaker.slash.context.actions.MessageContextAction.configuration","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/configuration.html","searchKeys":["configuration","open override val configuration: ContextAction.Configuration","tv.blademaker.slash.context.actions.MessageContextAction.configuration"]},{"name":"open override val configuration: ContextAction.Configuration","description":"tv.blademaker.slash.context.actions.ModalContextAction.configuration","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/configuration.html","searchKeys":["configuration","open override val configuration: ContextAction.Configuration","tv.blademaker.slash.context.actions.ModalContextAction.configuration"]},{"name":"open override val coroutineContext: CoroutineContext","description":"tv.blademaker.slash.client.SlashCommandClient.coroutineContext","location":"-slash/tv.blademaker.slash.client/-slash-command-client/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","tv.blademaker.slash.client.SlashCommandClient.coroutineContext"]},{"name":"open override val event: ButtonInteractionEvent","description":"tv.blademaker.slash.context.ButtonContext.event","location":"-slash/tv.blademaker.slash.context/-button-context/event.html","searchKeys":["event","open override val event: ButtonInteractionEvent","tv.blademaker.slash.context.ButtonContext.event"]},{"name":"open override val event: CommandAutoCompleteInteractionEvent","description":"tv.blademaker.slash.context.AutoCompleteContext.event","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/event.html","searchKeys":["event","open override val event: CommandAutoCompleteInteractionEvent","tv.blademaker.slash.context.AutoCompleteContext.event"]},{"name":"open override val event: MessageContextInteractionEvent","description":"tv.blademaker.slash.context.MessageCommandContext.event","location":"-slash/tv.blademaker.slash.context/-message-command-context/event.html","searchKeys":["event","open override val event: MessageContextInteractionEvent","tv.blademaker.slash.context.MessageCommandContext.event"]},{"name":"open override val event: ModalInteractionEvent","description":"tv.blademaker.slash.context.ModalContext.event","location":"-slash/tv.blademaker.slash.context/-modal-context/event.html","searchKeys":["event","open override val event: ModalInteractionEvent","tv.blademaker.slash.context.ModalContext.event"]},{"name":"open override val event: SlashCommandInteractionEvent","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.event","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/event.html","searchKeys":["event","open override val event: SlashCommandInteractionEvent","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.event"]},{"name":"open override val event: SlashCommandInteractionEvent","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.event","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/event.html","searchKeys":["event","open override val event: SlashCommandInteractionEvent","tv.blademaker.slash.context.impl.SlashCommandContextImpl.event"]},{"name":"open override val event: UserContextInteractionEvent","description":"tv.blademaker.slash.context.UserCommandContext.event","location":"-slash/tv.blademaker.slash.context/-user-command-context/event.html","searchKeys":["event","open override val event: UserContextInteractionEvent","tv.blademaker.slash.context.UserCommandContext.event"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.context.AutoCompleteContext.function","location":"-slash/tv.blademaker.slash.context/-auto-complete-context/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.context.AutoCompleteContext.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.context.ButtonContext.function","location":"-slash/tv.blademaker.slash.context/-button-context/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.context.ButtonContext.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.context.ModalContext.function","location":"-slash/tv.blademaker.slash.context/-modal-context/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.context.ModalContext.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.function","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.function","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.context.impl.SlashCommandContextImpl.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.internal.AutoCompleteHandler.function","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.internal.AutoCompleteHandler.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.internal.ButtonHandler.function","location":"-slash/tv.blademaker.slash.internal/-button-handler/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.internal.ButtonHandler.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.internal.ModalHandler.function","location":"-slash/tv.blademaker.slash.internal/-modal-handler/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.internal.ModalHandler.function"]},{"name":"open override val function: KFunction<*>","description":"tv.blademaker.slash.internal.SlashCommandHandler.function","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/function.html","searchKeys":["function","open override val function: KFunction<*>","tv.blademaker.slash.internal.SlashCommandHandler.function"]},{"name":"open override val guild: Guild","description":"tv.blademaker.slash.context.GuildSlashCommandContext.guild","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/guild.html","searchKeys":["guild","open override val guild: Guild","tv.blademaker.slash.context.GuildSlashCommandContext.guild"]},{"name":"open override val interaction: CommandInteraction","description":"tv.blademaker.slash.context.SlashCommandContext.interaction","location":"-slash/tv.blademaker.slash.context/-slash-command-context/interaction.html","searchKeys":["interaction","open override val interaction: CommandInteraction","tv.blademaker.slash.context.SlashCommandContext.interaction"]},{"name":"open override val interaction: Interaction","description":"tv.blademaker.slash.context.actions.EmbedContextAction.interaction","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/interaction.html","searchKeys":["interaction","open override val interaction: Interaction","tv.blademaker.slash.context.actions.EmbedContextAction.interaction"]},{"name":"open override val interaction: Interaction","description":"tv.blademaker.slash.context.actions.MessageContextAction.interaction","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/interaction.html","searchKeys":["interaction","open override val interaction: Interaction","tv.blademaker.slash.context.actions.MessageContextAction.interaction"]},{"name":"open override val interaction: Interaction","description":"tv.blademaker.slash.context.actions.ModalContextAction.interaction","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/interaction.html","searchKeys":["interaction","open override val interaction: Interaction","tv.blademaker.slash.context.actions.ModalContextAction.interaction"]},{"name":"open override val member: Member","description":"tv.blademaker.slash.context.GuildSlashCommandContext.member","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/member.html","searchKeys":["member","open override val member: Member","tv.blademaker.slash.context.GuildSlashCommandContext.member"]},{"name":"open override val original: MessageCreateData","description":"tv.blademaker.slash.context.actions.MessageContextAction.original","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/original.html","searchKeys":["original","open override val original: MessageCreateData","tv.blademaker.slash.context.actions.MessageContextAction.original"]},{"name":"open override val original: MessageCreateData","description":"tv.blademaker.slash.context.actions.ModalContextAction.original","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/original.html","searchKeys":["original","open override val original: MessageCreateData","tv.blademaker.slash.context.actions.ModalContextAction.original"]},{"name":"open override val original: MessageEmbed","description":"tv.blademaker.slash.context.actions.EmbedContextAction.original","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/original.html","searchKeys":["original","open override val original: MessageEmbed","tv.blademaker.slash.context.actions.EmbedContextAction.original"]},{"name":"open override val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.AutoCompleteHandler.parent","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/parent.html","searchKeys":["parent","open override val parent: BaseSlashCommand","tv.blademaker.slash.internal.AutoCompleteHandler.parent"]},{"name":"open override val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.ButtonHandler.parent","location":"-slash/tv.blademaker.slash.internal/-button-handler/parent.html","searchKeys":["parent","open override val parent: BaseSlashCommand","tv.blademaker.slash.internal.ButtonHandler.parent"]},{"name":"open override val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.ModalHandler.parent","location":"-slash/tv.blademaker.slash.internal/-modal-handler/parent.html","searchKeys":["parent","open override val parent: BaseSlashCommand","tv.blademaker.slash.internal.ModalHandler.parent"]},{"name":"open override val parent: BaseSlashCommand","description":"tv.blademaker.slash.internal.SlashCommandHandler.parent","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/parent.html","searchKeys":["parent","open override val parent: BaseSlashCommand","tv.blademaker.slash.internal.SlashCommandHandler.parent"]},{"name":"open override val path: String","description":"tv.blademaker.slash.internal.AutoCompleteHandler.path","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/path.html","searchKeys":["path","open override val path: String","tv.blademaker.slash.internal.AutoCompleteHandler.path"]},{"name":"open override val path: String","description":"tv.blademaker.slash.internal.ButtonHandler.path","location":"-slash/tv.blademaker.slash.internal/-button-handler/path.html","searchKeys":["path","open override val path: String","tv.blademaker.slash.internal.ButtonHandler.path"]},{"name":"open override val path: String","description":"tv.blademaker.slash.internal.ModalHandler.path","location":"-slash/tv.blademaker.slash.internal/-modal-handler/path.html","searchKeys":["path","open override val path: String","tv.blademaker.slash.internal.ModalHandler.path"]},{"name":"open override val path: String","description":"tv.blademaker.slash.internal.SlashCommandHandler.path","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/path.html","searchKeys":["path","open override val path: String","tv.blademaker.slash.internal.SlashCommandHandler.path"]},{"name":"open override var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.extra","location":"-slash/tv.blademaker.slash.context.impl/-guild-slash-command-context-impl/extra.html","searchKeys":["extra","open override var extra: AtomicReference<Any?>","tv.blademaker.slash.context.impl.GuildSlashCommandContextImpl.extra"]},{"name":"open override var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.context.impl.SlashCommandContextImpl.extra","location":"-slash/tv.blademaker.slash.context.impl/-slash-command-context-impl/extra.html","searchKeys":["extra","open override var extra: AtomicReference<Any?>","tv.blademaker.slash.context.impl.SlashCommandContextImpl.extra"]},{"name":"open suspend fun acknowledgeAsync(ephemeral: Boolean): Deferred<Unit>","description":"tv.blademaker.slash.context.DeferrableInteraction.acknowledgeAsync","location":"-slash/tv.blademaker.slash.context/-deferrable-interaction/acknowledge-async.html","searchKeys":["acknowledgeAsync","open suspend fun acknowledgeAsync(ephemeral: Boolean): Deferred<Unit>","tv.blademaker.slash.context.DeferrableInteraction.acknowledgeAsync"]},{"name":"open suspend override fun acknowledge(ephemeral: Boolean)","description":"tv.blademaker.slash.context.ModalContext.acknowledge","location":"-slash/tv.blademaker.slash.context/-modal-context/acknowledge.html","searchKeys":["acknowledge","open suspend override fun acknowledge(ephemeral: Boolean)","tv.blademaker.slash.context.ModalContext.acknowledge"]},{"name":"open suspend override fun acknowledge(ephemeral: Boolean)","description":"tv.blademaker.slash.context.SlashCommandContext.acknowledge","location":"-slash/tv.blademaker.slash.context/-slash-command-context/acknowledge.html","searchKeys":["acknowledge","open suspend override fun acknowledge(ephemeral: Boolean)","tv.blademaker.slash.context.SlashCommandContext.acknowledge"]},{"name":"open suspend override fun acknowledgeAsync(ephemeral: Boolean): Deferred<Unit>","description":"tv.blademaker.slash.context.ModalContext.acknowledgeAsync","location":"-slash/tv.blademaker.slash.context/-modal-context/acknowledge-async.html","searchKeys":["acknowledgeAsync","open suspend override fun acknowledgeAsync(ephemeral: Boolean): Deferred<Unit>","tv.blademaker.slash.context.ModalContext.acknowledgeAsync"]},{"name":"open val channel: MessageChannel","description":"tv.blademaker.slash.context.SlashCommandContext.channel","location":"-slash/tv.blademaker.slash.context/-slash-command-context/channel.html","searchKeys":["channel","open val channel: MessageChannel","tv.blademaker.slash.context.SlashCommandContext.channel"]},{"name":"open val guild: Guild?","description":"tv.blademaker.slash.context.SlashCommandContext.guild","location":"-slash/tv.blademaker.slash.context/-slash-command-context/guild.html","searchKeys":["guild","open val guild: Guild?","tv.blademaker.slash.context.SlashCommandContext.guild"]},{"name":"open val hook: InteractionHook","description":"tv.blademaker.slash.context.SlashCommandContext.hook","location":"-slash/tv.blademaker.slash.context/-slash-command-context/hook.html","searchKeys":["hook","open val hook: InteractionHook","tv.blademaker.slash.context.SlashCommandContext.hook"]},{"name":"open val interaction: Interaction","description":"tv.blademaker.slash.context.InteractionContext.interaction","location":"-slash/tv.blademaker.slash.context/-interaction-context/interaction.html","searchKeys":["interaction","open val interaction: Interaction","tv.blademaker.slash.context.InteractionContext.interaction"]},{"name":"open val isAcknowledged: Boolean","description":"tv.blademaker.slash.context.SlashCommandContext.isAcknowledged","location":"-slash/tv.blademaker.slash.context/-slash-command-context/is-acknowledged.html","searchKeys":["isAcknowledged","open val isAcknowledged: Boolean","tv.blademaker.slash.context.SlashCommandContext.isAcknowledged"]},{"name":"open val isFromGuild: Boolean","description":"tv.blademaker.slash.context.SlashCommandContext.isFromGuild","location":"-slash/tv.blademaker.slash.context/-slash-command-context/is-from-guild.html","searchKeys":["isFromGuild","open val isFromGuild: Boolean","tv.blademaker.slash.context.SlashCommandContext.isFromGuild"]},{"name":"open val member: Member?","description":"tv.blademaker.slash.context.SlashCommandContext.member","location":"-slash/tv.blademaker.slash.context/-slash-command-context/member.html","searchKeys":["member","open val member: Member?","tv.blademaker.slash.context.SlashCommandContext.member"]},{"name":"open val options: List<OptionMapping>","description":"tv.blademaker.slash.context.SlashCommandContext.options","location":"-slash/tv.blademaker.slash.context/-slash-command-context/options.html","searchKeys":["options","open val options: List<OptionMapping>","tv.blademaker.slash.context.SlashCommandContext.options"]},{"name":"open val selfMember: Member","description":"tv.blademaker.slash.context.GuildSlashCommandContext.selfMember","location":"-slash/tv.blademaker.slash.context/-guild-slash-command-context/self-member.html","searchKeys":["selfMember","open val selfMember: Member","tv.blademaker.slash.context.GuildSlashCommandContext.selfMember"]},{"name":"open val user: User","description":"tv.blademaker.slash.context.SlashCommandContext.user","location":"-slash/tv.blademaker.slash.context/-slash-command-context/user.html","searchKeys":["user","open val user: User","tv.blademaker.slash.context.SlashCommandContext.user"]},{"name":"suspend fun execute(ctx: AutoCompleteContext)","description":"tv.blademaker.slash.internal.AutoCompleteHandler.execute","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/execute.html","searchKeys":["execute","suspend fun execute(ctx: AutoCompleteContext)","tv.blademaker.slash.internal.AutoCompleteHandler.execute"]},{"name":"suspend fun execute(ctx: ButtonContext)","description":"tv.blademaker.slash.internal.ButtonHandler.execute","location":"-slash/tv.blademaker.slash.internal/-button-handler/execute.html","searchKeys":["execute","suspend fun execute(ctx: ButtonContext)","tv.blademaker.slash.internal.ButtonHandler.execute"]},{"name":"suspend fun execute(ctx: ModalContext)","description":"tv.blademaker.slash.internal.ModalHandler.execute","location":"-slash/tv.blademaker.slash.internal/-modal-handler/execute.html","searchKeys":["execute","suspend fun execute(ctx: ModalContext)","tv.blademaker.slash.internal.ModalHandler.execute"]},{"name":"suspend fun execute(ctx: SlashCommandContext, timeout: Duration)","description":"tv.blademaker.slash.internal.SlashCommandHandler.execute","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/execute.html","searchKeys":["execute","suspend fun execute(ctx: SlashCommandContext, timeout: Duration)","tv.blademaker.slash.internal.SlashCommandHandler.execute"]},{"name":"val CommandAutoCompleteInteractionEvent.commandPath: String","description":"tv.blademaker.slash.extensions.commandPath","location":"-slash/tv.blademaker.slash.extensions/command-path.html","searchKeys":["commandPath","val CommandAutoCompleteInteractionEvent.commandPath: String","tv.blademaker.slash.extensions.commandPath"]},{"name":"val GenericCommandInteractionEvent.commandPath: String","description":"tv.blademaker.slash.extensions.commandPath","location":"-slash/tv.blademaker.slash.extensions/command-path.html","searchKeys":["commandPath","val GenericCommandInteractionEvent.commandPath: String","tv.blademaker.slash.extensions.commandPath"]},{"name":"val bot: Array<Permission>","description":"tv.blademaker.slash.annotations.Permissions.bot","location":"-slash/tv.blademaker.slash.annotations/-permissions/bot.html","searchKeys":["bot","val bot: Array<Permission>","tv.blademaker.slash.annotations.Permissions.bot"]},{"name":"val buttonId: String","description":"tv.blademaker.slash.annotations.OnButton.buttonId","location":"-slash/tv.blademaker.slash.annotations/-on-button/button-id.html","searchKeys":["buttonId","val buttonId: String","tv.blademaker.slash.annotations.OnButton.buttonId"]},{"name":"val commandName: String","description":"tv.blademaker.slash.BaseSlashCommand.commandName","location":"-slash/tv.blademaker.slash/-base-slash-command/command-name.html","searchKeys":["commandName","val commandName: String","tv.blademaker.slash.BaseSlashCommand.commandName"]},{"name":"val commandName: String","description":"tv.blademaker.slash.MessageCommand.commandName","location":"-slash/tv.blademaker.slash/-message-command/command-name.html","searchKeys":["commandName","val commandName: String","tv.blademaker.slash.MessageCommand.commandName"]},{"name":"val commandName: String","description":"tv.blademaker.slash.UserCommand.commandName","location":"-slash/tv.blademaker.slash/-user-command/command-name.html","searchKeys":["commandName","val commandName: String","tv.blademaker.slash.UserCommand.commandName"]},{"name":"val commandPath: String","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.commandPath","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/command-path.html","searchKeys":["commandPath","val commandPath: String","tv.blademaker.slash.exceptions.InteractionTargetMismatch.commandPath"]},{"name":"val context: SlashCommandContext","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.context","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/context.html","searchKeys":["context","val context: SlashCommandContext","tv.blademaker.slash.exceptions.InteractionTargetMismatch.context"]},{"name":"val context: SlashCommandContext","description":"tv.blademaker.slash.exceptions.PermissionsLackException.context","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/context.html","searchKeys":["context","val context: SlashCommandContext","tv.blademaker.slash.exceptions.PermissionsLackException.context"]},{"name":"val ctx: ModalContext","description":"tv.blademaker.slash.context.actions.ModalContextAction.ctx","location":"-slash/tv.blademaker.slash.context.actions/-modal-context-action/ctx.html","searchKeys":["ctx","val ctx: ModalContext","tv.blademaker.slash.context.actions.ModalContextAction.ctx"]},{"name":"val ctx: SlashCommandContext","description":"tv.blademaker.slash.context.actions.EmbedContextAction.ctx","location":"-slash/tv.blademaker.slash.context.actions/-embed-context-action/ctx.html","searchKeys":["ctx","val ctx: SlashCommandContext","tv.blademaker.slash.context.actions.EmbedContextAction.ctx"]},{"name":"val ctx: SlashCommandContext","description":"tv.blademaker.slash.context.actions.MessageContextAction.ctx","location":"-slash/tv.blademaker.slash.context.actions/-message-context-action/ctx.html","searchKeys":["ctx","val ctx: SlashCommandContext","tv.blademaker.slash.context.actions.MessageContextAction.ctx"]},{"name":"val duration: Long","description":"tv.blademaker.slash.ratelimit.RateLimit.duration","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/duration.html","searchKeys":["duration","val duration: Long","tv.blademaker.slash.ratelimit.RateLimit.duration"]},{"name":"val elapsedTime: Long","description":"tv.blademaker.slash.DiscoveryResult.elapsedTime","location":"-slash/tv.blademaker.slash/-discovery-result/elapsed-time.html","searchKeys":["elapsedTime","val elapsedTime: Long","tv.blademaker.slash.DiscoveryResult.elapsedTime"]},{"name":"val events: SharedFlow<GenericEvent>","description":"tv.blademaker.slash.client.SlashCommandClient.events","location":"-slash/tv.blademaker.slash.client/-slash-command-client/events.html","searchKeys":["events","val events: SharedFlow<GenericEvent>","tv.blademaker.slash.client.SlashCommandClient.events"]},{"name":"val group: String","description":"tv.blademaker.slash.annotations.OnAutoComplete.group","location":"-slash/tv.blademaker.slash.annotations/-on-auto-complete/group.html","searchKeys":["group","val group: String","tv.blademaker.slash.annotations.OnAutoComplete.group"]},{"name":"val group: String","description":"tv.blademaker.slash.annotations.OnSlashCommand.group","location":"-slash/tv.blademaker.slash.annotations/-on-slash-command/group.html","searchKeys":["group","val group: String","tv.blademaker.slash.annotations.OnSlashCommand.group"]},{"name":"val log: Logger","description":"tv.blademaker.slash.client.SlashCommandClient.Companion.log","location":"-slash/tv.blademaker.slash.client/-slash-command-client/-companion/log.html","searchKeys":["log","val log: Logger","tv.blademaker.slash.client.SlashCommandClient.Companion.log"]},{"name":"val matcher: Matcher","description":"tv.blademaker.slash.context.ButtonContext.matcher","location":"-slash/tv.blademaker.slash.context/-button-context/matcher.html","searchKeys":["matcher","val matcher: Matcher","tv.blademaker.slash.context.ButtonContext.matcher"]},{"name":"val matcher: Matcher","description":"tv.blademaker.slash.context.ModalContext.matcher","location":"-slash/tv.blademaker.slash.context/-modal-context/matcher.html","searchKeys":["matcher","val matcher: Matcher","tv.blademaker.slash.context.ModalContext.matcher"]},{"name":"val message: List<MessageCommand>","description":"tv.blademaker.slash.internal.Registry.message","location":"-slash/tv.blademaker.slash.internal/-registry/message.html","searchKeys":["message","val message: List<MessageCommand>","tv.blademaker.slash.internal.Registry.message"]},{"name":"val messageCommands: List<MessageCommand>","description":"tv.blademaker.slash.DiscoveryResult.messageCommands","location":"-slash/tv.blademaker.slash/-discovery-result/message-commands.html","searchKeys":["messageCommands","val messageCommands: List<MessageCommand>","tv.blademaker.slash.DiscoveryResult.messageCommands"]},{"name":"val modalId: String","description":"tv.blademaker.slash.annotations.OnModal.modalId","location":"-slash/tv.blademaker.slash.annotations/-on-modal/modal-id.html","searchKeys":["modalId","val modalId: String","tv.blademaker.slash.annotations.OnModal.modalId"]},{"name":"val name: String","description":"tv.blademaker.slash.annotations.OnAutoComplete.name","location":"-slash/tv.blademaker.slash.annotations/-on-auto-complete/name.html","searchKeys":["name","val name: String","tv.blademaker.slash.annotations.OnAutoComplete.name"]},{"name":"val name: String","description":"tv.blademaker.slash.annotations.OnSlashCommand.name","location":"-slash/tv.blademaker.slash.annotations/-on-slash-command/name.html","searchKeys":["name","val name: String","tv.blademaker.slash.annotations.OnSlashCommand.name"]},{"name":"val optionName: String","description":"tv.blademaker.slash.annotations.OnAutoComplete.optionName","location":"-slash/tv.blademaker.slash.annotations/-on-auto-complete/option-name.html","searchKeys":["optionName","val optionName: String","tv.blademaker.slash.annotations.OnAutoComplete.optionName"]},{"name":"val optionName: String","description":"tv.blademaker.slash.internal.AutoCompleteHandler.optionName","location":"-slash/tv.blademaker.slash.internal/-auto-complete-handler/option-name.html","searchKeys":["optionName","val optionName: String","tv.blademaker.slash.internal.AutoCompleteHandler.optionName"]},{"name":"val permissions: Array<Permission>","description":"tv.blademaker.slash.exceptions.PermissionsLackException.permissions","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/permissions.html","searchKeys":["permissions","val permissions: Array<Permission>","tv.blademaker.slash.exceptions.PermissionsLackException.permissions"]},{"name":"val permissions: Permissions?","description":"tv.blademaker.slash.internal.SlashCommandHandler.permissions","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/permissions.html","searchKeys":["permissions","val permissions: Permissions?","tv.blademaker.slash.internal.SlashCommandHandler.permissions"]},{"name":"val quota: Int","description":"tv.blademaker.slash.ratelimit.RateLimit.quota","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/quota.html","searchKeys":["quota","val quota: Int","tv.blademaker.slash.ratelimit.RateLimit.quota"]},{"name":"val rateLimit: RateLimit?","description":"tv.blademaker.slash.internal.SlashCommandHandler.rateLimit","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/rate-limit.html","searchKeys":["rateLimit","val rateLimit: RateLimit?","tv.blademaker.slash.internal.SlashCommandHandler.rateLimit"]},{"name":"val slash: List<BaseSlashCommand>","description":"tv.blademaker.slash.internal.Registry.slash","location":"-slash/tv.blademaker.slash.internal/-registry/slash.html","searchKeys":["slash","val slash: List<BaseSlashCommand>","tv.blademaker.slash.internal.Registry.slash"]},{"name":"val slashCommands: List<BaseSlashCommand>","description":"tv.blademaker.slash.DiscoveryResult.slashCommands","location":"-slash/tv.blademaker.slash/-discovery-result/slash-commands.html","searchKeys":["slashCommands","val slashCommands: List<BaseSlashCommand>","tv.blademaker.slash.DiscoveryResult.slashCommands"]},{"name":"val target: InteractionTarget","description":"tv.blademaker.slash.annotations.OnSlashCommand.target","location":"-slash/tv.blademaker.slash.annotations/-on-slash-command/target.html","searchKeys":["target","val target: InteractionTarget","tv.blademaker.slash.annotations.OnSlashCommand.target"]},{"name":"val target: InteractionTarget","description":"tv.blademaker.slash.exceptions.InteractionTargetMismatch.target","location":"-slash/tv.blademaker.slash.exceptions/-interaction-target-mismatch/target.html","searchKeys":["target","val target: InteractionTarget","tv.blademaker.slash.exceptions.InteractionTargetMismatch.target"]},{"name":"val target: InteractionTarget","description":"tv.blademaker.slash.internal.SlashCommandHandler.target","location":"-slash/tv.blademaker.slash.internal/-slash-command-handler/target.html","searchKeys":["target","val target: InteractionTarget","tv.blademaker.slash.internal.SlashCommandHandler.target"]},{"name":"val target: PermissionTarget","description":"tv.blademaker.slash.exceptions.PermissionsLackException.target","location":"-slash/tv.blademaker.slash.exceptions/-permissions-lack-exception/target.html","searchKeys":["target","val target: PermissionTarget","tv.blademaker.slash.exceptions.PermissionsLackException.target"]},{"name":"val target: RateLimit.Target","description":"tv.blademaker.slash.ratelimit.RateLimit.target","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/target.html","searchKeys":["target","val target: RateLimit.Target","tv.blademaker.slash.ratelimit.RateLimit.target"]},{"name":"val unit: TimeUnit","description":"tv.blademaker.slash.ratelimit.RateLimit.unit","location":"-slash/tv.blademaker.slash.ratelimit/-rate-limit/unit.html","searchKeys":["unit","val unit: TimeUnit","tv.blademaker.slash.ratelimit.RateLimit.unit"]},{"name":"val user: Array<Permission>","description":"tv.blademaker.slash.annotations.Permissions.user","location":"-slash/tv.blademaker.slash.annotations/-permissions/user.html","searchKeys":["user","val user: Array<Permission>","tv.blademaker.slash.annotations.Permissions.user"]},{"name":"val user: List<UserCommand>","description":"tv.blademaker.slash.internal.Registry.user","location":"-slash/tv.blademaker.slash.internal/-registry/user.html","searchKeys":["user","val user: List<UserCommand>","tv.blademaker.slash.internal.Registry.user"]},{"name":"val userCommands: List<UserCommand>","description":"tv.blademaker.slash.DiscoveryResult.userCommands","location":"-slash/tv.blademaker.slash/-discovery-result/user-commands.html","searchKeys":["userCommands","val userCommands: List<UserCommand>","tv.blademaker.slash.DiscoveryResult.userCommands"]},{"name":"val value: String","description":"tv.blademaker.slash.annotations.OptionName.value","location":"-slash/tv.blademaker.slash.annotations/-option-name/value.html","searchKeys":["value","val value: String","tv.blademaker.slash.annotations.OptionName.value"]},{"name":"var actionRows: Collection<ActionRow>?","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration.actionRows","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/action-rows.html","searchKeys":["actionRows","var actionRows: Collection<ActionRow>?","tv.blademaker.slash.context.actions.ContextAction.Configuration.actionRows"]},{"name":"var baseName: String","description":"tv.blademaker.slash.metrics.MetricsStrategy.baseName","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/base-name.html","searchKeys":["baseName","var baseName: String","tv.blademaker.slash.metrics.MetricsStrategy.baseName"]},{"name":"var ephemeral: Boolean","description":"tv.blademaker.slash.context.actions.ContextAction.Configuration.ephemeral","location":"-slash/tv.blademaker.slash.context.actions/-context-action/-configuration/ephemeral.html","searchKeys":["ephemeral","var ephemeral: Boolean","tv.blademaker.slash.context.actions.ContextAction.Configuration.ephemeral"]},{"name":"var executedCommands: Boolean","description":"tv.blademaker.slash.metrics.MetricsStrategy.executedCommands","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/executed-commands.html","searchKeys":["executedCommands","var executedCommands: Boolean","tv.blademaker.slash.metrics.MetricsStrategy.executedCommands"]},{"name":"var failedCommands: Boolean","description":"tv.blademaker.slash.metrics.MetricsStrategy.failedCommands","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/failed-commands.html","searchKeys":["failedCommands","var failedCommands: Boolean","tv.blademaker.slash.metrics.MetricsStrategy.failedCommands"]},{"name":"var measureTime: Boolean","description":"tv.blademaker.slash.metrics.MetricsStrategy.measureTime","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/measure-time.html","searchKeys":["measureTime","var measureTime: Boolean","tv.blademaker.slash.metrics.MetricsStrategy.measureTime"]},{"name":"var successfulCommands: Boolean","description":"tv.blademaker.slash.metrics.MetricsStrategy.successfulCommands","location":"-slash/tv.blademaker.slash.metrics/-metrics-strategy/successful-commands.html","searchKeys":["successfulCommands","var successfulCommands: Boolean","tv.blademaker.slash.metrics.MetricsStrategy.successfulCommands"]}]
