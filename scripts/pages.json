[{"name":"BOOLEAN(Boolean::class, BooleanOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.BOOLEAN","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN(Boolean::class, BooleanOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.BOOLEAN"]},{"name":"BOT()","description":"tv.blademaker.slash.api.PermissionTarget.BOT","location":"-slash/tv.blademaker.slash.api/-permission-target/-b-o-t/index.html","searchKeys":["BOT","BOT()","tv.blademaker.slash.api.PermissionTarget.BOT"]},{"name":"DOUBLE(Double::class, DoubleOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.DOUBLE","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-d-o-u-b-l-e/index.html","searchKeys":["DOUBLE","DOUBLE(Double::class, DoubleOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.DOUBLE"]},{"name":"FLOAT(Float::class, FloatOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.FLOAT","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-f-l-o-a-t/index.html","searchKeys":["FLOAT","FLOAT(Float::class, FloatOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.FLOAT"]},{"name":"GUILD_CHANNEL(GuildChannel::class, GuildChannelOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-g-u-i-l-d_-c-h-a-n-n-e-l/index.html","searchKeys":["GUILD_CHANNEL","GUILD_CHANNEL(GuildChannel::class, GuildChannelOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.GUILD_CHANNEL"]},{"name":"INTEGER(Int::class, IntOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.INTEGER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-i-n-t-e-g-e-r/index.html","searchKeys":["INTEGER","INTEGER(Int::class, IntOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.INTEGER"]},{"name":"LONG(Long::class, LongOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.LONG","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-l-o-n-g/index.html","searchKeys":["LONG","LONG(Long::class, LongOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.LONG"]},{"name":"MEMBER(Member::class, MemberOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.MEMBER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-m-e-m-b-e-r/index.html","searchKeys":["MEMBER","MEMBER(Member::class, MemberOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.MEMBER"]},{"name":"MESSAGE_CHANNEL(String::class, MessageChannelOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.MESSAGE_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-m-e-s-s-a-g-e_-c-h-a-n-n-e-l/index.html","searchKeys":["MESSAGE_CHANNEL","MESSAGE_CHANNEL(String::class, MessageChannelOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.MESSAGE_CHANNEL"]},{"name":"ROLE(Role::class, RoleOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.ROLE","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-r-o-l-e/index.html","searchKeys":["ROLE","ROLE(Role::class, RoleOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.ROLE"]},{"name":"STRING(String::class, StringOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.STRING","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING(String::class, StringOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.STRING"]},{"name":"TEXT_CHANNEL(TextChannel::class, TextChannelOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.TEXT_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-t-e-x-t_-c-h-a-n-n-e-l/index.html","searchKeys":["TEXT_CHANNEL","TEXT_CHANNEL(TextChannel::class, TextChannelOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.TEXT_CHANNEL"]},{"name":"USER()","description":"tv.blademaker.slash.api.PermissionTarget.USER","location":"-slash/tv.blademaker.slash.api/-permission-target/-u-s-e-r/index.html","searchKeys":["USER","USER()","tv.blademaker.slash.api.PermissionTarget.USER"]},{"name":"USER(User::class, UserOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.USER","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-u-s-e-r/index.html","searchKeys":["USER","USER(User::class, UserOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.USER"]},{"name":"VOICE_CHANNEL(VoiceChannel::class, VoiceChannelOptionConverter)","description":"tv.blademaker.slash.internal.ValidOptionTypes.VOICE_CHANNEL","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-v-o-i-c-e_-c-h-a-n-n-e-l/index.html","searchKeys":["VOICE_CHANNEL","VOICE_CHANNEL(VoiceChannel::class, VoiceChannelOptionConverter)","tv.blademaker.slash.internal.ValidOptionTypes.VOICE_CHANNEL"]},{"name":"abstract class BaseSlashCommand(commandName: String)","description":"tv.blademaker.slash.api.BaseSlashCommand","location":"-slash/tv.blademaker.slash.api/-base-slash-command/index.html","searchKeys":["BaseSlashCommand","abstract class BaseSlashCommand(commandName: String)","tv.blademaker.slash.api.BaseSlashCommand"]},{"name":"abstract fun convert(optionMapping: OptionMapping?): T?","description":"tv.blademaker.slash.internal.OptionConverter.convert","location":"-slash/tv.blademaker.slash.internal/-option-converter/convert.html","searchKeys":["convert","abstract fun convert(optionMapping: OptionMapping?): T?","tv.blademaker.slash.internal.OptionConverter.convert"]},{"name":"abstract fun onSlashCommandEvent(event: SlashCommandEvent)","description":"tv.blademaker.slash.api.SlashCommandClient.onSlashCommandEvent","location":"-slash/tv.blademaker.slash.api/-slash-command-client/on-slash-command-event.html","searchKeys":["onSlashCommandEvent","abstract fun onSlashCommandEvent(event: SlashCommandEvent)","tv.blademaker.slash.api.SlashCommandClient.onSlashCommandEvent"]},{"name":"abstract fun reply(): ReplyAction","description":"tv.blademaker.slash.api.actions.ContextAction.reply","location":"-slash/tv.blademaker.slash.api.actions/-context-action/reply.html","searchKeys":["reply","abstract fun reply(): ReplyAction","tv.blademaker.slash.api.actions.ContextAction.reply"]},{"name":"abstract fun send(): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.actions.ContextAction.send","location":"-slash/tv.blademaker.slash.api.actions/-context-action/send.html","searchKeys":["send","abstract fun send(): WebhookMessageAction<Message>","tv.blademaker.slash.api.actions.ContextAction.send"]},{"name":"abstract val commandClient: SlashCommandClient","description":"tv.blademaker.slash.api.SlashCommandContext.commandClient","location":"-slash/tv.blademaker.slash.api/-slash-command-context/command-client.html","searchKeys":["commandClient","abstract val commandClient: SlashCommandClient","tv.blademaker.slash.api.SlashCommandContext.commandClient"]},{"name":"abstract val ctx: SlashCommandContext","description":"tv.blademaker.slash.api.actions.ContextAction.ctx","location":"-slash/tv.blademaker.slash.api.actions/-context-action/ctx.html","searchKeys":["ctx","abstract val ctx: SlashCommandContext","tv.blademaker.slash.api.actions.ContextAction.ctx"]},{"name":"abstract val event: SlashCommandEvent","description":"tv.blademaker.slash.api.SlashCommandContext.event","location":"-slash/tv.blademaker.slash.api/-slash-command-context/event.html","searchKeys":["event","abstract val event: SlashCommandEvent","tv.blademaker.slash.api.SlashCommandContext.event"]},{"name":"abstract val original: T","description":"tv.blademaker.slash.api.actions.ContextAction.original","location":"-slash/tv.blademaker.slash.api.actions/-context-action/original.html","searchKeys":["original","abstract val original: T","tv.blademaker.slash.api.actions.ContextAction.original"]},{"name":"abstract val registry: List<BaseSlashCommand>","description":"tv.blademaker.slash.api.SlashCommandClient.registry","location":"-slash/tv.blademaker.slash.api/-slash-command-client/registry.html","searchKeys":["registry","abstract val registry: List<BaseSlashCommand>","tv.blademaker.slash.api.SlashCommandClient.registry"]},{"name":"abstract var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.api.SlashCommandContext.extra","location":"-slash/tv.blademaker.slash.api/-slash-command-context/extra.html","searchKeys":["extra","abstract var extra: AtomicReference<Any?>","tv.blademaker.slash.api.SlashCommandContext.extra"]},{"name":"annotation class OptionName(value: String)","description":"tv.blademaker.slash.api.annotations.OptionName","location":"-slash/tv.blademaker.slash.api.annotations/-option-name/index.html","searchKeys":["OptionName","annotation class OptionName(value: String)","tv.blademaker.slash.api.annotations.OptionName"]},{"name":"annotation class Permissions(user: Array<Permission>, bot: Array<Permission>)","description":"tv.blademaker.slash.api.annotations.Permissions","location":"-slash/tv.blademaker.slash.api.annotations/-permissions/index.html","searchKeys":["Permissions","annotation class Permissions(user: Array<Permission>, bot: Array<Permission>)","tv.blademaker.slash.api.annotations.Permissions"]},{"name":"annotation class SlashCommand(name: String, group: String)","description":"tv.blademaker.slash.api.annotations.SlashCommand","location":"-slash/tv.blademaker.slash.api.annotations/-slash-command/index.html","searchKeys":["SlashCommand","annotation class SlashCommand(name: String, group: String)","tv.blademaker.slash.api.annotations.SlashCommand"]},{"name":"class EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed) : ContextAction<MessageEmbed> ","description":"tv.blademaker.slash.api.actions.EmbedContextAction","location":"-slash/tv.blademaker.slash.api.actions/-embed-context-action/index.html","searchKeys":["EmbedContextAction","class EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed) : ContextAction<MessageEmbed> ","tv.blademaker.slash.api.actions.EmbedContextAction"]},{"name":"class MessageContextAction(ctx: SlashCommandContext, original: Message) : ContextAction<Message> ","description":"tv.blademaker.slash.api.actions.MessageContextAction","location":"-slash/tv.blademaker.slash.api.actions/-message-context-action/index.html","searchKeys":["MessageContextAction","class MessageContextAction(ctx: SlashCommandContext, original: Message) : ContextAction<Message> ","tv.blademaker.slash.api.actions.MessageContextAction"]},{"name":"class PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>) : RuntimeException","description":"tv.blademaker.slash.api.exceptions.PermissionsLackException","location":"-slash/tv.blademaker.slash.api.exceptions/-permissions-lack-exception/index.html","searchKeys":["PermissionsLackException","class PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>) : RuntimeException","tv.blademaker.slash.api.exceptions.PermissionsLackException"]},{"name":"class SlashCommandContextImpl(commandClient: SlashCommandClient, event: SlashCommandEvent) : SlashCommandContext","description":"tv.blademaker.slash.api.SlashCommandContextImpl","location":"-slash/tv.blademaker.slash.api/-slash-command-context-impl/index.html","searchKeys":["SlashCommandContextImpl","class SlashCommandContextImpl(commandClient: SlashCommandClient, event: SlashCommandEvent) : SlashCommandContext","tv.blademaker.slash.api.SlashCommandContextImpl"]},{"name":"enum PermissionTarget : Enum<PermissionTarget> ","description":"tv.blademaker.slash.api.PermissionTarget","location":"-slash/tv.blademaker.slash.api/-permission-target/index.html","searchKeys":["PermissionTarget","enum PermissionTarget : Enum<PermissionTarget> ","tv.blademaker.slash.api.PermissionTarget"]},{"name":"enum ValidOptionTypes : Enum<ValidOptionTypes> ","description":"tv.blademaker.slash.internal.ValidOptionTypes","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/index.html","searchKeys":["ValidOptionTypes","enum ValidOptionTypes : Enum<ValidOptionTypes> ","tv.blademaker.slash.internal.ValidOptionTypes"]},{"name":"fun BaseSlashCommand(commandName: String)","description":"tv.blademaker.slash.api.BaseSlashCommand.BaseSlashCommand","location":"-slash/tv.blademaker.slash.api/-base-slash-command/-base-slash-command.html","searchKeys":["BaseSlashCommand","fun BaseSlashCommand(commandName: String)","tv.blademaker.slash.api.BaseSlashCommand.BaseSlashCommand"]},{"name":"fun DefaultShardManagerBuilder.setSlashCommandClient(slashCommandClient: SlashCommandClient)","description":"tv.blademaker.slash.extensions.setSlashCommandClient","location":"-slash/tv.blademaker.slash.extensions/set-slash-command-client.html","searchKeys":["setSlashCommandClient","fun DefaultShardManagerBuilder.setSlashCommandClient(slashCommandClient: SlashCommandClient)","tv.blademaker.slash.extensions.setSlashCommandClient"]},{"name":"fun DefaultSlashCommandClient(packageName: String)","description":"tv.blademaker.slash.api.DefaultSlashCommandClient.DefaultSlashCommandClient","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/-default-slash-command-client.html","searchKeys":["DefaultSlashCommandClient","fun DefaultSlashCommandClient(packageName: String)","tv.blademaker.slash.api.DefaultSlashCommandClient.DefaultSlashCommandClient"]},{"name":"fun EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed)","description":"tv.blademaker.slash.api.actions.EmbedContextAction.EmbedContextAction","location":"-slash/tv.blademaker.slash.api.actions/-embed-context-action/-embed-context-action.html","searchKeys":["EmbedContextAction","fun EmbedContextAction(ctx: SlashCommandContext, original: MessageEmbed)","tv.blademaker.slash.api.actions.EmbedContextAction.EmbedContextAction"]},{"name":"fun JDA.setSlashCommandClient(slashCommandClient: SlashCommandClient)","description":"tv.blademaker.slash.extensions.setSlashCommandClient","location":"-slash/tv.blademaker.slash.extensions/set-slash-command-client.html","searchKeys":["setSlashCommandClient","fun JDA.setSlashCommandClient(slashCommandClient: SlashCommandClient)","tv.blademaker.slash.extensions.setSlashCommandClient"]},{"name":"fun JDABuilder.setSlashCommandClient(slashCommandClient: SlashCommandClient)","description":"tv.blademaker.slash.extensions.setSlashCommandClient","location":"-slash/tv.blademaker.slash.extensions/set-slash-command-client.html","searchKeys":["setSlashCommandClient","fun JDABuilder.setSlashCommandClient(slashCommandClient: SlashCommandClient)","tv.blademaker.slash.extensions.setSlashCommandClient"]},{"name":"fun MessageContextAction(ctx: SlashCommandContext, original: Message)","description":"tv.blademaker.slash.api.actions.MessageContextAction.MessageContextAction","location":"-slash/tv.blademaker.slash.api.actions/-message-context-action/-message-context-action.html","searchKeys":["MessageContextAction","fun MessageContextAction(ctx: SlashCommandContext, original: Message)","tv.blademaker.slash.api.actions.MessageContextAction.MessageContextAction"]},{"name":"fun OptionName(value: String)","description":"tv.blademaker.slash.api.annotations.OptionName.OptionName","location":"-slash/tv.blademaker.slash.api.annotations/-option-name/-option-name.html","searchKeys":["OptionName","fun OptionName(value: String)","tv.blademaker.slash.api.annotations.OptionName.OptionName"]},{"name":"fun Permissions(user: Array<Permission> = [], bot: Array<Permission> = [])","description":"tv.blademaker.slash.api.annotations.Permissions.Permissions","location":"-slash/tv.blademaker.slash.api.annotations/-permissions/-permissions.html","searchKeys":["Permissions","fun Permissions(user: Array<Permission> = [], bot: Array<Permission> = [])","tv.blademaker.slash.api.annotations.Permissions.Permissions"]},{"name":"fun PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>)","description":"tv.blademaker.slash.api.exceptions.PermissionsLackException.PermissionsLackException","location":"-slash/tv.blademaker.slash.api.exceptions/-permissions-lack-exception/-permissions-lack-exception.html","searchKeys":["PermissionsLackException","fun PermissionsLackException(context: SlashCommandContext, target: PermissionTarget, permissions: Array<Permission>)","tv.blademaker.slash.api.exceptions.PermissionsLackException.PermissionsLackException"]},{"name":"fun RestAction<*>.asEphemeral(): RestAction<*>","description":"tv.blademaker.slash.extensions.asEphemeral","location":"-slash/tv.blademaker.slash.extensions/as-ephemeral.html","searchKeys":["asEphemeral","fun RestAction<*>.asEphemeral(): RestAction<*>","tv.blademaker.slash.extensions.asEphemeral"]},{"name":"fun RestAction<*>.asEphemeral(): RestAction<*>","description":"tv.blademaker.slash.internal.SlashUtils.asEphemeral","location":"-slash/tv.blademaker.slash.internal/-slash-utils/as-ephemeral.html","searchKeys":["asEphemeral","fun RestAction<*>.asEphemeral(): RestAction<*>","tv.blademaker.slash.internal.SlashUtils.asEphemeral"]},{"name":"fun ShardManager.setSlashCommandClient(slashCommandClient: SlashCommandClient)","description":"tv.blademaker.slash.extensions.setSlashCommandClient","location":"-slash/tv.blademaker.slash.extensions/set-slash-command-client.html","searchKeys":["setSlashCommandClient","fun ShardManager.setSlashCommandClient(slashCommandClient: SlashCommandClient)","tv.blademaker.slash.extensions.setSlashCommandClient"]},{"name":"fun SlashCommand(name: String = \"\", group: String = \"\")","description":"tv.blademaker.slash.api.annotations.SlashCommand.SlashCommand","location":"-slash/tv.blademaker.slash.api.annotations/-slash-command/-slash-command.html","searchKeys":["SlashCommand","fun SlashCommand(name: String = \"\", group: String = \"\")","tv.blademaker.slash.api.annotations.SlashCommand.SlashCommand"]},{"name":"fun SlashCommandContextImpl(commandClient: SlashCommandClient, event: SlashCommandEvent)","description":"tv.blademaker.slash.api.SlashCommandContextImpl.SlashCommandContextImpl","location":"-slash/tv.blademaker.slash.api/-slash-command-context-impl/-slash-command-context-impl.html","searchKeys":["SlashCommandContextImpl","fun SlashCommandContextImpl(commandClient: SlashCommandClient, event: SlashCommandEvent)","tv.blademaker.slash.api.SlashCommandContextImpl.SlashCommandContextImpl"]},{"name":"fun addCheck(check: CommandExecutionCheck)","description":"tv.blademaker.slash.api.BaseSlashCommand.addCheck","location":"-slash/tv.blademaker.slash.api/-base-slash-command/add-check.html","searchKeys":["addCheck","fun addCheck(check: CommandExecutionCheck)","tv.blademaker.slash.api.BaseSlashCommand.addCheck"]},{"name":"fun addChecks(checks: Collection<CommandExecutionCheck>)","description":"tv.blademaker.slash.api.BaseSlashCommand.addChecks","location":"-slash/tv.blademaker.slash.api/-base-slash-command/add-checks.html","searchKeys":["addChecks","fun addChecks(checks: Collection<CommandExecutionCheck>)","tv.blademaker.slash.api.BaseSlashCommand.addChecks"]},{"name":"fun convert(option: OptionMapping?): Any?","description":"tv.blademaker.slash.internal.ValidOptionTypes.convert","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/convert.html","searchKeys":["convert","fun convert(option: OptionMapping?): Any?","tv.blademaker.slash.internal.ValidOptionTypes.convert"]},{"name":"fun discoverSlashCommands(packageName: String): List<BaseSlashCommand>","description":"tv.blademaker.slash.internal.SlashUtils.discoverSlashCommands","location":"-slash/tv.blademaker.slash.internal/-slash-utils/discover-slash-commands.html","searchKeys":["discoverSlashCommands","fun discoverSlashCommands(packageName: String): List<BaseSlashCommand>","tv.blademaker.slash.internal.SlashUtils.discoverSlashCommands"]},{"name":"fun get(type: KType): ValidOptionTypes?","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion.get","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/get.html","searchKeys":["get","fun get(type: KType): ValidOptionTypes?","tv.blademaker.slash.internal.ValidOptionTypes.Companion.get"]},{"name":"fun isValidType(type: KClassifier?): Boolean","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion.isValidType","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/is-valid-type.html","searchKeys":["isValidType","fun isValidType(type: KClassifier?): Boolean","tv.blademaker.slash.internal.ValidOptionTypes.Companion.isValidType"]},{"name":"fun removeCheck(check: CommandExecutionCheck)","description":"tv.blademaker.slash.api.BaseSlashCommand.removeCheck","location":"-slash/tv.blademaker.slash.api/-base-slash-command/remove-check.html","searchKeys":["removeCheck","fun removeCheck(check: CommandExecutionCheck)","tv.blademaker.slash.api.BaseSlashCommand.removeCheck"]},{"name":"fun removeChecks(checks: Collection<CommandExecutionCheck>)","description":"tv.blademaker.slash.api.BaseSlashCommand.removeChecks","location":"-slash/tv.blademaker.slash.api/-base-slash-command/remove-checks.html","searchKeys":["removeChecks","fun removeChecks(checks: Collection<CommandExecutionCheck>)","tv.blademaker.slash.api.BaseSlashCommand.removeChecks"]},{"name":"interface ContextAction<T>","description":"tv.blademaker.slash.api.actions.ContextAction","location":"-slash/tv.blademaker.slash.api.actions/-context-action/index.html","searchKeys":["ContextAction","interface ContextAction<T>","tv.blademaker.slash.api.actions.ContextAction"]},{"name":"interface OptionConverter<T : Any>","description":"tv.blademaker.slash.internal.OptionConverter","location":"-slash/tv.blademaker.slash.internal/-option-converter/index.html","searchKeys":["OptionConverter","interface OptionConverter<T : Any>","tv.blademaker.slash.internal.OptionConverter"]},{"name":"interface SlashCommandClient : EventListener","description":"tv.blademaker.slash.api.SlashCommandClient","location":"-slash/tv.blademaker.slash.api/-slash-command-client/index.html","searchKeys":["SlashCommandClient","interface SlashCommandClient : EventListener","tv.blademaker.slash.api.SlashCommandClient"]},{"name":"interface SlashCommandContext","description":"tv.blademaker.slash.api.SlashCommandContext","location":"-slash/tv.blademaker.slash.api/-slash-command-context/index.html","searchKeys":["SlashCommandContext","interface SlashCommandContext","tv.blademaker.slash.api.SlashCommandContext"]},{"name":"object Companion","description":"tv.blademaker.slash.api.actions.ContextAction.Companion","location":"-slash/tv.blademaker.slash.api.actions/-context-action/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.api.actions.ContextAction.Companion"]},{"name":"object Companion","description":"tv.blademaker.slash.internal.ValidOptionTypes.Companion","location":"-slash/tv.blademaker.slash.internal/-valid-option-types/-companion/index.html","searchKeys":["Companion","object Companion","tv.blademaker.slash.internal.ValidOptionTypes.Companion"]},{"name":"object SlashUtils","description":"tv.blademaker.slash.internal.SlashUtils","location":"-slash/tv.blademaker.slash.internal/-slash-utils/index.html","searchKeys":["SlashUtils","object SlashUtils","tv.blademaker.slash.internal.SlashUtils"]},{"name":"object UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","description":"tv.blademaker.slash.internal.UncaughtExceptionHandler","location":"-slash/tv.blademaker.slash.internal/-uncaught-exception-handler/index.html","searchKeys":["UncaughtExceptionHandler","object UncaughtExceptionHandler : Thread.UncaughtExceptionHandler","tv.blademaker.slash.internal.UncaughtExceptionHandler"]},{"name":"open class DefaultSlashCommandClient(packageName: String) : SlashCommandClient, CoroutineScope","description":"tv.blademaker.slash.api.DefaultSlashCommandClient","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/index.html","searchKeys":["DefaultSlashCommandClient","open class DefaultSlashCommandClient(packageName: String) : SlashCommandClient, CoroutineScope","tv.blademaker.slash.api.DefaultSlashCommandClient"]},{"name":"open fun acknowledge(ephemeral: Boolean = false): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.acknowledge","location":"-slash/tv.blademaker.slash.api/-slash-command-context/acknowledge.html","searchKeys":["acknowledge","open fun acknowledge(ephemeral: Boolean = false): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.acknowledge"]},{"name":"open fun embed(builder: EmbedBuilder.() -> Unit): EmbedContextAction","description":"tv.blademaker.slash.api.SlashCommandContext.embed","location":"-slash/tv.blademaker.slash.api/-slash-command-context/embed.html","searchKeys":["embed","open fun embed(builder: EmbedBuilder.() -> Unit): EmbedContextAction","tv.blademaker.slash.api.SlashCommandContext.embed"]},{"name":"open fun getCommand(name: String): BaseSlashCommand?","description":"tv.blademaker.slash.api.SlashCommandClient.getCommand","location":"-slash/tv.blademaker.slash.api/-slash-command-client/get-command.html","searchKeys":["getCommand","open fun getCommand(name: String): BaseSlashCommand?","tv.blademaker.slash.api.SlashCommandClient.getCommand"]},{"name":"open fun getOption(name: String): OptionMapping?","description":"tv.blademaker.slash.api.SlashCommandContext.getOption","location":"-slash/tv.blademaker.slash.api/-slash-command-context/get-option.html","searchKeys":["getOption","open fun getOption(name: String): OptionMapping?","tv.blademaker.slash.api.SlashCommandContext.getOption"]},{"name":"open fun message(builder: MessageBuilder.() -> Unit): MessageContextAction","description":"tv.blademaker.slash.api.SlashCommandContext.message","location":"-slash/tv.blademaker.slash.api/-slash-command-context/message.html","searchKeys":["message","open fun message(builder: MessageBuilder.() -> Unit): MessageContextAction","tv.blademaker.slash.api.SlashCommandContext.message"]},{"name":"open fun onGenericException(context: SlashCommandContext, command: BaseSlashCommand, ex: Exception)","description":"tv.blademaker.slash.api.DefaultSlashCommandClient.onGenericException","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/on-generic-exception.html","searchKeys":["onGenericException","open fun onGenericException(context: SlashCommandContext, command: BaseSlashCommand, ex: Exception)","tv.blademaker.slash.api.DefaultSlashCommandClient.onGenericException"]},{"name":"open fun onPermissionsLackException(ex: PermissionsLackException)","description":"tv.blademaker.slash.api.DefaultSlashCommandClient.onPermissionsLackException","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/on-permissions-lack-exception.html","searchKeys":["onPermissionsLackException","open fun onPermissionsLackException(ex: PermissionsLackException)","tv.blademaker.slash.api.DefaultSlashCommandClient.onPermissionsLackException"]},{"name":"open fun replyEmbed(builder: EmbedBuilder): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.api/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(builder: EmbedBuilder): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.replyEmbed"]},{"name":"open fun replyEmbed(builder: EmbedBuilder.() -> Unit): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.api/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(builder: EmbedBuilder.() -> Unit): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.replyEmbed"]},{"name":"open fun replyEmbed(embed: MessageEmbed): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.replyEmbed","location":"-slash/tv.blademaker.slash.api/-slash-command-context/reply-embed.html","searchKeys":["replyEmbed","open fun replyEmbed(embed: MessageEmbed): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.replyEmbed"]},{"name":"open fun replyMessage(builder: MessageBuilder): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(builder: MessageBuilder): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(builder: MessageBuilder.() -> Unit): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(builder: MessageBuilder.() -> Unit): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(content: String): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(content: String): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.replyMessage"]},{"name":"open fun replyMessage(message: Message): ReplyAction","description":"tv.blademaker.slash.api.SlashCommandContext.replyMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/reply-message.html","searchKeys":["replyMessage","open fun replyMessage(message: Message): ReplyAction","tv.blademaker.slash.api.SlashCommandContext.replyMessage"]},{"name":"open fun sendEmbed(builder: EmbedBuilder): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.api/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(builder: EmbedBuilder): WebhookMessageAction<Message>","tv.blademaker.slash.api.SlashCommandContext.sendEmbed"]},{"name":"open fun sendEmbed(builder: EmbedBuilder.() -> Unit): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.api/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(builder: EmbedBuilder.() -> Unit): WebhookMessageAction<Message>","tv.blademaker.slash.api.SlashCommandContext.sendEmbed"]},{"name":"open fun sendEmbed(embed: MessageEmbed): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.SlashCommandContext.sendEmbed","location":"-slash/tv.blademaker.slash.api/-slash-command-context/send-embed.html","searchKeys":["sendEmbed","open fun sendEmbed(embed: MessageEmbed): WebhookMessageAction<Message>","tv.blademaker.slash.api.SlashCommandContext.sendEmbed"]},{"name":"open fun sendMessage(builder: MessageBuilder): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(builder: MessageBuilder): WebhookMessageAction<Message>","tv.blademaker.slash.api.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(builder: MessageBuilder.() -> Unit): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(builder: MessageBuilder.() -> Unit): WebhookMessageAction<Message>","tv.blademaker.slash.api.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(content: String): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(content: String): WebhookMessageAction<Message>","tv.blademaker.slash.api.SlashCommandContext.sendMessage"]},{"name":"open fun sendMessage(message: Message): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.SlashCommandContext.sendMessage","location":"-slash/tv.blademaker.slash.api/-slash-command-context/send-message.html","searchKeys":["sendMessage","open fun sendMessage(message: Message): WebhookMessageAction<Message>","tv.blademaker.slash.api.SlashCommandContext.sendMessage"]},{"name":"open fun withJDA(jda: JDA)","description":"tv.blademaker.slash.api.SlashCommandClient.withJDA","location":"-slash/tv.blademaker.slash.api/-slash-command-client/with-j-d-a.html","searchKeys":["withJDA","open fun withJDA(jda: JDA)","tv.blademaker.slash.api.SlashCommandClient.withJDA"]},{"name":"open fun withMetrics()","description":"tv.blademaker.slash.api.SlashCommandClient.withMetrics","location":"-slash/tv.blademaker.slash.api/-slash-command-client/with-metrics.html","searchKeys":["withMetrics","open fun withMetrics()","tv.blademaker.slash.api.SlashCommandClient.withMetrics"]},{"name":"open fun withShardManager(shardManager: ShardManager)","description":"tv.blademaker.slash.api.SlashCommandClient.withShardManager","location":"-slash/tv.blademaker.slash.api/-slash-command-client/with-shard-manager.html","searchKeys":["withShardManager","open fun withShardManager(shardManager: ShardManager)","tv.blademaker.slash.api.SlashCommandClient.withShardManager"]},{"name":"open override fun onEvent(event: GenericEvent)","description":"tv.blademaker.slash.api.SlashCommandClient.onEvent","location":"-slash/tv.blademaker.slash.api/-slash-command-client/on-event.html","searchKeys":["onEvent","open override fun onEvent(event: GenericEvent)","tv.blademaker.slash.api.SlashCommandClient.onEvent"]},{"name":"open override fun onSlashCommandEvent(event: SlashCommandEvent)","description":"tv.blademaker.slash.api.DefaultSlashCommandClient.onSlashCommandEvent","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/on-slash-command-event.html","searchKeys":["onSlashCommandEvent","open override fun onSlashCommandEvent(event: SlashCommandEvent)","tv.blademaker.slash.api.DefaultSlashCommandClient.onSlashCommandEvent"]},{"name":"open override fun reply(): ReplyAction","description":"tv.blademaker.slash.api.actions.EmbedContextAction.reply","location":"-slash/tv.blademaker.slash.api.actions/-embed-context-action/reply.html","searchKeys":["reply","open override fun reply(): ReplyAction","tv.blademaker.slash.api.actions.EmbedContextAction.reply"]},{"name":"open override fun reply(): ReplyAction","description":"tv.blademaker.slash.api.actions.MessageContextAction.reply","location":"-slash/tv.blademaker.slash.api.actions/-message-context-action/reply.html","searchKeys":["reply","open override fun reply(): ReplyAction","tv.blademaker.slash.api.actions.MessageContextAction.reply"]},{"name":"open override fun send(): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.actions.EmbedContextAction.send","location":"-slash/tv.blademaker.slash.api.actions/-embed-context-action/send.html","searchKeys":["send","open override fun send(): WebhookMessageAction<Message>","tv.blademaker.slash.api.actions.EmbedContextAction.send"]},{"name":"open override fun send(): WebhookMessageAction<Message>","description":"tv.blademaker.slash.api.actions.MessageContextAction.send","location":"-slash/tv.blademaker.slash.api.actions/-message-context-action/send.html","searchKeys":["send","open override fun send(): WebhookMessageAction<Message>","tv.blademaker.slash.api.actions.MessageContextAction.send"]},{"name":"open override fun uncaughtException(t: Thread, e: Throwable)","description":"tv.blademaker.slash.internal.UncaughtExceptionHandler.uncaughtException","location":"-slash/tv.blademaker.slash.internal/-uncaught-exception-handler/uncaught-exception.html","searchKeys":["uncaughtException","open override fun uncaughtException(t: Thread, e: Throwable)","tv.blademaker.slash.internal.UncaughtExceptionHandler.uncaughtException"]},{"name":"open override val commandClient: SlashCommandClient","description":"tv.blademaker.slash.api.SlashCommandContextImpl.commandClient","location":"-slash/tv.blademaker.slash.api/-slash-command-context-impl/command-client.html","searchKeys":["commandClient","open override val commandClient: SlashCommandClient","tv.blademaker.slash.api.SlashCommandContextImpl.commandClient"]},{"name":"open override val coroutineContext: CoroutineContext","description":"tv.blademaker.slash.api.DefaultSlashCommandClient.coroutineContext","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/coroutine-context.html","searchKeys":["coroutineContext","open override val coroutineContext: CoroutineContext","tv.blademaker.slash.api.DefaultSlashCommandClient.coroutineContext"]},{"name":"open override val ctx: SlashCommandContext","description":"tv.blademaker.slash.api.actions.EmbedContextAction.ctx","location":"-slash/tv.blademaker.slash.api.actions/-embed-context-action/ctx.html","searchKeys":["ctx","open override val ctx: SlashCommandContext","tv.blademaker.slash.api.actions.EmbedContextAction.ctx"]},{"name":"open override val ctx: SlashCommandContext","description":"tv.blademaker.slash.api.actions.MessageContextAction.ctx","location":"-slash/tv.blademaker.slash.api.actions/-message-context-action/ctx.html","searchKeys":["ctx","open override val ctx: SlashCommandContext","tv.blademaker.slash.api.actions.MessageContextAction.ctx"]},{"name":"open override val event: SlashCommandEvent","description":"tv.blademaker.slash.api.SlashCommandContextImpl.event","location":"-slash/tv.blademaker.slash.api/-slash-command-context-impl/event.html","searchKeys":["event","open override val event: SlashCommandEvent","tv.blademaker.slash.api.SlashCommandContextImpl.event"]},{"name":"open override val original: Message","description":"tv.blademaker.slash.api.actions.MessageContextAction.original","location":"-slash/tv.blademaker.slash.api.actions/-message-context-action/original.html","searchKeys":["original","open override val original: Message","tv.blademaker.slash.api.actions.MessageContextAction.original"]},{"name":"open override val original: MessageEmbed","description":"tv.blademaker.slash.api.actions.EmbedContextAction.original","location":"-slash/tv.blademaker.slash.api.actions/-embed-context-action/original.html","searchKeys":["original","open override val original: MessageEmbed","tv.blademaker.slash.api.actions.EmbedContextAction.original"]},{"name":"open override val registry: List<BaseSlashCommand>","description":"tv.blademaker.slash.api.DefaultSlashCommandClient.registry","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/registry.html","searchKeys":["registry","open override val registry: List<BaseSlashCommand>","tv.blademaker.slash.api.DefaultSlashCommandClient.registry"]},{"name":"open override var extra: AtomicReference<Any?>","description":"tv.blademaker.slash.api.SlashCommandContextImpl.extra","location":"-slash/tv.blademaker.slash.api/-slash-command-context-impl/extra.html","searchKeys":["extra","open override var extra: AtomicReference<Any?>","tv.blademaker.slash.api.SlashCommandContextImpl.extra"]},{"name":"open suspend fun createContext(event: SlashCommandEvent, command: BaseSlashCommand): SlashCommandContext","description":"tv.blademaker.slash.api.DefaultSlashCommandClient.createContext","location":"-slash/tv.blademaker.slash.api/-default-slash-command-client/create-context.html","searchKeys":["createContext","open suspend fun createContext(event: SlashCommandEvent, command: BaseSlashCommand): SlashCommandContext","tv.blademaker.slash.api.DefaultSlashCommandClient.createContext"]},{"name":"open suspend fun execute(ctx: SlashCommandContext)","description":"tv.blademaker.slash.api.BaseSlashCommand.execute","location":"-slash/tv.blademaker.slash.api/-base-slash-command/execute.html","searchKeys":["execute","open suspend fun execute(ctx: SlashCommandContext)","tv.blademaker.slash.api.BaseSlashCommand.execute"]},{"name":"open val author: User","description":"tv.blademaker.slash.api.SlashCommandContext.author","location":"-slash/tv.blademaker.slash.api/-slash-command-context/author.html","searchKeys":["author","open val author: User","tv.blademaker.slash.api.SlashCommandContext.author"]},{"name":"open val channel: TextChannel","description":"tv.blademaker.slash.api.SlashCommandContext.channel","location":"-slash/tv.blademaker.slash.api/-slash-command-context/channel.html","searchKeys":["channel","open val channel: TextChannel","tv.blademaker.slash.api.SlashCommandContext.channel"]},{"name":"open val guild: Guild","description":"tv.blademaker.slash.api.SlashCommandContext.guild","location":"-slash/tv.blademaker.slash.api/-slash-command-context/guild.html","searchKeys":["guild","open val guild: Guild","tv.blademaker.slash.api.SlashCommandContext.guild"]},{"name":"open val hook: InteractionHook","description":"tv.blademaker.slash.api.SlashCommandContext.hook","location":"-slash/tv.blademaker.slash.api/-slash-command-context/hook.html","searchKeys":["hook","open val hook: InteractionHook","tv.blademaker.slash.api.SlashCommandContext.hook"]},{"name":"open val isAcknowledged: Boolean","description":"tv.blademaker.slash.api.SlashCommandContext.isAcknowledged","location":"-slash/tv.blademaker.slash.api/-slash-command-context/is-acknowledged.html","searchKeys":["isAcknowledged","open val isAcknowledged: Boolean","tv.blademaker.slash.api.SlashCommandContext.isAcknowledged"]},{"name":"open val jda: JDA","description":"tv.blademaker.slash.api.SlashCommandContext.jda","location":"-slash/tv.blademaker.slash.api/-slash-command-context/jda.html","searchKeys":["jda","open val jda: JDA","tv.blademaker.slash.api.SlashCommandContext.jda"]},{"name":"open val member: Member","description":"tv.blademaker.slash.api.SlashCommandContext.member","location":"-slash/tv.blademaker.slash.api/-slash-command-context/member.html","searchKeys":["member","open val member: Member","tv.blademaker.slash.api.SlashCommandContext.member"]},{"name":"open val options: List<OptionMapping>","description":"tv.blademaker.slash.api.SlashCommandContext.options","location":"-slash/tv.blademaker.slash.api/-slash-command-context/options.html","searchKeys":["options","open val options: List<OptionMapping>","tv.blademaker.slash.api.SlashCommandContext.options"]},{"name":"open val selfMember: Member","description":"tv.blademaker.slash.api.SlashCommandContext.selfMember","location":"-slash/tv.blademaker.slash.api/-slash-command-context/self-member.html","searchKeys":["selfMember","open val selfMember: Member","tv.blademaker.slash.api.SlashCommandContext.selfMember"]},{"name":"val bot: Array<Permission>","description":"tv.blademaker.slash.api.annotations.Permissions.bot","location":"-slash/tv.blademaker.slash.api.annotations/-permissions/bot.html","searchKeys":["bot","val bot: Array<Permission>","tv.blademaker.slash.api.annotations.Permissions.bot"]},{"name":"val commandName: String","description":"tv.blademaker.slash.api.BaseSlashCommand.commandName","location":"-slash/tv.blademaker.slash.api/-base-slash-command/command-name.html","searchKeys":["commandName","val commandName: String","tv.blademaker.slash.api.BaseSlashCommand.commandName"]},{"name":"val context: SlashCommandContext","description":"tv.blademaker.slash.api.exceptions.PermissionsLackException.context","location":"-slash/tv.blademaker.slash.api.exceptions/-permissions-lack-exception/context.html","searchKeys":["context","val context: SlashCommandContext","tv.blademaker.slash.api.exceptions.PermissionsLackException.context"]},{"name":"val group: String","description":"tv.blademaker.slash.api.annotations.SlashCommand.group","location":"-slash/tv.blademaker.slash.api.annotations/-slash-command/group.html","searchKeys":["group","val group: String","tv.blademaker.slash.api.annotations.SlashCommand.group"]},{"name":"val name: String","description":"tv.blademaker.slash.api.annotations.SlashCommand.name","location":"-slash/tv.blademaker.slash.api.annotations/-slash-command/name.html","searchKeys":["name","val name: String","tv.blademaker.slash.api.annotations.SlashCommand.name"]},{"name":"val paths: List<String>","description":"tv.blademaker.slash.api.BaseSlashCommand.paths","location":"-slash/tv.blademaker.slash.api/-base-slash-command/paths.html","searchKeys":["paths","val paths: List<String>","tv.blademaker.slash.api.BaseSlashCommand.paths"]},{"name":"val permissions: Array<Permission>","description":"tv.blademaker.slash.api.exceptions.PermissionsLackException.permissions","location":"-slash/tv.blademaker.slash.api.exceptions/-permissions-lack-exception/permissions.html","searchKeys":["permissions","val permissions: Array<Permission>","tv.blademaker.slash.api.exceptions.PermissionsLackException.permissions"]},{"name":"val target: PermissionTarget","description":"tv.blademaker.slash.api.exceptions.PermissionsLackException.target","location":"-slash/tv.blademaker.slash.api.exceptions/-permissions-lack-exception/target.html","searchKeys":["target","val target: PermissionTarget","tv.blademaker.slash.api.exceptions.PermissionsLackException.target"]},{"name":"val user: Array<Permission>","description":"tv.blademaker.slash.api.annotations.Permissions.user","location":"-slash/tv.blademaker.slash.api.annotations/-permissions/user.html","searchKeys":["user","val user: Array<Permission>","tv.blademaker.slash.api.annotations.Permissions.user"]},{"name":"val value: String","description":"tv.blademaker.slash.api.annotations.OptionName.value","location":"-slash/tv.blademaker.slash.api.annotations/-option-name/value.html","searchKeys":["value","val value: String","tv.blademaker.slash.api.annotations.OptionName.value"]}]
